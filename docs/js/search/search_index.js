var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.276,1,2.352]],["body/interfaces/AbstractControllerOptions.html",[0,2.211,1,4.075,2,2.385,3,0.192,4,0.172,5,0.172,6,3.578,7,1.851,8,3.578,9,0.43,10,1.45,11,5.234,12,4.535,13,0.735,14,0.014,15,0.316,16,3.711,17,1.926,18,3.51,19,3.898,20,0.267,21,2.13,22,3.578,23,3.578,24,4.211,25,1.45,26,2.005,27,3.323,28,3.898,29,3.898,30,3.898,31,3.578,32,0.009,33,0.011,34,0.009]],["title/interfaces/AbstractControllerOptions-1.html",[0,1.065,1,1.963,35,2.085]],["body/interfaces/AbstractControllerOptions-1.html",[0,1.627,1,3.768,2,2.442,3,0.196,4,0.176,5,0.176,7,1.895,9,0.44,10,1.472,12,5.552,13,0.849,14,0.014,20,0.196,21,2.154,32,0.009,33,0.011,34,0.009,36,4.43,37,4.43,38,5.752,39,4.903,40,5.28,41,5.095,42,5.095,43,5.095]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.276,24,2.669]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,2.197,1,4.049,2,2.353,3,0.189,4,0.17,5,0.17,6,3.531,7,1.826,8,3.531,9,0.424,10,1.438,11,3.531,13,0.521,14,0.014,15,0.312,16,4.263,17,1.9,18,4.163,19,3.846,20,0.265,21,2.117,22,3.531,23,3.531,24,4.595,25,1.582,26,2.773,27,3.279,28,3.846,29,3.846,30,3.846,31,3.531,32,0.008,33,0.011,34,0.008]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.276,27,2.669]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,2.174,1,3.627,2,2.3,3,0.185,4,0.166,5,0.166,6,3.451,7,1.785,8,3.451,9,0.414,10,1.417,11,3.451,12,5.165,13,0.807,14,0.014,15,0.305,16,3.627,17,1.857,18,3.429,19,3.759,20,0.262,21,2.095,22,3.451,23,3.451,24,4.545,25,1.565,26,1.934,27,4.115,28,5.626,29,3.759,30,5.626,31,3.451,32,0.008,33,0.011,34,0.008]],["title/interfaces/AbstractModel.html",[0,1.276,44,3.13]],["body/interfaces/AbstractModel.html",[0,1.656,2,2.485,3,0.2,4,0.179,5,0.179,9,0.448,10,1.488,13,0.749,14,0.014,15,0.329,20,0.2,25,1.488,32,0.009,33,0.011,34,0.009,44,5.069,45,4.507,46,7.054,47,1.783,48,3.713,49,2.544,50,3.713,51,3.716,52,1.349,53,3.462]],["title/classes/AbstractService.html",[54,0.099,55,2.874]],["body/classes/AbstractService.html",[3,0.085,4,0.076,5,0.076,9,0.19,13,0.787,14,0.014,15,0.317,20,0.085,23,4.169,32,0.004,33,0.006,34,0.004,39,2.342,47,1.704,49,2.174,52,1.445,53,1.471,54,0.055,55,2.522,56,0.545,57,1.915,58,0.933,59,8.174,60,3.507,61,2.856,62,3.507,63,2.748,64,3.507,65,2.522,66,3.507,67,3.049,68,3.507,69,3.507,70,3.507,71,3.507,72,3.507,73,3.507,74,3.507,75,3.507,76,3.507,77,2.522,78,4.37,79,3.507,80,1.214,81,2.202,82,2.457,83,1.643,84,6.505,85,1.9,86,3.424,87,3.507,88,2.202,89,3.724,90,3.507,91,2.202,92,3.8,93,3.507,94,2.202,95,3.049,96,2.202,97,6.268,98,3.507,99,2.202,100,3.507,101,2.202,102,3.507,103,2.202,104,3.507,105,2.202,106,3.507,107,2.202,108,3.507,109,2.202,110,3.507,111,2.202,112,3.507,113,2.202,114,3.507,115,2.202,116,3.507,117,2.202,118,3.507,119,2.202,120,3.049,121,5.797,122,5.797,123,2.202,124,2.202,125,2.202,126,1.915,127,1.226,128,1.915,129,1.163,130,2.202]],["title/classes/AbstractVm.html",[54,0.099,131,3.13]],["body/classes/AbstractVm.html",[3,0.18,4,0.161,5,0.161,9,0.403,10,1.391,13,0.782,14,0.014,15,0.296,20,0.18,32,0.008,33,0.01,34,0.008,47,1.735,48,3.374,49,2.312,50,3.374,51,3.731,52,1.442,54,0.116,56,1.153,80,1.1,131,4.738,132,6.176,133,4.054,134,1.851,135,6.048,136,7.104,137,7.104,138,4.662,139,7.361,140,4.662,141,4.662,142,1.546]],["title/classes/AcctVerifyDto.html",[54,0.099,143,2.874]],["body/classes/AcctVerifyDto.html",[3,0.186,4,0.167,5,0.167,9,0.417,10,1.423,13,0.725,14,0.014,15,0.434,20,0.186,25,1.111,32,0.008,33,0.011,34,0.008,52,1.456,54,0.153,56,1.195,80,1.119,134,1.883,142,1.601,143,4.45,144,6.259,145,4.199,146,5.935,147,5.935,148,5.935,149,6.827,150,4.829,151,5.83,152,4.829,153,4.829,154,3.473,155,2.427,156,2.688,157,4.199,158,4.199,159,1.797]],["title/classes/ApiException.html",[54,0.099,160,2.224]],["body/classes/ApiException.html",[3,0.124,4,0.111,5,0.111,9,0.278,10,1.077,13,0.771,14,0.014,15,0.351,20,0.124,21,0.99,32,0.005,33,0.008,34,0.005,47,1.802,52,1.538,54,0.08,56,0.795,80,1.189,82,1.066,83,0.713,134,1.962,142,1.066,160,2.606,161,6.408,162,2.796,163,4.994,164,6.037,165,6.727,166,6.037,167,6.037,168,5.521,169,6.037,170,5.521,171,2.473,172,3.216,173,3.404,174,4.682,175,5.232,176,3.216,177,3.216,178,3.216,179,3.216,180,3.216,181,3.216,182,3.216,183,2.01,184,0.713,185,1.41,186,3.216,187,3.216,188,3.216,189,3.216,190,3.216,191,2.796,192,1.616,193,3.216,194,3.216,195,3.216,196,3.216,197,3.216,198,3.216,199,3.216]],["title/controllers/AppController.html",[7,1.486,200,2.874]],["body/controllers/AppController.html",[3,0.207,4,0.186,5,0.186,7,2.461,9,0.464,14,0.014,15,0.42,20,0.207,32,0.009,33,0.011,34,0.009,52,1.265,54,0.133,58,1.759,80,0.881,85,1.378,134,1.481,184,1.191,200,4.757,201,2.355,202,4.671,203,7.481,204,5.372,205,4.481,206,4.671,207,2.99,208,1.85,209,1.716,210,5.372]],["title/modules/AppModule.html",[211,1.276,212,2.874]],["body/modules/AppModule.html",[3,0.135,4,0.121,5,0.121,14,0.014,15,0.495,20,0.192,32,0.006,33,0.009,34,0.006,54,0.087,184,0.777,185,1.536,200,4.167,201,2.183,205,4.33,206,3.047,211,1.851,212,5.726,213,1.605,214,1.761,215,1.951,216,1.951,217,1.761,218,3.06,219,1.761,220,3.047,221,3.047,222,3.047,223,4.626,224,4.626,225,4.626,226,4.626,227,4.626,228,4.077,229,2.772,230,1.761,231,1.761,232,2.746,233,2.932,234,3.505,235,3.047,236,2.191,237,2.063,238,3.505,239,3.505,240,3.505,241,3.505,242,3.505,243,2.341,244,3.505,245,2.063,246,3.902,247,3.505,248,3.505,249,2.746,250,1.356,251,3.582,252,3.047,253,3.047,254,2.132,255,3.047,256,3.047,257,3.047,258,3.047,259,3.505,260,3.505,261,2.746,262,2.746,263,2.746,264,2.746,265,1.761]],["title/injectables/AppService.html",[205,2.498,266,1.143]],["body/injectables/AppService.html",[3,0.216,4,0.194,5,0.194,9,0.483,14,0.014,15,0.355,20,0.216,32,0.01,33,0.012,34,0.01,52,1.297,54,0.139,58,1.803,80,0.917,85,1.435,184,1.241,205,4.24,209,1.787,266,1.94,267,2.563,268,4.865,269,7.586,270,5.595,271,5.595,272,5.595]],["title/controllers/AuthController.html",[7,1.486,273,2.874]],["body/controllers/AuthController.html",[3,0.072,4,0.065,5,0.065,7,0.694,9,0.161,13,0.688,14,0.014,15,0.441,18,1.039,20,0.072,21,1.946,32,0.003,33,0.005,34,0.003,47,1.236,51,1.471,54,0.046,58,0.816,61,2.667,80,0.881,82,1.782,83,1.192,85,1.378,89,3.325,134,1.482,142,0.619,143,4.083,146,2.667,147,2.667,148,2.667,156,2.518,159,2.641,160,2.518,171,0.986,183,1.167,184,0.414,185,0.818,201,0.818,208,1.345,209,1.596,230,2.273,245,1.099,250,2.775,273,2.206,274,1.623,275,1.247,276,2.667,277,3.906,278,3.068,279,3.068,280,3.068,281,3.068,282,1.867,283,1.867,284,1.867,285,1.867,286,1.867,287,4.69,288,1.867,289,2.828,290,1.867,291,1.867,292,1.867,293,3.021,294,3.068,295,1.867,296,1.867,297,1.867,298,4.523,299,3.068,300,3.068,301,1.867,302,1.867,303,2.072,304,1.867,305,1.867,306,3.021,307,3.068,308,1.867,309,1.867,310,2.206,311,1.342,312,1.342,313,1.623,314,1.342,315,1.247,316,1.247,317,3.068,318,1.342,319,3.068,320,2.206,321,1.867,322,2.299,323,1.623,324,1.342,325,1.247,326,1.247,327,1.342,328,1.342,329,1.462,330,1.099,331,2.299,332,1.462,333,2.174,334,1.342,335,1.342,336,1.867,337,1.867,338,1.867,339,2.049,340,1.623,341,1.867,342,1.867,343,1.867,344,1.623,345,1.867,346,1.867,347,2.809,348,1.867,349,4.998,350,1.867,351,1.867,352,2.403,353,2.84,354,1.867,355,2.667,356,1.867,357,1.867,358,3.589,359,3.594,360,2.991,361,1.623,362,2.809,363,1.342,364,2.476,365,1.623,366,1.867,367,1.623,368,1.867,369,1.867,370,3.894,371,1.867,372,3.068,373,2.667,374,3.068,375,1.867,376,3.068,377,1.623,378,2.667,379,1.623,380,1.867,381,2.667,382,3.068,383,3.068,384,3.068,385,4.523,386,3.068,387,3.068,388,3.068,389,1.623,390,2.667,391,3.068,392,3.068,393,2.667,394,3.068,395,1.867,396,1.867,397,1.867,398,2.403,399,1.462,400,2.667,401,1.867,402,1.623,403,1.247,404,1.867,405,2.403,406,1.867,407,1.867,408,1.867,409,1.867]],["title/injectables/AuthHandler.html",[266,1.143,410,2.669]],["body/injectables/AuthHandler.html",[3,0.194,4,0.174,5,0.174,9,0.434,13,0.534,14,0.014,15,0.442,20,0.194,32,0.009,33,0.011,34,0.009,47,1.156,54,0.125,58,1.688,61,2.587,80,0.824,82,1.666,83,1.115,85,1.289,134,1.386,184,1.115,209,1.605,266,1.815,267,2.302,410,4.238,411,4.37,412,6.346,413,6.346,414,6.955,415,6.346,416,5.026,417,6.346,418,3.357,419,5.026,420,3.937,421,3.937,422,4.37,423,5.026,424,5.026,425,5.026,426,5.026]],["title/modules/AuthModule.html",[211,1.276,223,2.669]],["body/modules/AuthModule.html",[3,0.129,4,0.116,5,0.116,14,0.014,15,0.488,20,0.129,32,0.006,33,0.008,34,0.006,54,0.083,83,1.07,184,0.744,201,2.116,211,1.806,213,1.536,214,1.686,215,1.867,216,1.867,217,1.686,218,2.987,219,2.842,223,5.349,228,4.017,229,2.687,230,1.686,231,1.686,233,2.841,236,2.097,237,1.974,249,2.627,254,1.485,273,4.067,322,4.017,323,2.916,327,2.412,328,2.412,333,4.237,334,2.412,410,4.558,427,2.916,428,3.354,429,2.916,430,2.916,431,4.558,432,4.558,433,4.558,434,4.908,435,3.354,436,3.354,437,1.974,438,2.24,439,3.354,440,3.354,441,3.354,442,3.354,443,3.354,444,2.916,445,2.916,446,3.224,447,4.827,448,3.018,449,4.827,450,4.827,451,4.827,452,3.224,453,4.196]],["title/injectables/AuthService.html",[266,1.143,333,2.224]],["body/injectables/AuthService.html",[3,0.068,4,0.061,5,0.061,9,0.153,10,0.674,12,3.762,13,0.772,14,0.014,15,0.421,20,0.068,21,0.902,22,2.108,32,0.003,33,0.005,34,0.003,47,1.275,49,1.009,52,1.408,54,0.044,58,0.78,61,2.757,67,1.536,80,1.017,82,1.837,83,1.229,85,1.487,89,3.27,134,0.487,159,2.061,163,2.702,171,1.548,173,0.933,184,0.392,185,1.285,208,1.009,209,1.397,245,1.04,250,2.767,254,0.544,266,0.838,267,0.809,276,2.549,287,1.958,293,1.958,303,0.809,315,1.18,326,3.239,327,1.27,328,1.27,331,3.079,332,1.384,333,1.632,347,4.171,353,3.038,358,2.509,359,2.108,360,3.349,364,2.825,370,2.211,373,1.536,377,1.536,378,3.267,379,2.549,389,1.536,393,1.536,398,4.86,399,2.296,400,5.535,402,1.536,403,1.958,405,2.296,418,1.18,420,1.384,421,1.384,422,1.536,434,3.145,444,1.536,445,1.536,452,1.18,454,1.536,455,5.231,456,3.757,457,5.231,458,4.373,459,2.931,460,2.931,461,3.757,462,2.931,463,1.536,464,3.757,465,1.767,466,1.767,467,1.767,468,2.931,469,3.757,470,1.767,471,1.767,472,1.767,473,2.931,474,1.767,475,2.931,476,1.767,477,1.767,478,1.767,479,2.931,480,3.757,481,1.767,482,3.757,483,1.767,484,1.04,485,1.767,486,2.296,487,2.296,488,1.536,489,1.384,490,1.767,491,1.384,492,1.767,493,1.18,494,1.958,495,1.536,496,2.549,497,1.384,498,1.767,499,1.536,500,1.536,501,1.536,502,1.767,503,3.267,504,1.767,505,2.943,506,2.931,507,4.85,508,1.767,509,3.802,510,1.767,511,2.931,512,2.931,513,1.767,514,2.108,515,2.108,516,2.931,517,1.18,518,1.767,519,1.767,520,1.767,521,1.767,522,2.931,523,1.767,524,1.767,525,1.384,526,1.767,527,1.767,528,1.767,529,1.767,530,2.931,531,2.931,532,1.536,533,2.931,534,2.931,535,1.767,536,1.767,537,1.767,538,1.767,539,1.767,540,1.767,541,2.931]],["title/guards/AuthenticationGuard.html",[335,2.874,542,3.13]],["body/guards/AuthenticationGuard.html",[3,0.154,4,0.138,5,0.138,9,0.344,13,0.659,14,0.014,15,0.444,20,0.154,21,1.227,32,0.007,33,0.009,34,0.007,47,1.428,54,0.099,58,1.449,61,2.683,80,1.017,82,2.058,83,1.376,85,1.397,89,2.738,156,3.032,159,1.483,171,2.105,184,0.884,185,1.747,207,2.218,208,1.372,209,1.982,245,2.346,250,2.402,254,1.677,266,1.558,303,2.495,315,3.638,333,4.014,334,2.866,335,3.918,340,3.465,353,2.388,360,2.218,364,2.502,497,3.122,543,3.985,544,3.465,545,5.227,546,5.448,547,3.985,548,3.985,549,4.268,550,5.227,551,3.985,552,3.122,553,5.448,554,4.245,555,3.985,556,2.346,557,3.465,558,3.985,559,3.465,560,3.985,561,3.985,562,3.465,563,3.985]],["title/classes/BaseEntity.html",[54,0.099,129,2.11]],["body/classes/BaseEntity.html",[3,0.085,4,0.076,5,0.076,9,0.191,10,0.809,13,0.692,14,0.014,15,0.346,17,2.869,20,0.085,21,1.536,25,0.809,26,2.012,32,0.004,33,0.006,34,0.004,47,1.453,48,2.201,49,1.508,50,2.201,51,3.199,52,0.837,53,1.475,54,0.055,56,0.546,58,0.935,80,1.182,85,1.28,127,1.229,128,1.921,129,3.598,134,1.743,192,3.484,208,2.644,209,1.123,254,2.298,265,3.272,364,0.89,448,3.407,484,3.417,493,1.475,564,1.921,565,4.992,566,2.577,567,2.738,568,2.738,569,3.806,570,3.407,571,2.738,572,3.121,573,3.121,574,2.878,575,3.121,576,2.754,577,4.379,578,2.659,579,3.121,580,2.209,581,4.4,582,3.121,583,2.209,584,2.209,585,2.209,586,2.209,587,2.209,588,2.209,589,2.209,590,2.209,591,2.209,592,3.629,593,3.337,594,2.209,595,2.209,596,2.209,597,2.209,598,2.209,599,2.209,600,2.209,601,2.209,602,4.349,603,2.209,604,1.731,605,3.121,606,2.754,607,2.209,608,2.209,609,2.209,610,2.209,611,2.209,612,2.209,613,2.209,614,2.209,615,2.209,616,3.516,617,2.209,618,3.516,619,3.807,620,3.516]],["title/classes/BaseResDto.html",[54,0.099,621,2.874]],["body/classes/BaseResDto.html",[3,0.178,4,0.16,5,0.16,9,0.399,10,1.383,13,0.71,14,0.014,15,0.45,20,0.178,32,0.008,33,0.01,34,0.008,48,3.359,49,2.301,50,3.359,51,3.393,52,1.149,54,0.166,56,1.142,80,1.095,134,1.843,142,1.531,155,2.321,175,4.728,208,2.591,621,4.323,622,6.154,623,3.618,624,5.226,625,4.619,626,3.322,627,4.619,628,4.619,629,2.439,630,2.719,631,5.091,632,2.321,633,4.709,634,2.719,635,4.016]],["title/controllers/CategoriesController.html",[7,1.486,636,2.874]],["body/controllers/CategoriesController.html",[3,0.095,4,0.086,5,0.086,7,0.919,9,0.213,13,0.698,14,0.014,15,0.417,20,0.095,21,1.449,32,0.008,33,0.007,34,0.004,39,3.145,47,1.221,49,2.374,52,1.29,54,0.095,58,1.021,61,2.747,65,2.761,77,3.386,80,0.942,82,1.76,83,1.275,85,1.475,89,3.465,95,2.148,120,2.148,134,1.586,142,0.819,160,3.655,183,1.544,184,0.548,201,1.083,207,1.375,208,0.851,209,1.696,250,2.542,254,2.021,275,1.65,287,4.065,310,2.761,311,1.777,312,1.777,313,2.148,314,2.761,316,1.65,318,1.777,320,4.135,324,1.777,325,1.65,353,2.52,358,4.065,360,2.621,362,1.777,363,1.777,418,1.65,574,2.487,578,1.758,632,1.242,636,2.761,637,2.148,638,4.708,639,2.564,640,5.31,641,1.935,642,4.568,643,2.148,644,2.47,645,2.47,646,2.47,647,2.47,648,2.47,649,3.84,650,3.839,651,2.47,652,3.386,653,2.47,654,2.47,655,2.47,656,2.47,657,2.47,658,2.47,659,2.47,660,2.148,661,2.761,662,4.16,663,3.839,664,1.777,665,1.454,666,1.777,667,1.777,668,1.544,669,2.47,670,3.386,671,2.148,672,1.935,673,1.935,674,2.47,675,2.47,676,1.777,677,1.935,678,1.935,679,2.47,680,2.47,681,2.47,682,3.839,683,2.47,684,2.47,685,5.31,686,3.818,687,3.818,688,2.47,689,2.47,690,2.47,691,2.47,692,3.839,693,2.47,694,2.47,695,2.47,696,2.47,697,2.47,698,2.47,699,4.708,700,2.47,701,3.839,702,2.47,703,2.47]],["title/modules/CategoriesModule.html",[211,1.276,224,2.669]],["body/modules/CategoriesModule.html",[3,0.186,4,0.167,5,0.167,14,0.014,15,0.473,20,0.186,32,0.008,33,0.011,34,0.008,54,0.12,83,1.071,184,1.071,201,2.712,211,2.18,213,2.212,214,2.427,215,2.688,216,2.688,217,2.427,218,3.606,219,2.427,224,5.085,229,3.444,230,2.427,231,2.427,233,2.843,236,3.019,237,2.843,446,3.225,448,3.019,636,4.91,649,3.225,670,5.476,671,4.199,704,4.199,705,4.199,706,4.829,707,4.829,708,4.829,709,4.829,710,4.829]],["title/classes/Category.html",[54,0.099,649,2.669]],["body/classes/Category.html",[3,0.109,4,0.098,5,0.098,9,0.243,10,0.977,13,0.758,14,0.014,15,0.324,17,2.763,20,0.109,21,0.867,25,0.977,26,1.711,32,0.005,33,0.007,34,0.005,47,1.575,48,2.134,49,1.462,50,2.134,51,2.726,52,0.977,54,0.07,56,0.697,58,1.129,80,1.23,83,1.133,85,1.458,127,1.569,129,4.102,134,1.932,192,2.858,208,2.674,254,2.33,265,2.568,484,3.916,566,2.499,567,2.654,568,2.654,569,3.555,570,3.194,571,2.654,572,3.194,573,3.194,574,2.698,575,3.194,578,2.937,579,3.814,581,4.008,582,3.555,592,3.194,593,3.003,602,2.836,605,1.762,629,1.488,630,1.659,634,2.499,649,2.836,711,2.45,712,3.326,713,3.054,714,2.836,715,2.818,716,4.375,717,1.882,718,1.882,719,1.882,720,1.882,721,1.882,722,1.882,723,1.882,724,1.882,725,1.882,726,1.882,727,1.882,728,1.882,729,1.882,730,2.208,731,2.45]],["title/classes/CategoryDto.html",[54,0.099,668,2.498]],["body/classes/CategoryDto.html",[3,0.192,4,0.173,5,0.173,9,0.431,10,1.453,13,0.671,14,0.014,15,0.463,20,0.192,32,0.009,33,0.011,34,0.009,49,2.387,52,1.393,54,0.172,56,1.235,80,1.036,83,1.537,134,1.743,142,1.655,155,2.509,175,4.631,626,3.59,629,2.637,630,2.938,631,4.986,632,2.509,633,4.95,634,2.938,668,3.95,732,4.34,733,4.992,734,4.992,735,4.992,736,4.34]],["title/interfaces/Configuration.html",[0,1.276,185,1.752]],["body/interfaces/Configuration.html",[0,1.918,2,1.794,3,0.144,4,0.13,5,0.13,9,0.323,10,1.2,13,0.809,14,0.014,17,1.449,20,0.144,26,2.421,32,0.006,33,0.009,34,0.006,52,1.545,83,1.157,173,3.834,185,2.633,254,1.152,514,4.913,515,4.913,737,2.692,738,5.352,739,5.023,740,5.352,741,5.352,742,4.702,743,5.221,744,5.352,745,5.352,746,3.752,747,3.485,748,3.752,749,3.752,750,2.933,751,2.933,752,2.933,753,2.933,754,2.933,755,2.933,756,2.933,757,2.933,758,2.5,759,2.5,760,2.933,761,2.933,762,2.933,763,2.933]],["title/classes/CreateCategoryDto.html",[54,0.099,642,2.874]],["body/classes/CreateCategoryDto.html",[3,0.225,4,0.202,5,0.202,14,0.014,15,0.442,20,0.225,25,1.343,32,0.01,33,0.012,34,0.01,49,2.01,54,0.145,56,1.444,142,1.936,642,5.003,668,3.65,673,4.573,764,5.076,765,4.573,766,4.198,767,5.838]],["title/classes/CreateTrackDto.html",[54,0.099,768,2.874]],["body/classes/CreateTrackDto.html",[3,0.225,4,0.202,5,0.202,14,0.014,15,0.442,20,0.225,25,1.343,32,0.01,33,0.012,34,0.01,49,2.01,54,0.145,56,1.444,142,1.936,766,4.198,768,5.003,769,5.076,770,4.573,771,3.65,772,5.076,773,5.838]],["title/classes/CreateUserDto.html",[54,0.099,774,2.874]],["body/classes/CreateUserDto.html",[3,0.225,4,0.202,5,0.202,14,0.014,15,0.442,20,0.225,25,1.343,32,0.01,33,0.012,34,0.01,49,2.01,54,0.145,56,1.444,142,1.936,330,3.436,766,4.198,774,5.003,775,5.076,776,4.198,777,3.249,778,5.076]],["title/injectables/CurrentUserService.html",[266,1.143,779,2.669]],["body/injectables/CurrentUserService.html",[3,0.186,4,0.167,5,0.167,9,0.417,13,0.513,14,0.014,15,0.434,20,0.186,32,0.008,33,0.011,34,0.008,47,1.423,52,0.923,54,0.12,80,1.014,82,1.601,83,1.071,171,2.551,184,1.071,192,3.11,208,1.663,209,1.542,266,1.769,267,2.212,347,3.473,554,4.381,556,2.843,576,4.847,779,4.132,780,5.935,781,4.199,782,6.827,783,4.829,784,4.829,785,4.45,786,4.829,787,4.829,788,4.829,789,6.187,790,3.783,791,4.829,792,4.829,793,4.829,794,4.829,795,4.829,796,4.829]],["title/interfaces/Database.html",[0,1.276,739,2.669]],["body/interfaces/Database.html",[0,2.034,2,2.007,3,0.161,4,0.145,5,0.145,9,0.362,10,1.296,13,0.723,14,0.014,17,1.621,20,0.161,26,1.688,32,0.007,33,0.01,34,0.007,52,1.544,83,1.576,173,3.754,185,2.47,254,1.289,514,4.052,515,4.052,737,3.012,738,4.414,739,4.746,740,4.414,741,4.414,742,4.258,743,5.379,744,4.414,745,4.414,746,5.111,747,4.746,748,4.052,749,4.052,750,3.281,751,3.281,752,3.281,753,3.281,754,3.281,755,3.281,756,3.281,757,3.281,758,2.797,759,2.797,760,3.281,761,3.281,762,3.281,763,3.281]],["title/modules/DbTest.html",[211,1.276,797,3.13]],["body/modules/DbTest.html",[3,0.189,4,0.169,5,0.169,14,0.014,15,0.436,20,0.189,21,1.506,32,0.008,33,0.011,34,0.008,54,0.121,61,1.82,184,1.085,209,1.563,211,1.993,213,2.241,219,2.459,233,2.88,236,3.059,237,2.88,250,2.659,254,2.114,261,3.833,262,3.833,263,3.833,264,3.833,265,2.459,353,2.145,501,4.254,747,4.167,758,3.268,759,3.268,797,4.888,798,3.833,799,3.833,800,5.424,801,4.893,802,4.254,803,3.833,804,5.381,805,4.254,806,4.254,807,4.254,808,4.254,809,4.254]],["title/interfaces/DefaultAuthObject.html",[0,1.276,16,2.352]],["body/interfaces/DefaultAuthObject.html",[0,1.573,2,2.361,3,0.19,4,0.171,5,0.171,9,0.425,10,1.441,13,0.795,14,0.014,16,3.688,18,2.742,20,0.19,26,3.304,32,0.008,33,0.011,34,0.008,47,1.842,65,5.215,77,5.215,574,3.83,639,4.843,810,4.283,811,4.283,812,5.681]],["title/classes/HttpExceptionFilter.html",[54,0.099,813,3.13]],["body/classes/HttpExceptionFilter.html",[3,0.155,4,0.139,5,0.139,9,0.348,13,0.428,14,0.014,15,0.396,20,0.155,21,1.24,32,0.007,33,0.009,34,0.007,47,0.927,52,0.77,54,0.1,56,0.996,58,1.46,80,0.66,82,1.336,83,0.893,85,1.033,160,3.055,163,2.897,164,4.772,166,4.772,169,5.427,183,2.519,184,0.893,192,2.758,250,2.958,325,2.691,497,4.3,505,4.89,556,2.371,593,2.128,746,4.489,785,3.947,813,4.3,814,4.772,815,3.503,816,6.242,817,5.488,818,6.702,819,4.029,820,4.029,821,5.488,822,4.029,823,4.029,824,4.029,825,4.029,826,4.029,827,4.029,828,4.029,829,4.029,830,5.488,831,4.029,832,5.488,833,4.029,834,4.029,835,4.029,836,4.029,837,4.029,838,4.029,839,4.029,840,4.029,841,6.242,842,3.503,843,4.029,844,4.029,845,4.029,846,4.029]],["title/injectables/JwtAuthGuard.html",[266,1.143,665,2.352]],["body/injectables/JwtAuthGuard.html",[3,0.197,4,0.177,5,0.177,9,0.441,13,0.543,14,0.014,15,0.445,20,0.197,25,1.176,32,0.009,33,0.011,34,0.009,47,1.176,54,0.127,58,1.706,80,0.838,82,1.695,83,1.134,85,1.311,184,1.134,185,2.241,209,1.633,245,3.009,254,1.574,266,1.835,267,2.342,437,3.009,545,5.025,549,5.025,550,5.759,552,4.005,559,4.445,665,3.776,847,5.577,848,4.005,849,5.113,850,4.445,851,5.113,852,5.113,853,4.445]],["title/interfaces/JwtPayload.html",[0,1.276,494,2.669]],["body/interfaces/JwtPayload.html",[0,1.741,2,2.613,3,0.21,4,0.189,5,0.189,9,0.471,10,1.535,13,0.766,14,0.014,20,0.21,32,0.009,33,0.011,34,0.009,52,1.546,159,2.797,398,5.89,494,4.458,517,5.021,854,4.739,855,4.739]],["title/injectables/JwtStrategy.html",[266,1.143,431,2.669]],["body/injectables/JwtStrategy.html",[3,0.184,4,0.165,5,0.165,9,0.412,13,0.506,14,0.014,15,0.471,20,0.184,25,1.096,32,0.008,33,0.01,34,0.008,47,1.096,54,0.118,58,1.632,61,2.524,80,1.006,82,1.581,83,1.057,85,1.223,89,3.084,171,3.584,184,1.057,185,2.09,209,1.523,245,2.806,265,2.396,266,1.755,267,2.184,431,4.098,437,2.806,452,3.184,494,3.184,495,4.145,496,5.899,856,4.145,857,4.807,858,4.767,859,6.136,860,4.767,861,4.145,862,4.767,863,4.145,864,3.735,865,4.145,866,4.145,867,4.767,868,4.767,869,4.767,870,4.767,871,4.767]],["title/injectables/LocalAuthGuard.html",[266,1.143,872,3.13]],["body/injectables/LocalAuthGuard.html",[3,0.192,4,0.173,5,0.173,9,0.431,13,0.53,14,0.014,15,0.401,20,0.192,25,1.148,26,2.012,32,0.009,33,0.011,34,0.009,47,1.148,54,0.124,58,1.68,61,2.579,80,0.818,82,1.655,83,1.107,85,1.28,184,1.107,209,1.594,250,2.446,266,1.807,267,2.286,353,2.77,437,2.938,509,5.494,545,4.95,549,4.95,550,5.709,552,3.911,554,2.938,557,4.34,848,3.911,850,4.34,853,4.34,872,4.95,873,5.494,874,4.992,875,4.992,876,4.992]],["title/injectables/LocalStrategy.html",[266,1.143,432,2.669]],["body/injectables/LocalStrategy.html",[3,0.159,4,0.143,5,0.143,9,0.356,13,0.592,14,0.014,15,0.449,20,0.159,21,1.267,25,0.947,32,0.007,33,0.01,34,0.007,47,1.281,52,1.393,54,0.102,58,1.481,61,2.348,80,0.913,82,1.847,83,1.235,85,1.056,159,1.532,171,2.175,184,0.913,207,2.292,209,1.315,250,2.443,254,1.267,266,1.593,267,1.886,303,3.098,315,3.721,333,3.514,334,2.962,353,2.442,360,2.292,364,2.245,432,3.721,437,2.424,554,4.159,562,3.58,790,3.226,857,4.364,861,3.58,863,3.58,864,3.226,865,3.58,866,3.58,877,3.58,878,4.118,879,7.283,880,4.118,881,5.571,882,6.313,883,4.118,884,4.118,885,3.226,886,4.118,887,4.118,888,5.571,889,4.118,890,4.118,891,3.58,892,4.118,893,4.118]],["title/classes/LoginReqDto.html",[54,0.099,156,2.224]],["body/classes/LoginReqDto.html",[3,0.217,4,0.194,5,0.194,14,0.014,15,0.432,20,0.262,25,1.292,32,0.01,33,0.012,34,0.01,52,1.074,54,0.168,56,1.389,142,1.862,154,4.039,156,3.783,159,2.089,289,3.511,303,2.572,329,4.4,330,3.306,339,3.751,352,4.4,894,4.4,895,4.883]],["title/classes/LoginResDto.html",[54,0.099,339,2.669]],["body/classes/LoginResDto.html",[3,0.209,4,0.187,5,0.187,9,0.467,10,1.528,13,0.575,14,0.014,15,0.422,20,0.256,25,1.245,32,0.009,33,0.011,34,0.009,52,1.27,54,0.165,56,1.338,80,0.887,142,1.794,154,3.892,156,3.012,159,2.013,289,3.383,303,2.479,329,4.239,330,3.185,339,4.438,352,5.634,894,4.239,895,4.705,896,5.412]],["title/modules/MailModule.html",[211,1.276,225,2.669]],["body/modules/MailModule.html",[3,0.198,4,0.178,5,0.178,14,0.014,15,0.409,20,0.198,32,0.009,33,0.011,34,0.009,54,0.128,184,1.142,211,2.246,213,2.358,214,2.587,215,2.866,216,2.866,217,2.587,218,3.714,219,3.534,225,5.245,229,3.586,230,2.587,231,2.587,322,4.797,897,4.476,898,4.476,899,5.148,900,5.148,901,5.148]],["title/injectables/MailService.html",[266,1.143,322,2.352]],["body/injectables/MailService.html",[3,0.205,4,0.133,5,0.133,9,0.333,10,1.224,13,0.565,14,0.014,15,0.438,17,1.49,18,2.143,20,0.148,32,0.007,33,0.009,34,0.007,47,0.886,54,0.095,58,1.415,61,2.268,80,1.131,82,1.277,83,0.854,85,1.365,171,3.22,184,0.854,185,2.672,208,2.099,245,2.266,250,2.059,251,4.384,266,1.522,267,1.764,322,3.132,347,5.443,353,1.688,381,4.626,418,2.572,486,3.017,578,1.764,593,2.034,742,2.407,749,2.769,902,3.348,903,6.097,904,6.576,905,5.321,906,5.321,907,3.851,908,5.321,909,6.097,910,3.851,911,3.851,912,3.851,913,6.097,914,5.3,915,5.321,916,3.348,917,3.851,918,3.851,919,3.851,920,3.851,921,3.851,922,3.851,923,3.851,924,3.851,925,3.851,926,3.851,927,3.851,928,3.851,929,5.321,930,3.348,931,3.851,932,3.851,933,3.851,934,3.851,935,3.851,936,3.851,937,3.851]],["title/interfaces/Mailer.html",[0,1.276,742,2.498]],["body/interfaces/Mailer.html",[0,2.075,2,2.09,3,0.168,4,0.151,5,0.151,9,0.377,10,1.331,13,0.615,14,0.014,17,1.688,20,0.168,26,1.757,32,0.007,33,0.01,34,0.007,52,1.538,83,1.284,173,3.432,185,2.537,254,1.342,514,4.163,515,4.163,737,3.136,738,4.535,739,4.623,740,4.535,741,4.535,742,4.503,743,4.978,744,4.535,745,4.535,746,4.163,747,3.866,748,5.181,749,5.181,750,3.416,751,3.416,752,3.416,753,3.416,754,3.416,755,3.416,756,3.416,757,3.416,758,2.912,759,2.912,760,3.416,761,3.416,762,3.416,763,3.416]],["title/classes/PagedCategoryResDto.html",[54,0.099,938,3.13]],["body/classes/PagedCategoryResDto.html",[3,0.225,4,0.202,5,0.202,14,0.014,15,0.442,20,0.225,25,1.343,32,0.01,33,0.012,34,0.01,54,0.145,56,1.444,668,3.65,673,4.573,765,4.573,938,5.45,939,5.076,940,3.899,941,3.899,942,4.198,943,5.838]],["title/classes/PagedReqDto.html",[54,0.099,944,2.669]],["body/classes/PagedReqDto.html",[3,0.173,4,0.156,5,0.156,9,0.388,10,1.358,13,0.744,14,0.014,15,0.285,17,2.285,20,0.173,32,0.008,33,0.01,34,0.008,47,1.776,52,1.339,54,0.146,56,1.111,80,1.148,134,1.931,155,2.258,173,3.699,578,2.704,944,3.943,945,5.699,946,3.906,947,4.742,948,6.594,949,5.166,950,5.166,951,5.904,952,7.611,953,4.493,954,4.493,955,4.493,956,4.493,957,4.493,958,3.943,959,4.493,960,6.594]],["title/classes/PagedTrackResDto.html",[54,0.099,961,2.874]],["body/classes/PagedTrackResDto.html",[3,0.225,4,0.202,5,0.202,14,0.014,15,0.442,20,0.225,25,1.343,32,0.01,33,0.012,34,0.01,54,0.145,56,1.444,770,4.573,771,3.65,772,5.076,940,3.899,941,3.899,942,4.198,961,5.003,962,5.076,963,5.838]],["title/classes/PagedUserResDto.html",[54,0.099,964,2.874]],["body/classes/PagedUserResDto.html",[3,0.225,4,0.202,5,0.202,14,0.014,15,0.442,20,0.225,25,1.343,32,0.01,33,0.012,34,0.01,54,0.145,56,1.444,330,3.436,776,4.198,777,3.249,940,3.899,941,3.899,942,4.198,964,5.003,965,5.076,966,5.838]],["title/classes/PasswordToken.html",[54,0.099,967,3.13]],["body/classes/PasswordToken.html",[3,0.099,4,0.089,5,0.089,9,0.416,10,0.909,13,0.803,14,0.014,15,0.251,17,2.696,20,0.099,21,0.789,25,0.909,26,1.593,32,0.004,33,0.007,34,0.004,35,2.47,47,1.655,48,2.423,49,1.361,50,1.986,51,2.962,52,0.922,54,0.064,56,0.634,58,1.051,80,1.239,85,1.389,127,1.427,129,3.962,134,1.984,192,2.722,208,2.699,254,2.181,265,2.94,326,2.639,327,1.844,328,1.844,364,1.943,370,2.326,438,4.301,484,3.637,525,3.096,566,2.326,567,2.47,568,2.47,569,3.386,570,3.014,571,2.47,572,3.014,573,3.014,574,2.546,575,3.014,578,2.83,579,3.863,581,4.026,582,3.386,592,3.014,593,2.861,605,2.47,714,2.639,716,4.449,717,1.713,718,1.713,719,1.713,720,1.713,721,1.713,722,1.713,723,1.713,724,1.713,725,1.713,726,1.713,727,1.713,728,1.713,729,1.713,967,3.096,968,2.23,969,1.844,970,2.564,971,2.564,972,2.009,973,2.564,974,2.23,975,2.564,976,3.436,977,1.844,978,2.23,979,2.564,980,2.23]],["title/controllers/ProfileController.html",[7,1.486,981,2.874]],["body/controllers/ProfileController.html",[3,0.171,4,0.153,5,0.153,7,1.646,9,0.382,13,0.47,14,0.014,15,0.482,20,0.171,32,0.008,33,0.01,34,0.008,47,1.018,54,0.145,58,1.554,61,2.435,80,0.725,82,1.467,83,0.981,85,1.135,89,2.938,134,1.22,142,1.467,184,0.981,201,1.94,207,2.463,208,1.524,209,1.413,250,1.713,254,1.799,275,2.956,316,2.956,353,1.94,364,2.356,554,4.098,556,2.605,632,2.224,661,4.204,664,3.183,665,2.605,666,3.183,667,3.183,676,3.183,686,3.183,687,3.183,777,2.463,785,4.707,981,4.204,982,3.848,983,4.426,984,5.845,985,4.426,986,4.426,987,4.426,988,4.426,989,4.092,990,3.848,991,4.426,992,4.426,993,4.426,994,3.848]],["title/modules/ProfileModule.html",[211,1.276,226,2.669]],["body/modules/ProfileModule.html",[3,0.189,4,0.17,5,0.17,14,0.014,15,0.46,20,0.189,32,0.008,33,0.011,34,0.008,54,0.122,184,1.089,201,2.741,211,2.197,213,2.249,214,2.467,215,2.733,216,2.733,217,2.467,218,3.634,219,2.467,226,5.254,228,4.501,229,3.48,230,2.467,231,2.467,233,3.68,249,3.846,981,4.948,989,4.781,990,4.268,995,4.268,996,4.909,997,4.268,998,4.909,999,4.909]],["title/injectables/ProfileService.html",[266,1.143,989,2.498]],["body/injectables/ProfileService.html",[3,0.187,4,0.168,5,0.168,9,0.42,13,0.66,14,0.014,15,0.435,20,0.187,32,0.008,33,0.011,34,0.008,47,1.429,52,1.309,54,0.12,58,1.652,61,2.547,80,1.018,82,2.06,83,1.378,85,1.247,89,3.123,159,2.311,171,2.568,184,1.078,207,2.706,208,1.674,209,1.553,266,1.777,267,2.226,331,4.489,332,3.808,359,3.496,364,1.959,463,4.226,493,3.247,989,3.884,1000,4.226,1001,6.213,1002,4.861,1003,6.213,1004,4.861]],["title/classes/RegisterUserDto.html",[54,0.099,289,2.498]],["body/classes/RegisterUserDto.html",[3,0.205,4,0.184,5,0.184,9,0.459,10,1.511,13,0.564,14,0.014,15,0.453,20,0.205,25,1.222,32,0.009,33,0.011,34,0.009,49,1.83,52,1.256,54,0.163,56,1.314,80,0.871,134,1.466,142,1.762,155,2.671,289,4.108,303,3.267,330,3.128,517,3.549,766,3.822,776,3.822,777,2.958,778,4.621,1005,5.713,1006,6.571,1007,5.314,1008,5.314]],["title/classes/ResetPassInput.html",[54,0.099,293,2.669]],["body/classes/ResetPassInput.html",[3,0.199,4,0.179,5,0.179,9,0.446,10,1.485,13,0.686,14,0.014,15,0.41,20,0.199,25,1.485,32,0.009,33,0.011,34,0.009,52,1.347,54,0.16,56,1.278,80,1.058,134,1.781,151,5.78,155,2.596,293,4.312,306,4.928,344,4.492,370,3.8,405,5.518,716,3.041,857,4.047,1009,5.614,1010,4.492,1011,5.166,1012,5.166]],["title/injectables/SessionSerializer.html",[266,1.143,433,2.669]],["body/injectables/SessionSerializer.html",[3,0.169,4,0.152,5,0.152,9,0.379,13,0.617,14,0.014,15,0.414,20,0.169,25,1.337,32,0.007,33,0.01,34,0.007,47,1.337,54,0.109,58,1.545,80,0.952,82,1.927,83,1.289,85,1.49,163,4.179,184,0.973,266,1.662,267,2.009,364,3.283,418,2.93,433,3.881,437,2.582,493,2.93,593,3.664,1013,3.814,1014,6.517,1015,5.811,1016,5.811,1017,5.811,1018,7.417,1019,6.938,1020,5.811,1021,4.386,1022,4.552,1023,5.811,1024,4.386,1025,5.811,1026,4.386]],["title/modules/SharedModule.html",[211,1.276,243,2.669]],["body/modules/SharedModule.html",[3,0.18,4,0.162,5,0.162,14,0.014,15,0.385,20,0.18,32,0.008,33,0.01,34,0.008,54,0.116,55,4.359,58,1.244,80,0.767,85,1.2,184,1.037,209,1.494,211,2.272,213,2.142,214,2.351,215,2.603,216,2.603,217,2.351,218,3.757,219,3.046,229,3.373,230,2.351,231,2.351,243,5.132,250,1.81,254,1.439,606,4.748,779,5.042,891,5.846,1027,4.066,1028,4.066,1029,4.677,1030,6.724,1031,4.677,1032,6.724,1033,6.724,1034,5.269,1035,4.677,1036,4.066,1037,4.677]],["title/classes/TemporaryToken.html",[54,0.099,438,2.669]],["body/classes/TemporaryToken.html",[3,0.089,4,0.08,5,0.08,9,0.442,10,0.837,13,0.809,14,0.014,15,0.286,17,2.617,20,0.14,21,0.711,25,0.837,26,1.467,32,0.004,33,0.006,34,0.004,35,2.818,47,1.613,48,1.83,49,1.254,50,1.83,51,3.076,52,1.065,54,0.057,56,0.571,58,0.968,80,1.216,85,1.312,127,1.285,129,3.975,134,1.934,159,1.354,192,2.572,208,2.7,254,2.263,265,3.113,303,1.668,326,3.719,364,2.496,370,2.653,438,2.432,484,3.482,493,1.542,525,4.009,566,2.143,567,2.276,568,2.276,569,3.199,570,2.818,571,2.276,572,2.818,573,2.818,574,2.381,575,2.818,578,2.71,579,3.699,581,4.227,582,3.199,592,2.818,593,2.703,602,3.719,605,3.699,714,3.719,716,4.187,717,1.542,718,1.542,719,1.542,720,1.542,721,1.542,722,1.542,723,1.542,724,1.542,725,1.542,726,1.542,727,1.542,728,1.542,729,1.542,958,1.542,969,1.66,972,1.809,974,2.007,976,3.165,977,1.66,978,2.007,980,2.007,1038,4.362,1039,2.309,1040,2.309,1041,2.309,1042,2.309,1043,2.309,1044,2.852,1045,2.309]],["title/classes/Track.html",[54,0.099,1046,2.669]],["body/classes/Track.html",[3,0.1,4,0.09,5,0.09,9,0.419,10,0.917,13,0.755,14,0.014,15,0.309,17,2.705,20,0.1,21,0.799,25,0.917,26,1.608,32,0.004,33,0.007,34,0.004,35,1.623,47,1.535,48,2.005,49,1.373,50,2.005,51,2.613,52,1.125,54,0.064,56,0.642,58,1.061,80,1.222,85,1.398,127,1.445,129,4.052,134,1.927,192,2.74,208,2.681,254,2.374,265,3.25,484,3.929,566,2.348,567,2.494,568,2.494,569,3.408,570,3.037,571,2.494,572,3.037,573,3.037,574,2.566,575,3.037,578,2.844,579,3.882,581,3.882,582,3.408,592,3.037,593,2.879,602,3.244,605,2.494,629,1.371,630,1.528,634,3.208,652,3.493,712,4.27,713,3.92,714,3.929,716,4.3,717,1.734,718,1.734,719,1.734,720,1.734,721,1.734,722,1.734,723,1.734,724,1.734,725,1.734,726,1.734,727,1.734,728,1.734,729,1.734,730,2.034,731,2.257,1046,2.664,1047,2.257,1048,3.92,1049,2.596,1050,2.596,1051,2.596]],["title/classes/TrackDto.html",[54,0.099,771,2.498]],["body/classes/TrackDto.html",[3,0.164,4,0.147,5,0.147,9,0.368,10,1.311,13,0.759,14,0.014,15,0.454,20,0.164,25,1.311,32,0.007,33,0.01,34,0.007,48,2.864,49,1.963,50,2.864,51,2.732,52,1.367,54,0.159,56,1.054,80,1.172,134,1.971,142,1.413,155,2.141,175,4.289,208,2.361,621,5.29,624,4.955,626,3.064,629,2.25,630,2.508,631,4.619,632,2.141,634,2.508,635,4.955,652,4.619,716,3.78,736,3.704,771,3.563,942,3.064,1048,4.619,1052,3.704,1053,4.26,1054,4.26,1055,4.26,1056,4.26,1057,4.26,1058,4.26,1059,4.26,1060,4.26,1061,4.26]],["title/controllers/TracksController.html",[7,1.486,1062,2.874]],["body/controllers/TracksController.html",[3,0.112,4,0.101,5,0.101,7,1.083,9,0.251,13,0.657,14,0.014,15,0.475,20,0.112,21,0.896,25,0.67,32,0.005,33,0.007,34,0.005,38,2.281,39,1.945,40,2.094,47,1.001,54,0.108,58,1.157,61,2.415,63,4.082,80,0.713,82,1.443,83,0.965,85,1.116,86,3.409,89,2.905,134,1.2,142,0.966,159,1.083,160,2.9,183,1.821,184,0.646,201,1.277,207,1.621,208,1.003,209,1.39,250,2.604,254,1.779,275,1.945,287,4.132,310,2.094,311,2.094,312,2.094,314,3.13,316,1.945,318,2.094,320,3.13,324,2.094,325,1.945,353,2.534,358,2.907,360,1.621,362,2.094,363,2.094,554,3.402,556,1.714,566,1.714,632,1.464,639,2.907,641,2.281,661,3.13,662,3.409,664,2.094,665,1.714,666,2.094,667,2.094,672,2.281,676,2.094,677,2.281,678,2.281,686,3.13,687,3.13,768,4.45,771,3.614,785,4.45,941,1.945,944,3.861,947,2.094,949,2.281,950,2.281,961,3.13,1046,3.861,1048,2.094,1062,3.13,1063,2.532,1064,2.912,1065,2.912,1066,2.912,1067,2.912,1068,2.532,1069,2.912,1070,2.912,1071,2.912,1072,4.352,1073,3.13,1074,2.532,1075,2.532,1076,4.352,1077,2.532,1078,2.912,1079,2.532,1080,3.409,1081,2.532,1082,2.912,1083,2.912,1084,2.912,1085,2.912,1086,2.912,1087,2.912,1088,2.912,1089,2.912,1090,2.912,1091,4.352,1092,2.532,1093,2.912,1094,3.784,1095,2.912,1096,2.912,1097,2.912,1098,2.532,1099,2.532,1100,3.784,1101,2.912,1102,3.784]],["title/modules/TracksModule.html",[211,1.276,227,2.669]],["body/modules/TracksModule.html",[3,0.198,4,0.178,5,0.178,14,0.014,15,0.482,20,0.198,32,0.009,33,0.011,34,0.009,54,0.128,83,1.142,184,1.142,201,2.824,211,2.058,213,2.358,218,2.719,219,2.587,227,4.303,233,3.03,236,3.219,237,3.03,250,1.993,446,3.438,448,3.219,1046,3.438,1062,5.057,1079,4.476,1080,5.047,1081,4.476,1103,4.033,1104,5.148,1105,5.509,1106,4.476,1107,4.476]],["title/classes/User.html",[54,0.099,364,1.61]],["body/classes/User.html",[3,0.065,4,0.058,5,0.058,9,0.313,10,0.646,11,2.605,13,0.751,14,0.014,15,0.361,17,2.71,20,0.108,21,0.865,25,0.646,26,1.707,32,0.003,33,0.005,34,0.003,35,1.049,47,1.401,48,1.412,49,0.967,50,1.412,51,2.444,52,1.249,54,0.07,56,0.415,58,0.747,61,0.624,80,1.211,83,0.623,85,1.389,127,0.934,129,3.734,134,1.887,159,1.576,173,1.484,184,0.372,192,2.129,208,2.693,209,0.897,254,2.383,265,3.145,303,1.659,353,0.736,360,0.934,364,1.46,403,1.121,484,3.769,487,1.315,503,1.459,505,1.315,517,2.419,532,3.149,566,1.653,567,1.756,568,1.756,569,2.648,570,2.265,571,1.756,572,2.265,573,2.265,574,1.913,575,2.265,576,2.201,578,2.48,579,3.809,581,3.188,582,2.947,592,2.265,593,2.999,602,3.941,604,1.315,605,3.549,606,1.315,619,1.459,629,0.887,630,0.988,632,0.844,634,3.342,712,3.995,713,3.667,714,3.616,716,3.845,717,1.121,718,1.121,719,1.121,720,1.121,721,1.121,722,1.121,723,1.121,724,1.121,725,1.121,726,1.121,727,1.121,728,1.121,729,1.121,730,1.315,958,1.876,972,1.315,1022,1.315,1044,2.201,1108,1.315,1109,3.623,1110,3.149,1111,3.149,1112,3.623,1113,4.236,1114,4.236,1115,3.623,1116,2.809,1117,1.679,1118,1.679,1119,1.679,1120,1.679,1121,1.679,1122,1.679,1123,1.679,1124,1.679,1125,3.693,1126,3.149,1127,1.679,1128,1.679,1129,1.679,1130,1.679,1131,1.679,1132,2.809,1133,2.442,1134,1.679,1135,1.679,1136,1.679,1137,1.679,1138,1.679,1139,2.809,1140,1.679,1141,2.809,1142,3.623,1143,1.679,1144,2.442,1145,2.442,1146,2.442,1147,1.679,1148,2.809,1149,1.679,1150,1.679,1151,1.679,1152,4.236,1153,1.679,1154,1.679,1155,1.679,1156,1.679,1157,1.679,1158,1.679]],["title/classes/UserDto.html",[54,0.099,777,2.224]],["body/classes/UserDto.html",[3,0.159,4,0.143,5,0.143,9,0.356,10,1.281,13,0.751,14,0.014,15,0.449,17,1.594,20,0.159,32,0.007,33,0.01,34,0.007,49,2.174,52,1.448,54,0.156,56,1.019,80,1.158,134,1.949,142,1.365,155,2.07,159,2.348,175,4.864,517,4.216,578,1.886,626,2.962,629,2.175,630,2.424,631,5.238,632,2.07,633,4.364,634,2.424,777,3.101,1044,3.226,1110,5.489,1111,5.489,1125,5.299,1126,4.843,1159,3.58,1160,4.118,1161,4.118,1162,5.571,1163,4.118,1164,4.118,1165,4.118,1166,4.118,1167,4.118,1168,4.118,1169,5.571,1170,4.118,1171,4.118,1172,6.313,1173,4.118]],["title/controllers/UsersController.html",[7,1.486,1174,2.874]],["body/controllers/UsersController.html",[3,0.118,4,0.106,5,0.106,7,1.139,9,0.264,13,0.629,14,0.014,15,0.475,20,0.118,21,0.943,25,0.704,32,0.005,33,0.008,34,0.005,38,2.399,39,2.046,40,2.203,47,1.039,54,0.112,58,1.201,61,2.46,63,3.539,80,0.74,82,1.498,83,1.002,85,1.159,86,4.642,89,2.271,134,1.246,142,1.015,159,1.997,160,2.988,183,1.915,184,0.679,201,1.343,207,1.705,208,1.055,209,1.443,230,1.539,250,2.559,254,1.39,275,2.046,287,3.017,303,1.403,310,2.203,311,2.203,312,2.203,314,3.249,316,2.046,318,2.203,320,3.249,324,2.203,325,2.046,330,2.659,331,3.159,353,2.597,355,2.663,358,3.017,359,2.203,360,1.705,361,2.663,362,2.203,363,2.203,364,2.163,365,2.663,367,2.663,399,2.399,632,1.539,639,3.017,641,2.399,643,2.663,661,3.249,662,3.539,664,2.203,665,1.803,666,2.203,667,2.203,672,2.399,676,2.203,677,2.399,678,2.399,686,2.203,687,2.203,713,2.203,774,4.544,777,2.515,941,2.046,944,3.957,947,2.203,949,4.205,950,2.399,964,3.249,994,2.663,1068,2.663,1073,3.249,1074,2.663,1075,2.663,1077,2.663,1094,3.928,1098,2.663,1099,2.663,1100,3.928,1102,3.928,1174,3.249,1175,2.663,1176,3.063,1177,3.063,1178,3.063,1179,3.063,1180,3.063,1181,3.063,1182,2.663,1183,2.663,1184,3.063,1185,3.063,1186,3.063,1187,3.063,1188,3.063,1189,3.063,1190,3.063,1191,3.063,1192,3.063,1193,3.063]],["title/modules/UsersModule.html",[211,1.276,228,2.352]],["body/modules/UsersModule.html",[3,0.181,4,0.163,5,0.163,14,0.014,15,0.469,20,0.181,32,0.008,33,0.01,34,0.008,54,0.117,83,1.349,184,1.044,201,2.668,211,2.154,213,2.156,214,2.366,215,2.62,216,2.62,217,2.366,218,3.214,219,3.389,228,4.346,229,3.387,230,2.366,231,2.366,233,2.77,236,2.943,237,2.77,331,4.59,364,1.897,446,4.064,448,3.804,1174,4.85,1182,4.092,1183,4.092,1194,4.092,1195,4.092,1196,4.707,1197,4.707,1198,6.085,1199,6.085]],["title/classes/ValidateTokenInput.html",[54,0.099,306,2.669]],["body/classes/ValidateTokenInput.html",[3,0.206,4,0.185,5,0.185,9,0.461,10,1.515,13,0.567,14,0.014,15,0.454,20,0.206,25,1.227,32,0.009,33,0.011,34,0.009,52,1.259,54,0.163,56,1.319,80,0.874,134,1.471,142,1.768,151,5.597,154,3.836,155,2.681,156,2.969,157,4.637,158,4.637,159,1.984,306,4.399,370,4.205,1200,5.726,1201,4.637,1202,5.334]],["title/coverage.html",[1203,4.745]],["body/coverage.html",[0,2.041,1,1.854,5,0.067,6,2.872,7,2.378,8,2.872,13,0.205,14,0.014,16,1.134,18,2.223,21,0.593,24,1.287,27,1.287,32,0.003,33,0.005,34,0.003,36,1.676,37,1.676,44,1.51,45,1.676,54,0.191,55,1.386,57,1.676,129,1.018,131,1.51,132,1.676,133,1.676,143,1.386,144,1.676,145,1.676,156,1.073,160,1.073,161,1.676,162,1.676,185,0.845,200,1.386,202,1.676,205,1.205,211,0.616,217,0.969,232,1.51,246,1.51,251,1.386,266,1.973,268,1.676,273,1.386,274,1.676,289,1.205,293,1.287,306,1.287,322,1.134,331,1.134,333,1.073,335,1.386,339,1.287,364,0.777,410,1.287,411,1.676,431,1.287,432,1.287,433,1.287,434,1.386,438,1.287,454,1.676,489,1.51,491,1.51,494,1.287,542,1.51,544,1.676,564,1.676,621,1.386,622,1.676,623,2.467,629,1.018,636,1.386,637,1.676,642,1.386,649,1.287,665,1.134,668,1.205,670,1.386,711,1.676,732,1.676,737,2.872,739,1.287,742,1.205,764,1.676,765,2.467,768,1.386,769,1.676,770,2.467,771,1.205,774,1.386,775,1.676,776,2.872,777,1.073,779,1.287,780,1.676,781,1.676,798,2.467,799,2.467,803,1.51,804,1.51,810,1.676,811,1.676,813,1.51,814,1.676,815,1.676,847,1.676,848,2.467,854,1.676,855,1.676,856,1.676,872,1.51,873,1.676,877,1.676,894,2.467,902,1.676,938,1.51,939,1.676,940,1.287,944,1.287,945,2.467,946,1.676,958,5.494,961,1.386,962,1.676,964,1.386,965,1.676,967,1.51,968,1.676,969,2.265,981,1.386,982,1.676,989,1.205,1000,1.676,1005,1.676,1009,1.676,1010,1.676,1013,1.676,1022,4.274,1034,1.676,1038,1.51,1046,1.287,1047,1.676,1052,1.676,1062,1.386,1063,1.676,1073,1.386,1080,1.51,1103,1.51,1105,1.51,1108,1.51,1159,1.676,1174,1.386,1175,1.676,1200,1.676,1201,1.676,1203,1.676,1204,1.51,1205,1.927,1206,1.927,1207,6.795,1208,6.991,1209,7.659,1210,1.927,1211,3.149,1212,1.676,1213,1.676,1214,5.757,1215,6.392,1216,3.149,1217,3.149,1218,1.927,1219,1.927,1220,4.611,1221,5.083,1222,1.927,1223,1.927,1224,1.927,1225,1.927,1226,2.467,1227,1.676,1228,3.149,1229,2.738,1230,1.676,1231,2.738,1232,1.676,1233,1.676,1234,1.676,1235,1.676,1236,1.676,1237,1.676,1238,1.676,1239,1.51,1240,1.676,1241,1.676,1242,1.676,1243,1.676,1244,1.676,1245,1.927,1246,1.927,1247,1.927,1248,1.927,1249,1.927,1250,2.738,1251,2.738,1252,1.676,1253,1.676,1254,1.676,1255,1.676,1256,1.676,1257,1.927,1258,1.927,1259,1.927,1260,1.927,1261,1.927,1262,1.927,1263,1.927,1264,1.927]],["title/dependencies.html",[214,2.416,1265,3.335]],["body/dependencies.html",[14,0.014,32,0.007,33,0.009,34,0.007,53,2.735,54,0.138,127,2.279,142,1.358,155,2.058,184,0.908,214,2.058,235,3.561,237,2.411,420,3.208,437,2.411,452,2.735,453,4.825,486,3.208,487,3.208,488,3.561,499,3.561,500,3.561,556,3.972,632,2.058,790,3.208,802,3.561,864,4.932,885,3.208,914,4.825,916,3.561,947,2.945,1239,3.208,1266,4.095,1267,4.095,1268,4.095,1269,4.095,1270,4.095,1271,4.095,1272,4.095,1273,4.095,1274,6.748,1275,4.095,1276,4.095,1277,4.095,1278,4.095,1279,4.095,1280,4.095,1281,4.095,1282,4.095,1283,4.095,1284,4.095,1285,4.095,1286,4.095,1287,4.095,1288,4.095,1289,4.095,1290,4.095,1291,4.095,1292,4.095,1293,4.095,1294,4.095,1295,5.55,1296,4.095,1297,4.095,1298,4.095,1299,4.095,1300,4.095,1301,4.095,1302,4.095,1303,4.095,1304,4.095,1305,4.095,1306,4.095,1307,4.095,1308,4.095,1309,4.095,1310,4.095,1311,5.55,1312,4.095,1313,4.095,1314,4.095,1315,4.095,1316,4.095,1317,4.095,1318,4.095,1319,4.095]],["title/miscellaneous/enumerations.html",[1320,1.856,1321,4.179]],["body/miscellaneous/enumerations.html",[9,0.456,14,0.014,32,0.009,33,0.011,34,0.009,53,4.369,159,2.434,303,2.996,326,4.369,421,5.125,578,3.616,969,4.705,1038,4.134,1108,4.134,1125,5.125,1144,5.688,1145,5.688,1146,5.688,1320,2.937,1321,4.588,1322,5.277,1323,6.542,1324,5.277,1325,6.542,1326,5.277,1327,5.277,1328,5.277,1329,5.277,1330,5.277,1331,5.277]],["title/miscellaneous/functions.html",[1320,1.856,1332,4.179]],["body/miscellaneous/functions.html",[9,0.421,14,0.014,32,0.008,33,0.011,34,0.008,40,3.508,47,1.717,82,2.475,83,1.655,85,1.914,217,3.447,623,4.878,940,4.158,945,3.821,977,5.196,1073,4.478,1226,3.821,1227,4.24,1231,5.413,1232,5.413,1233,5.413,1234,5.413,1235,5.413,1236,4.24,1237,5.413,1320,2.715,1332,4.24,1333,4.877,1334,6.226,1335,4.877,1336,4.24,1337,4.877,1338,4.877,1339,4.877,1340,4.877,1341,4.877,1342,4.877]],["title/index.html",[9,0.288,1343,2.899,1344,2.899]],["body/index.html",[4,0.147,14,0.01,32,0.007,33,0.01,34,0.007,167,3.704,231,2.864,390,4.955,554,2.508,660,3.704,812,3.338,885,3.338,1036,3.704,1133,3.704,1204,3.338,1345,6.422,1346,5.699,1347,5.699,1348,4.26,1349,5.699,1350,7.356,1351,4.26,1352,4.26,1353,4.26,1354,4.26,1355,4.26,1356,5.699,1357,4.26,1358,5.699,1359,4.26,1360,4.26,1361,3.704,1362,4.26,1363,4.26,1364,4.26,1365,5.584,1366,4.26,1367,4.26,1368,4.26,1369,4.26,1370,4.26,1371,4.26,1372,4.26,1373,4.26,1374,4.26,1375,4.26,1376,4.26,1377,3.704,1378,4.26,1379,4.26,1380,4.26,1381,4.26,1382,4.26,1383,5.699,1384,4.26,1385,4.26,1386,5.699,1387,4.26,1388,4.26,1389,4.26,1390,4.26,1391,4.26,1392,4.26,1393,4.26,1394,4.26,1395,3.704,1396,4.26,1397,3.704,1398,4.26,1399,4.26,1400,4.26,1401,4.26,1402,4.26,1403,4.26,1404,4.26,1405,4.26,1406,4.26,1407,4.26,1408,4.26,1409,4.26,1410,5.699,1411,4.26,1412,4.26,1413,4.26,1414,4.26,1415,4.26,1416,4.26,1417,4.26,1418,4.26,1419,4.26,1420,4.26,1421,4.26,1422,4.26,1423,4.26,1424,4.26,1425,4.26,1426,4.26,1427,4.26,1428,4.26,1429,4.26,1430,4.26,1431,4.26,1432,4.26]],["title/license.html",[1343,2.899,1344,2.899,1433,2.899]],["body/license.html",[14,0.01,31,3.301,32,0.008,33,0.01,34,0.008,231,2.307,556,2.702,842,5.205,1092,3.991,1204,3.596,1361,6.82,1377,3.991,1395,3.991,1433,3.991,1434,4.59,1435,6.663,1436,4.59,1437,4.59,1438,4.59,1439,4.59,1440,4.59,1441,4.59,1442,4.59,1443,4.59,1444,5.987,1445,4.59,1446,4.59,1447,4.59,1448,6.663,1449,4.59,1450,5.987,1451,4.59,1452,4.59,1453,5.987,1454,4.59,1455,4.59,1456,4.59,1457,4.59,1458,4.59,1459,4.59,1460,4.59,1461,5.987,1462,4.59,1463,4.59,1464,4.59,1465,4.59,1466,4.59,1467,5.987,1468,5.987,1469,4.59,1470,4.59,1471,4.59,1472,4.59,1473,4.59,1474,4.59,1475,4.59,1476,4.59,1477,4.59,1478,4.59,1479,4.59,1480,4.59,1481,4.59,1482,4.59,1483,4.59,1484,4.59,1485,4.59,1486,4.59,1487,4.59,1488,4.59,1489,4.59,1490,4.59,1491,4.59,1492,4.59,1493,4.59,1494,4.59,1495,4.59,1496,4.59,1497,4.59]],["title/modules.html",[213,2.5]],["body/modules.html",[14,0.011,32,0.009,33,0.011,34,0.009,212,3.892,213,2.479,223,3.614,224,3.614,225,3.614,226,3.614,227,3.614,228,3.185,243,3.614,797,4.239,930,5.777,1365,6.901,1498,7.937,1499,7.937,1500,8.077,1501,6.645]],["title/overview.html",[1502,4.745]],["body/overview.html",[2,1.75,14,0.014,32,0.006,33,0.009,34,0.006,35,2.283,56,0.903,201,1.601,205,3.705,211,1.166,212,5.706,213,1.672,214,1.835,215,2.032,216,2.032,217,1.835,218,1.929,219,1.835,220,3.175,221,3.175,222,3.175,223,5.383,224,4.521,225,4.688,226,4.815,227,3.958,228,4.131,229,2.854,230,1.835,231,1.835,243,4.292,267,1.672,322,4.331,331,3.782,333,4.012,403,2.439,410,3.958,427,3.175,429,3.175,430,3.175,431,3.958,432,3.958,433,3.958,434,4.262,542,2.861,670,4.262,704,3.175,705,3.175,779,3.958,897,3.175,898,3.175,989,3.705,995,3.175,997,3.175,1027,3.175,1028,3.175,1194,3.175,1195,3.175,1502,3.175,1503,3.175,1504,3.175,1505,3.651,1506,3.651]],["title/miscellaneous/typealiases.html",[1320,1.856,1507,4.807]],["body/miscellaneous/typealiases.html",[9,0.478,13,0.588,14,0.013,32,0.009,33,0.012,34,0.009,52,1.058,92,5.856,97,5.856,126,5.856,173,2.922,604,5.277,1320,3.08,1508,5.533,1509,6.735,1510,8.048,1511,6.735,1512,6.735,1513,6.735,1514,6.735,1515,5.533,1516,6.735]],["title/miscellaneous/variables.html",[1320,1.856,1517,4.179]],["body/miscellaneous/variables.html",[9,0.196,13,0.624,14,0.014,16,2.627,17,2.778,18,3.747,21,1.561,26,1.799,32,0.004,33,0.006,34,0.004,52,1.177,61,0.846,65,2.587,77,2.587,83,0.504,159,0.846,173,1.201,191,1.976,192,1.143,209,1.877,211,1.149,232,1.781,246,3.496,250,1.392,251,2.587,252,1.976,253,1.976,254,2.15,255,1.976,256,1.976,257,1.976,258,1.976,261,1.781,262,1.781,263,1.781,264,1.781,265,3.094,303,1.041,315,1.518,353,0.996,370,1.338,403,1.518,446,1.518,448,1.421,452,1.518,489,2.818,491,2.818,574,1.9,578,3.357,629,1.9,639,2.402,652,1.635,743,1.635,747,2.402,748,2.587,758,1.518,759,1.518,798,1.781,799,3.496,800,1.976,803,2.818,804,2.818,805,1.976,806,1.976,807,1.976,808,1.976,809,1.976,812,2.818,958,1.518,977,2.587,1048,1.635,1103,1.781,1105,2.818,1106,1.976,1107,1.976,1212,1.976,1213,3.127,1226,1.781,1229,1.976,1230,3.127,1238,1.976,1239,2.818,1240,3.127,1241,3.127,1242,1.976,1243,3.127,1244,1.976,1250,1.976,1251,3.88,1252,4.411,1253,3.127,1254,1.976,1255,3.127,1256,1.976,1320,1.265,1336,1.976,1397,1.976,1503,1.976,1504,1.976,1517,1.976,1518,2.273,1519,4.463,1520,2.273,1521,2.273,1522,2.273,1523,3.597,1524,3.597,1525,2.273,1526,2.273,1527,2.273,1528,3.597,1529,2.273,1530,4.463,1531,4.463,1532,3.597,1533,3.597,1534,2.273,1535,2.273,1536,2.273,1537,2.273,1538,2.273,1539,2.273,1540,2.273,1541,5.073,1542,2.273,1543,6.384,1544,2.273,1545,2.273,1546,2.273,1547,2.273,1548,2.273,1549,2.273,1550,2.273,1551,2.273,1552,2.273,1553,2.273,1554,2.273,1555,2.273,1556,3.597,1557,2.273,1558,2.273,1559,2.273,1560,2.273,1561,2.273,1562,2.273,1563,2.273,1564,2.273,1565,2.273,1566,2.273,1567,5.527,1568,2.273,1569,2.273,1570,2.273,1571,2.273,1572,2.273,1573,2.273,1574,2.273,1575,5.527,1576,2.273,1577,2.273,1578,2.273,1579,2.273,1580,2.273,1581,2.273,1582,2.273,1583,2.273,1584,2.273,1585,2.273,1586,2.273,1587,2.273,1588,2.273,1589,2.273,1590,2.273,1591,2.273,1592,2.273,1593,2.273,1594,2.273,1595,2.273,1596,2.273,1597,2.273,1598,2.273]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":958,"title":{},"body":{"classes/PagedReqDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":1220,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":35,"title":{"interfaces/AbstractControllerOptions-1.html":{}},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"overview.html":{}}}],["1.0.0",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["1.8.10",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":951,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["12",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1505,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1224,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":1436,"title":{},"body":{"license.html":{}}}],["21",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["29",{"_index":1506,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["3/24",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1504,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.5.1",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1503,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":613,"title":{},"body":{"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1377,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":59,"title":{},"body":{"classes/AbstractService.html":{}}}],["abstractcontrollerfactory",{"_index":1237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerfactory(options",{"_index":1338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauth",{"_index":1233,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerwithauth(options",{"_index":1339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswagger",{"_index":1235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswagger(options",{"_index":1340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcrudcontroller",{"_index":1073,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcrudcontroller(options",{"_index":1341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractdocument",{"_index":1509,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["abstractmodel",{"_index":44,"title":{"interfaces/AbstractModel.html":{}},"body":{"interfaces/AbstractModel.html":{},"coverage.html":{}}}],["abstractservice",{"_index":55,"title":{"classes/AbstractService.html":{}},"body":{"classes/AbstractService.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["abstractvm",{"_index":131,"title":{"classes/AbstractVm.html":{}},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["access",{"_index":843,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":576,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":934,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":143,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1374,"title":{},"body":{"index.html":{}}}],["action",{"_index":1491,"title":{},"body":{"license.html":{}}}],["activate",{"_index":572,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["addons/in",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1146,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1508,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":1381,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1459,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":922,"title":{},"body":{"injectables/MailService.html":{}}}],["api_key_mailgun",{"_index":807,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["apibadrequestresponse",{"_index":662,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth",{"_index":661,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apiconflictresponse",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception",{"_index":160,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["apiexception})@apiokresponse",{"_index":657,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotfoundresponse",{"_index":663,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apiokresponse",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":175,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({enum",{"_index":1166,"title":{},"body":{"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":139,"title":{},"body":{"classes/AbstractVm.html":{}}}],["apipropertyoptional({type",{"_index":135,"title":{},"body":{"classes/AbstractVm.html":{}}}],["apiresponse",{"_index":1072,"title":{},"body":{"controllers/TracksController.html":{}}}],["apiswaggeroperation",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('categories",{"_index":675,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('tracks",{"_index":1083,"title":{},"body":{"controllers/TracksController.html":{}}}],["apitags('users",{"_index":1184,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":200,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":738,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1402,"title":{},"body":{"index.html":{}}}],["application",{"_index":1386,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":212,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":205,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1391,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":818,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1495,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1430,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1445,"title":{},"body":{"license.html":{}}}],["async",{"_index":61,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller.ts",{"_index":1232,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["auth.dto",{"_index":157,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":667,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":848,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":874,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":849,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":666,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["auth/models/dto/auth.dto",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":1230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":273,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":335,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{}}}],["autheventenum",{"_index":421,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":850,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":851,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":875,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authhandler",{"_index":410,"title":{"injectables/AuthHandler.html":{}},"body":{"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":223,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1484,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":333,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice.validateuser(username",{"_index":893,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["available",{"_index":930,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["await",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["base.entity",{"_index":1043,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["baseentity",{"_index":129,"title":{"classes/BaseEntity.html":{}},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":723,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":718,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":725,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":722,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":720,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":719,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":717,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":724,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":728,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":729,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":727,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":726,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":721,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseresdto",{"_index":621,"title":{"classes/BaseResDto.html":{}},"body":{"classes/BaseResDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["baseresdto:10",{"_index":1058,"title":{},"body":{"classes/TrackDto.html":{}}}],["baseresdto:13",{"_index":1059,"title":{},"body":{"classes/TrackDto.html":{}}}],["baseresdto:16",{"_index":1057,"title":{},"body":{"classes/TrackDto.html":{}}}],["baseservice",{"_index":1034,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["bcrypt",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(plaintoken",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearerauthname",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/LocalAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1421,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1379,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1500,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1498,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":601,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":607,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1384,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":423,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":545,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["canactivate(context",{"_index":549,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["canlogin",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["career",{"_index":1369,"title":{},"body":{"index.html":{}}}],["cat",{"_index":682,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["catch",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":817,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":638,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categories.controller",{"_index":708,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":671,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":636,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":224,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["category",{"_index":649,"title":{"classes/Category.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{}}}],["category.dto",{"_index":673,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{}}}],["category.dto.ts",{"_index":765,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":709,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["category.schema",{"_index":710,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categorydto",{"_index":668,"title":{"classes/CategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["categoryservice",{"_index":670,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["ccn",{"_index":272,"title":{},"body":{"injectables/AppService.html":{}}}],["charge",{"_index":1441,"title":{},"body":{"license.html":{}}}],["check",{"_index":1407,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1487,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1346,"title":{},"body":{"index.html":{}}}],["class",{"_index":54,"title":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":56,"title":{},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":1511,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["click",{"_index":1393,"title":{},"body":{"index.html":{}}}],["client",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":146,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":704,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":705,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":897,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":898,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":899,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":995,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":996,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":997,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1027,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1028,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1194,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1195,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1345,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1403,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1370,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1368,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":629,"title":{},"body":{"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":1051,"title":{},"body":{"classes/Track.html":{}}}],["columnsize.length32",{"_index":731,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{}}}],["columnsize.length64",{"_index":1152,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1389,"title":{},"body":{"index.html":{}}}],["community",{"_index":1350,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1390,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1351,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1406,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1092,"title":{},"body":{"controllers/TracksController.html":{},"license.html":{}}}],["config",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":186,"title":{},"body":{"classes/ApiException.html":{}}}],["configmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":185,"title":{"interfaces/Configuration.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().environment",{"_index":190,"title":{},"body":{"classes/ApiException.html":{}}}],["configuration().isauthenabled",{"_index":559,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["configuration().jwtsecret",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["confirmation",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1113,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["conflictexception('email",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('track",{"_index":1088,"title":{},"body":{"controllers/TracksController.html":{}}}],["conflictexception('user",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["conflictexception(`${input.name",{"_index":681,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["connect",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1496,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":852,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/SharedModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":171,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{}}}],["constructor(@optional",{"_index":792,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(authservice",{"_index":547,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(message",{"_index":172,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(moduleref",{"_index":878,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":207,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["constructor(req",{"_index":783,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(usersservice",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["context",{"_index":552,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":557,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["contextid",{"_index":888,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory",{"_index":884,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory.getbyrequest(request",{"_index":889,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contract",{"_index":1492,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('categories",{"_index":674,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('profile",{"_index":991,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('tracks",{"_index":1082,"title":{},"body":{"controllers/TracksController.html":{}}}],["controller('users",{"_index":1185,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllername",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":201,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1461,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1444,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1435,"title":{},"body":{"license.html":{}}}],["count",{"_index":60,"title":{},"body":{"classes/AbstractService.html":{}}}],["count(filter",{"_index":79,"title":{},"body":{"classes/AbstractService.html":{}}}],["countasync",{"_index":62,"title":{},"body":{"classes/AbstractService.html":{}}}],["countasync(filter",{"_index":87,"title":{},"body":{"classes/AbstractService.html":{}}}],["coverage",{"_index":1203,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":639,"title":{},"body":{"controllers/CategoriesController.html":{},"interfaces/DefaultAuthObject.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":678,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["create(input",{"_index":641,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["createcategorydto",{"_index":642,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["created",{"_index":1362,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":48,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{}}}],["createdby",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{}}}],["createdto",{"_index":38,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["createtrackdto",{"_index":768,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["createtransport",{"_index":904,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":774,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crypto",{"_index":1142,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":828,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1414,"title":{},"body":{"index.html":{}}}],["currentuser",{"_index":782,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["currentuserservice",{"_index":779,"title":{"injectables/CurrentUserService.html":{}},"body":{"injectables/CurrentUserService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["customname",{"_index":978,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["damages",{"_index":1488,"title":{},"body":{"license.html":{}}}],["data",{"_index":417,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["database",{"_index":739,"title":{"interfaces/Database.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["database_host",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":51,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{}}}],["date().gettime",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().toisostring",{"_index":196,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["dbfactory",{"_index":804,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":797,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":573,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deal",{"_index":1447,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1497,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":134,"title":{},"body":{"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobj",{"_index":1252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":80,"title":{},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":574,"title":{},"body":{"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"interfaces/DefaultAuthObject.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":694,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["delete(':id')@apiokresponse()@apibadrequestresponse({type",{"_index":646,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["delete(@param('id",{"_index":695,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["delete(id",{"_index":645,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["deletedat",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":568,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1512,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":214,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":652,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1015,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1017,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1363,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1420,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1356,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1357,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1457,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{}}}],["document",{"_index":46,"title":{},"body":{"interfaces/AbstractModel.html":{}}}],["documentation",{"_index":1204,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1516,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":126,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["domain",{"_index":749,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1018,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1025,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dynamicmodule",{"_index":1032,"title":{},"body":{"modules/SharedModule.html":{}}}],["e",{"_index":1150,"title":{},"body":{"classes/User.html":{}}}],["email",{"_index":159,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/ProfileService.html":{},"classes/TemporaryToken.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["emailparamname",{"_index":147,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["enableimplicitconversion",{"_index":687,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["encryptedtoken",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1355,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1358,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1094,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["entity",{"_index":39,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"classes/AbstractService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["entitydto",{"_index":40,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":1044,"title":{},"body":{"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1321,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":740,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1019,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":163,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1020,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":829,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":835,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":840,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":834,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":836,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":841,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":833,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":831,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":832,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":164,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["ethereal",{"_index":933,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1483,"title":{},"body":{"license.html":{}}}],["eventpattern",{"_index":419,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["eventpattern(autheventenum.userregistered",{"_index":415,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["exception",{"_index":845,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":815,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":819,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.model",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["exception.model.ts",{"_index":162,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.model.ts:10",{"_index":178,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:12",{"_index":180,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:14",{"_index":176,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:16",{"_index":177,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:18",{"_index":182,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:20",{"_index":179,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:22",{"_index":174,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:8",{"_index":181,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":816,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":1141,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":686,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["executioncontext",{"_index":550,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["exist",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["exist.id",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.token",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["existed",{"_index":699,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["exists",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["expandvariables",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":980,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expireat",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":631,"title":{},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty",{"_index":624,"title":{},"body":{"classes/BaseResDto.html":{},"classes/TrackDto.html":{}}}],["expose()@apiproperty()@isemail()@maxlength(columnsize.length64",{"_index":1160,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@ismongoid()@apiproperty",{"_index":626,"title":{},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":1053,"title":{},"body":{"classes/TrackDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty",{"_index":734,"title":{},"body":{"classes/CategoryDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":1055,"title":{},"body":{"classes/TrackDto.html":{}}}],["expose()@maxlength(columnsize.length64)@apiproperty",{"_index":1162,"title":{},"body":{"classes/UserDto.html":{}}}],["express",{"_index":556,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AcctVerifyDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":862,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1109,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1423,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1394,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["files",{"_index":1446,"title":{},"body":{"license.html":{}}}],["filter",{"_index":84,"title":{},"body":{"classes/AbstractService.html":{}}}],["find",{"_index":812,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":63,"title":{},"body":{"classes/AbstractService.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["findall(@query",{"_index":1190,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(conditions",{"_index":1096,"title":{},"body":{"controllers/TracksController.html":{}}}],["findall(filter",{"_index":90,"title":{},"body":{"classes/AbstractService.html":{}}}],["findall(input",{"_index":1067,"title":{},"body":{"controllers/TracksController.html":{}}}],["findall(query",{"_index":1178,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(search",{"_index":1192,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallasync",{"_index":64,"title":{},"body":{"classes/AbstractService.html":{}}}],["findallasync(filter",{"_index":93,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyid",{"_index":65,"title":{},"body":{"classes/AbstractService.html":{},"controllers/CategoriesController.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["findbyid(@param('id",{"_index":691,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["findbyid(id",{"_index":95,"title":{},"body":{"classes/AbstractService.html":{},"controllers/CategoriesController.html":{}}}],["findbyidasync",{"_index":66,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyidasync(id",{"_index":98,"title":{},"body":{"classes/AbstractService.html":{}}}],["findone",{"_index":67,"title":{},"body":{"classes/AbstractService.html":{},"injectables/AuthService.html":{}}}],["findone(filter",{"_index":100,"title":{},"body":{"classes/AbstractService.html":{}}}],["findoneasync",{"_index":68,"title":{},"body":{"classes/AbstractService.html":{}}}],["findoneasync(filter",{"_index":102,"title":{},"body":{"classes/AbstractService.html":{}}}],["firstname",{"_index":1110,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1479,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1400,"title":{},"body":{"index.html":{}}}],["following",{"_index":1466,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1404,"title":{},"body":{"index.html":{}}}],["format",{"_index":136,"title":{},"body":{"classes/AbstractVm.html":{}}}],["forroot",{"_index":1030,"title":{},"body":{"modules/SharedModule.html":{}}}],["fortune",{"_index":1437,"title":{},"body":{"license.html":{}}}],["free",{"_index":1395,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1354,"title":{},"body":{"index.html":{}}}],["full",{"_index":1133,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1115,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":1022,"title":{},"body":{"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1332,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1464,"title":{},"body":{"license.html":{}}}],["future",{"_index":1352,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":689,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["get(':id')@apiokresponse({description",{"_index":648,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["get()@apiokresponse()@apibadrequestresponse({type",{"_index":654,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["get()@apiokresponse({type",{"_index":1068,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth",{"_index":986,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcategories",{"_index":640,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["getcurrentuser",{"_index":786,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["getfullname",{"_index":1130,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":203,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1134,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1138,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1158,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":599,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":984,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":992,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":985,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileasync",{"_index":1001,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileasync(email",{"_index":1003,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getschema",{"_index":597,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":609,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1343,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":269,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1033,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1375,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1440,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1501,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":542,"title":{"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":543,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["guards/auth.guard",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["handler",{"_index":426,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handlers/auth.handler",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{}}}],["handleuserregistered",{"_index":412,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handleuserregistered(data",{"_index":413,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["hapi/joi",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["harddelete",{"_index":69,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddelete(filter",{"_index":104,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddeletebyid",{"_index":70,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddeletebyid(id",{"_index":106,"title":{},"body":{"classes/AbstractService.html":{}}}],["hash",{"_index":1140,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1149,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1439,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1485,"title":{},"body":{"license.html":{}}}],["host",{"_index":746,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.created",{"_index":677,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.ok",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":813,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":937,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":183,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.unauthorized",{"_index":838,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":199,"title":{},"body":{"classes/ApiException.html":{}}}],["id",{"_index":49,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["idtype",{"_index":1513,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ignoreexpiration",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{}}}],["implied",{"_index":1475,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1469,"title":{},"body":{"license.html":{}}}],["including",{"_index":1450,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":928,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":716,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{}}}],["inject",{"_index":788,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["inject(request",{"_index":793,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["injectable",{"_index":266,"title":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":267,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["innovators",{"_index":1353,"title":{},"body":{"index.html":{}}}],["input",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["input.email",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["input.name",{"_index":680,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["input.password",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.title",{"_index":1087,"title":{},"body":{"controllers/TracksController.html":{}}}],["insert",{"_index":71,"title":{},"body":{"classes/AbstractService.html":{}}}],["insert(entity",{"_index":108,"title":{},"body":{"classes/AbstractService.html":{}}}],["insertasync",{"_index":72,"title":{},"body":{"classes/AbstractService.html":{}}}],["insertasync(entity",{"_index":110,"title":{},"body":{"classes/AbstractService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":37,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1136,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1151,"title":{},"body":{"classes/User.html":{}}}],["invalid_login_attempt",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isactive",{"_index":569,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":635,"title":{},"body":{"classes/BaseResDto.html":{},"classes/TrackDto.html":{}}}],["isauthenable",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthenabled",{"_index":741,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isdeleted",{"_index":570,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":1169,"title":{},"body":{"classes/UserDto.html":{}}}],["isemailverified",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":1170,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":1173,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isjson",{"_index":960,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["isjson()@isoptional",{"_index":954,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["ismongoid",{"_index":633,"title":{},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":151,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":952,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["isoptional()@isjson",{"_index":956,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["issue",{"_index":1410,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1408,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":149,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["isvalid",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalAuthGuard.html":{}}}],["isvalidpassword",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":121,"title":{},"body":{"classes/AbstractService.html":{}}}],["items",{"_index":1102,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["joi.number().default(27017",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1428,"title":{},"body":{"index.html":{}}}],["json.parse(search",{"_index":1093,"title":{},"body":{"controllers/TracksController.html":{}}}],["jsonwebtoken",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":665,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":1213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":494,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":431,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":748,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1474,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":1111,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length1024",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1416,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1489,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1486,"title":{},"body":{"license.html":{}}}],["license",{"_index":1433,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":947,"title":{},"body":{"classes/PagedReqDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["limit(limit",{"_index":1098,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["limitation",{"_index":1451,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1476,"title":{},"body":{"license.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{}}}],["local",{"_index":885,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localauthguard",{"_index":872,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":432,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lockoutenddate",{"_index":1112,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":418,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":926,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":935,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(data",{"_index":425,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["logger.debug(updateddoc",{"_index":702,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["logger.error(error",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":1026,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["logic",{"_index":424,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["login",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(input",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreqdto",{"_index":156,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":339,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1116,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":913,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":909,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":901,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mailer",{"_index":742,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":924,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":923,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":808,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mailgun",{"_index":916,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":225,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":911,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":322,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1418,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["mapping.enum.ts",{"_index":1325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matches",{"_index":1413,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":634,"title":{},"body":{"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":1061,"title":{},"body":{"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32",{"_index":736,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":1172,"title":{},"body":{"classes/UserDto.html":{}}}],["measures",{"_index":1372,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":619,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1383,"title":{},"body":{"index.html":{}}}],["memory",{"_index":802,"title":{},"body":{"modules/DbTest.html":{},"dependencies.html":{}}}],["mentee",{"_index":1144,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1145,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1478,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1455,"title":{},"body":{"license.html":{}}}],["message",{"_index":165,"title":{},"body":{"classes/ApiException.html":{}}}],["metadata",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":58,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["mg",{"_index":915,"title":{},"body":{"injectables/MailService.html":{}}}],["minlength",{"_index":1008,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["minlength(6",{"_index":1006,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["miscellaneous",{"_index":1320,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1434,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1385,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":577,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":976,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["models/api",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["models/auth.enums",{"_index":422,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{}}}],["models/base.entity",{"_index":130,"title":{},"body":{"classes/AbstractService.html":{}}}],["models/category.entity",{"_index":707,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["models/dto/acct",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/category.dto",{"_index":669,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["models/dto/create",{"_index":672,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["models/dto/paged",{"_index":1077,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["models/dto/reset",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/tack.dto",{"_index":1078,"title":{},"body":{"controllers/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1181,"title":{},"body":{"controllers/UsersController.html":{}}}],["models/dto/validate",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/jwt",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["models/track.entity",{"_index":1079,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1182,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1454,"title":{},"body":{"license.html":{}}}],["module",{"_index":211,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moduleref",{"_index":879,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["modules",{"_index":213,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["mongod",{"_index":803,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":809,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":801,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":800,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":53,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["mongoosemodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":446,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":805,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1427,"title":{},"body":{"index.html":{}}}],["name",{"_index":83,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1411,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bull",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":184,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":790,"title":{},"body":{"injectables/CurrentUserService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":420,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":142,"title":{},"body":{"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1347,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":914,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":921,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":936,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1482,"title":{},"body":{"license.html":{}}}],["note",{"_index":1401,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{}}}],["notfoundexception('token",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(`a",{"_index":700,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["notfoundexception(`category",{"_index":693,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["notice",{"_index":1467,"title":{},"body":{"license.html":{}}}],["null",{"_index":192,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":173,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["object.interface.ts",{"_index":811,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["objectmapping",{"_index":1323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["obtaining",{"_index":1443,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1438,"title":{},"body":{"license.html":{}}}],["official",{"_index":1348,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":766,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["omittype(categorydto",{"_index":767,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["omittype(trackdto",{"_index":773,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["omittype(userdto",{"_index":778,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ongoing",{"_index":1364,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1240,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":47,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"injectables/CurrentUserService.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":977,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":948,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["otherwise",{"_index":1494,"title":{},"body":{"license.html":{}}}],["out",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1502,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1265,"title":{"dependencies.html":{}},"body":{}}],["pagedcategoryresdto",{"_index":938,"title":{"classes/PagedCategoryResDto.html":{}},"body":{"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["pagedreqdto",{"_index":944,"title":{"classes/PagedReqDto.html":{}},"body":{"classes/PagedReqDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["pagedtrackresdto",{"_index":961,"title":{"classes/PagedTrackResDto.html":{}},"body":{"classes/PagedTrackResDto.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["pagedtrackresdto})@apibadrequestresponse({type",{"_index":1069,"title":{},"body":{"controllers/TracksController.html":{}}}],["pageduserresdto",{"_index":964,"title":{"classes/PagedUserResDto.html":{}},"body":{"classes/PagedUserResDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["pageduserresdto})@apibadrequestresponse({type",{"_index":1179,"title":{},"body":{"controllers/UsersController.html":{}}}],["paginatedresdto",{"_index":940,"title":{},"body":{"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["paginatedresdto(categorydto",{"_index":943,"title":{},"body":{"classes/PagedCategoryResDto.html":{}}}],["paginatedresdto(entitydto",{"_index":1342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paginatedresdto(trackdto",{"_index":963,"title":{},"body":{"classes/PagedTrackResDto.html":{}}}],["paginatedresdto(userdto",{"_index":966,"title":{},"body":{"classes/PagedUserResDto.html":{}}}],["pane",{"_index":1409,"title":{},"body":{"index.html":{}}}],["param",{"_index":659,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["param('id",{"_index":698,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1371,"title":{},"body":{"index.html":{}}}],["partial",{"_index":122,"title":{},"body":{"classes/AbstractService.html":{}}}],["particular",{"_index":1480,"title":{},"body":{"license.html":{}}}],["pass",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":864,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportserializer",{"_index":1014,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":861,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":865,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":886,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_reset_tokens",{"_index":979,"title":{},"body":{"classes/PasswordToken.html":{}}}],["passwordhash",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordtoken",{"_index":967,"title":{"classes/PasswordToken.html":{}},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["path",{"_index":166,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["payload",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":855,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":842,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1462,"title":{},"body":{"license.html":{}}}],["person",{"_index":1442,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1463,"title":{},"body":{"license.html":{}}}],["picktype",{"_index":154,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(loginreqdto",{"_index":158,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":895,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["plaintoclass",{"_index":664,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["plaintoclass(categorydto",{"_index":685,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["plaintoclass(trackdto",{"_index":1091,"title":{},"body":{"controllers/TracksController.html":{}}}],["plaintoclass(userdto",{"_index":994,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["plaintoken",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["please",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["populate('user",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":743,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1471,"title":{},"body":{"license.html":{}}}],["post",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["post('confirm",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@httpcode(httpstatus.created",{"_index":643,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/UsersController.html":{}}}],["post()@httpcode(httpstatus.created)@apiresponse({type",{"_index":1065,"title":{},"body":{"controllers/TracksController.html":{}}}],["pre",{"_index":1137,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1147,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":929,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{}}}],["process",{"_index":1425,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":756,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":757,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":760,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":762,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":761,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":752,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":753,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":758,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mailer_domain",{"_index":759,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mongodb_uri",{"_index":763,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.node_env",{"_index":751,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":750,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":755,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":754,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":191,"title":{},"body":{"classes/ApiException.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":983,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":999,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.service",{"_index":990,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":981,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":226,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":989,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":89,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["prop",{"_index":602,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":582,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":972,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":974,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["prop({required",{"_index":579,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["propertydescriptor",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1378,"title":{},"body":{"index.html":{}}}],["provide",{"_index":1036,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["provided",{"_index":1472,"title":{},"body":{"license.html":{}}}],["provider",{"_index":891,"title":{},"body":{"injectables/LocalStrategy.html":{},"modules/SharedModule.html":{}}}],["providers",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["publish",{"_index":1456,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1419,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1481,"title":{},"body":{"license.html":{}}}],["put",{"_index":660,"title":{},"body":{"controllers/CategoriesController.html":{},"index.html":{}}}],["put(':id",{"_index":697,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["put(':id')@apibadrequestresponse({type",{"_index":656,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["pw",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":1010,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":1011,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["query",{"_index":86,"title":{},"body":{"classes/AbstractService.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["queryitem",{"_index":97,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":92,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1431,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1155,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":208,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":414,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["redis",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":744,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":581,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":289,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1424,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1405,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1387,"title":{},"body":{"index.html":{}}}],["req",{"_index":785,"title":{},"body":{"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{}}}],["req.dto",{"_index":1075,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["req.dto.ts",{"_index":946,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{}}}],["req.dto.ts:10",{"_index":957,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:13",{"_index":955,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:5",{"_index":959,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:7",{"_index":953,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.url",{"_index":837,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req?.user?.['userid",{"_index":1097,"title":{},"body":{"controllers/TracksController.html":{}}}],["request",{"_index":554,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"index.html":{}}}],["request.body",{"_index":560,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":563,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":605,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["res",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.dto",{"_index":942,"title":{},"body":{"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/TrackDto.html":{}}}],["res.dto.ts",{"_index":623,"title":{},"body":{"classes/BaseResDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["res.dto.ts:10",{"_index":627,"title":{},"body":{"classes/BaseResDto.html":{}}}],["res.dto.ts:13",{"_index":628,"title":{},"body":{"classes/BaseResDto.html":{}}}],["res.dto.ts:16",{"_index":625,"title":{},"body":{"classes/BaseResDto.html":{}}}],["res.status(statuscode).json(exception",{"_index":846,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":293,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":844,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":821,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":575,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1449,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":614,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":616,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":615,"title":{},"body":{"classes/BaseEntity.html":{}}}],["retrieved",{"_index":650,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["return",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":1139,"title":{},"body":{"classes/User.html":{}}}],["returns",{"_index":85,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1452,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["root_url",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":745,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":789,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["scope.request",{"_index":791,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["scoped",{"_index":890,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["search",{"_index":949,"title":{},"body":{"classes/PagedReqDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["secretorkey",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":1460,"title":{},"body":{"license.html":{}}}],["send",{"_index":1189,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverifytoken",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":931,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":905,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":908,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":927,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1016,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1023,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"modules/DbTest.html":{}}}],["services",{"_index":1035,"title":{},"body":{"modules/SharedModule.html":{}}}],["session",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["session.serializer",{"_index":441,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":433,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setrandompass",{"_index":1114,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":592,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1468,"title":{},"body":{"license.html":{}}}],["shared",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/base.controller",{"_index":1074,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["shared/config/configuration",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["shared/constants",{"_index":630,"title":{},"body":{"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/errors",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/models/api",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["shared/models/base.entity",{"_index":730,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto/base",{"_index":1060,"title":{},"body":{"classes/TrackDto.html":{}}}],["shared/models/dto/paged",{"_index":941,"title":{},"body":{"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["shared/models/temporary",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{}}}],["shared/types",{"_index":1143,"title":{},"body":{"classes/User.html":{}}}],["shared/utils/random",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/validations/env.validation",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":243,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":1415,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1396,"title":{},"body":{"index.html":{}}}],["skip",{"_index":950,"title":{},"body":{"classes/PagedReqDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["skip(skip",{"_index":1099,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["slack",{"_index":1429,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":73,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdelete(filter",{"_index":112,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeleteasync",{"_index":74,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeleteasync(filter",{"_index":114,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyid",{"_index":75,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyid(id",{"_index":116,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyidasync",{"_index":76,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyidasync(id",{"_index":118,"title":{},"body":{"classes/AbstractService.html":{}}}],["software",{"_index":1361,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1417,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1412,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract",{"_index":1334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.controller.ts",{"_index":1333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.type.ts",{"_index":1510,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.errors.ts",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1336,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../object",{"_index":1324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../paged",{"_index":1337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.module.ts",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":202,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":204,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":268,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":270,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:107",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:132",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:47",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:56",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:69",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:94",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:111",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:128",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:53",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1212,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":544,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":548,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":551,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":555,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":847,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":873,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts",{"_index":411,"title":{},"body":{"injectables/AuthHandler.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts:9",{"_index":416,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":144,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":894,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":896,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":1009,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1200,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":854,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/pass",{"_index":968,"title":{},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts",{"_index":1013,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1021,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1024,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":856,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":860,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":858,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":877,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:16",{"_index":883,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:8",{"_index":880,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/temp",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":637,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:40",{"_index":644,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:56",{"_index":655,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:67",{"_index":653,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:80",{"_index":647,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:87",{"_index":658,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":706,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":711,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:13",{"_index":715,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dto/category.dto.ts",{"_index":732,"title":{},"body":{"classes/CategoryDto.html":{},"coverage.html":{}}}],["src/categories/models/dto/category.dto.ts:10",{"_index":733,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dto/category.dto.ts:14",{"_index":735,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dto/create",{"_index":764,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/models/dto/paged",{"_index":939,"title":{},"body":{"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["src/mail/mail.module.ts",{"_index":900,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":902,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:10",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:11",{"_index":906,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:16",{"_index":907,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:28",{"_index":910,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1226,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":982,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":987,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":998,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1000,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:7",{"_index":1002,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:9",{"_index":1004,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/base.controller.ts",{"_index":1227,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/config/configuration.ts",{"_index":737,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/abstract",{"_index":1231,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/controllers/abstract.controller.ts",{"_index":1236,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1238,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1242,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":814,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":36,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":810,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/interfaces/object",{"_index":1331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/models/abstract",{"_index":132,"title":{},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["src/shared/models/abstract.model.ts",{"_index":45,"title":{},"body":{"interfaces/AbstractModel.html":{},"coverage.html":{}}}],["src/shared/models/api",{"_index":161,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":588,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":583,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":590,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":587,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":585,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":584,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":580,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":589,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":598,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":600,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":595,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":596,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":594,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":591,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":586,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base",{"_index":622,"title":{},"body":{"classes/BaseResDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/paged",{"_index":945,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/models/temporary",{"_index":1038,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/shared/services/abstract.service.ts",{"_index":57,"title":{},"body":{"classes/AbstractService.html":{},"coverage.html":{}}}],["src/shared/services/abstract.service.ts:11",{"_index":91,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:12",{"_index":94,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:14",{"_index":101,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:15",{"_index":103,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:17",{"_index":96,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:18",{"_index":99,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:20",{"_index":105,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:21",{"_index":115,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:23",{"_index":107,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:24",{"_index":119,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:26",{"_index":113,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:27",{"_index":117,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:29",{"_index":123,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:30",{"_index":125,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:35",{"_index":81,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:36",{"_index":88,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:8",{"_index":109,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:9",{"_index":111,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/base.service.ts",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["src/shared/services/current",{"_index":780,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1029,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/shared.module.ts:8",{"_index":1031,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1515,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/models/dto/create",{"_index":769,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/paged",{"_index":962,"title":{},"body":{"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts",{"_index":1052,"title":{},"body":{"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts:12",{"_index":1056,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:16",{"_index":1054,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1047,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:14",{"_index":1050,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:22",{"_index":1049,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1063,"title":{},"body":{"controllers/TracksController.html":{},"coverage.html":{}}}],["src/tracks/tracks.controller.ts:53",{"_index":1066,"title":{},"body":{"controllers/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:69",{"_index":1070,"title":{},"body":{"controllers/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1103,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":775,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/paged",{"_index":965,"title":{},"body":{"classes/PagedUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":1005,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":1159,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:12",{"_index":1164,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:16",{"_index":1163,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:20",{"_index":1165,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:25",{"_index":1161,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:29",{"_index":1168,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1108,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:39",{"_index":1119,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:47",{"_index":1121,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1117,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:59",{"_index":1124,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1127,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:70",{"_index":1120,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:72",{"_index":1122,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:74",{"_index":1118,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:81",{"_index":1131,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:84",{"_index":1129,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:89",{"_index":1128,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:92",{"_index":1135,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1175,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:49",{"_index":1177,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":1180,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1196,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":167,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":830,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":1367,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1388,"title":{},"body":{"index.html":{}}}],["started",{"_index":1344,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1376,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":606,"title":{},"body":{"classes/BaseEntity.html":{},"modules/SharedModule.html":{},"classes/User.html":{}}}],["status",{"_index":168,"title":{},"body":{"classes/ApiException.html":{}}}],["statuscode",{"_index":169,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":442,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":863,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":52,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1392,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1465,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1458,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1470,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":690,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["successfully.'})@apinotfoundresponse({type",{"_index":651,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["suggested",{"_index":1398,"title":{},"body":{"index.html":{}}}],["super",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(trackservice",{"_index":1085,"title":{},"body":{"controllers/TracksController.html":{}}}],["super(usersservice",{"_index":1186,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.canactivate(context",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["super.login(request",{"_index":876,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["support",{"_index":1365,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1499,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1239,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.controller.ts",{"_index":1234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["symbol",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{}}}],["table",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["tack.dto",{"_index":772,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{}}}],["talents",{"_index":1382,"title":{},"body":{"index.html":{}}}],["target",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcreatedto",{"_index":43,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["technical",{"_index":1359,"title":{},"body":{"index.html":{}}}],["temp",{"_index":444,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":438,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken.schema",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken:16",{"_index":971,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:19",{"_index":970,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:27",{"_index":973,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:30",{"_index":975,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temptokens",{"_index":1045,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentity",{"_index":41,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["tentitydto",{"_index":42,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["test",{"_index":1397,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":799,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/db",{"_index":798,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":713,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["thanks",{"_index":1432,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":561,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.createentity(input",{"_index":683,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.findbyidasync(id",{"_index":692,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.findoneasync",{"_index":679,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.getallcategories",{"_index":688,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.insertasync(cat",{"_index":684,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.softdeletebyidasync(id",{"_index":696,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryservice.updateasync(id",{"_index":703,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.client.connect",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["this.createtransport",{"_index":918,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":188,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":193,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1153,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1154,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":187,"title":{},"body":{"classes/ApiException.html":{}}}],["this.moduleref.resolve(authservice",{"_index":892,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.name",{"_index":617,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":194,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.getprofileasync(req.user['email",{"_index":993,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.req",{"_index":794,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.req.user",{"_index":795,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.req.user['id",{"_index":796,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.stack",{"_index":189,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":198,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":197,"title":{},"body":{"classes/ApiException.html":{}}}],["this.timestamp",{"_index":195,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice",{"_index":1095,"title":{},"body":{"controllers/TracksController.html":{}}}],["this.trackservice.countasync",{"_index":1101,"title":{},"body":{"controllers/TracksController.html":{}}}],["this.trackservice.createentity(input",{"_index":1089,"title":{},"body":{"controllers/TracksController.html":{}}}],["this.trackservice.findoneasync",{"_index":1086,"title":{},"body":{"controllers/TracksController.html":{}}}],["this.trackservice.insertasync(track",{"_index":1090,"title":{},"body":{"controllers/TracksController.html":{}}}],["this.transporter",{"_index":920,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":925,"title":{},"body":{"injectables/MailService.html":{}}}],["this.usersservice",{"_index":1191,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.countasync",{"_index":1193,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.createentity(input",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.findoneasync",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.insertasync(user",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":558,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":932,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/LocalStrategy.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["time",{"_index":137,"title":{},"body":{"classes/AbstractVm.html":{}}}],["timestamp",{"_index":170,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":1048,"title":{},"body":{"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1188,"title":{},"body":{"controllers/UsersController.html":{}}}],["together",{"_index":1380,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":608,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1201,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1202,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{}}}],["token.entity.ts",{"_index":969,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1040,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1039,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1041,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1042,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":445,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":148,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1493,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1156,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":1100,"title":{},"body":{"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["towards",{"_index":1373,"title":{},"body":{"index.html":{}}}],["track",{"_index":1046,"title":{"classes/Track.html":{}},"body":{"classes/Track.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["track.dto",{"_index":1076,"title":{},"body":{"controllers/TracksController.html":{}}}],["track.dto.ts",{"_index":770,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["track.modelname",{"_index":1106,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1107,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":771,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["trackmodelconfig",{"_index":1105,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks",{"_index":1064,"title":{},"body":{"controllers/TracksController.html":{}}}],["tracks.controller",{"_index":1104,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1081,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/tracks.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["trackscontroller",{"_index":1062,"title":{"controllers/TracksController.html":{}},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1084,"title":{},"body":{"controllers/TracksController.html":{}}}],["tracksmodule",{"_index":227,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1080,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["transform",{"_index":612,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":632,"title":{},"body":{"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"controllers/ProfileController.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["transport",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":903,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":712,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1507,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":127,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":603,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":839,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["types",{"_index":128,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{}}}],["ui",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception('please",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["undefined})@exclude",{"_index":1123,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":714,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["update",{"_index":77,"title":{},"body":{"classes/AbstractService.html":{},"controllers/CategoriesController.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":120,"title":{},"body":{"classes/AbstractService.html":{},"controllers/CategoriesController.html":{}}}],["updateasync",{"_index":78,"title":{},"body":{"classes/AbstractService.html":{}}}],["updateasync(id",{"_index":124,"title":{},"body":{"classes/AbstractService.html":{}}}],["updatedat",{"_index":50,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{}}}],["updatedby",{"_index":571,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updateddoc",{"_index":701,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["updateresulttype",{"_index":1514,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uri",{"_index":747,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1453,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":1037,"title":{},"body":{"modules/SharedModule.html":{}}}],["usecreateindex",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":806,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":676,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["usenewurlparser",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":364,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user's",{"_index":1132,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":776,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:8",{"_index":1007,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":1171,"title":{},"body":{"classes/UserDto.html":{}}}],["user.fullname",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.isactive",{"_index":562,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["user.isemailverified",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1198,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1199,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.service.ts",{"_index":781,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["user.service.ts:6",{"_index":784,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user.service.ts:8",{"_index":787,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user.setrandompass",{"_index":1187,"title":{},"body":{"controllers/UsersController.html":{}}}],["user_registered",{"_index":1330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":777,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userid",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["username",{"_index":882,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":887,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userregistered",{"_index":1329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":1125,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.mentee",{"_index":1126,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole})@isenum(userrole)@expose",{"_index":1167,"title":{},"body":{"classes/UserDto.html":{}}}],["users",{"_index":1176,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1197,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1183,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/register",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":988,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{}}}],["users/users.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["users/users.service",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["userscontroller",{"_index":1174,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":228,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["valid('development",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":857,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":859,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":881,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateemailtoken",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":546,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":553,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":306,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":1012,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":155,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/PagedReqDto.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":578,"title":{},"body":{"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1517,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":145,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":153,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":152,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":150,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":611,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":610,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["vm.model.ts",{"_index":133,"title":{},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["vm.model.ts:10",{"_index":140,"title":{},"body":{"classes/AbstractVm.html":{}}}],["vm.model.ts:5",{"_index":138,"title":{},"body":{"classes/AbstractVm.html":{}}}],["vm.model.ts:8",{"_index":141,"title":{},"body":{"classes/AbstractVm.html":{}}}],["void",{"_index":593,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["wait",{"_index":1422,"title":{},"body":{"index.html":{}}}],["want",{"_index":1426,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1477,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1473,"title":{},"body":{"license.html":{}}}],["website",{"_index":1349,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":271,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1366,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1490,"title":{},"body":{"license.html":{}}}],["without",{"_index":1448,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1399,"title":{},"body":{"index.html":{}}}],["writable",{"_index":604,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":620,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":618,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1157,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1148,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1360,"title":{},"body":{"index.html":{}}}],["x",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":1071,"title":{},"body":{"controllers/TracksController.html":{}}}],["zoom",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerOptions-1.html":{"url":"interfaces/AbstractControllerOptions-1.html","title":"interface - AbstractControllerOptions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entity\n                                \n                                \n                                        entityDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AbstractControllerOptions {\n  entity: { new (): TEntity };\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:         DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractModel.html":{"url":"interfaces/AbstractModel.html","title":"interface - AbstractModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/abstract.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface AbstractModel extends Document {\n  createdAt?: Date;\n  updatedAt?: Date;\n  id?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractService.html":{"url":"classes/AbstractService.html","title":"class - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                count\n                            \n                            \n                                    Abstract\n                                    Async\n                                countAsync\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                    Async\n                                findAllAsync\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                    Async\n                                findByIdAsync\n                            \n                            \n                                    Abstract\n                                findOne\n                            \n                            \n                                    Abstract\n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Abstract\n                                hardDelete\n                            \n                            \n                                    Abstract\n                                hardDeleteById\n                            \n                            \n                                    Abstract\n                                insert\n                            \n                            \n                                    Abstract\n                                    Async\n                                insertAsync\n                            \n                            \n                                    Abstract\n                                softDelete\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                    Abstract\n                                softDeleteById\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Abstract\n                                update\n                            \n                            \n                                    Abstract\n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insert(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '@typegoose/typegoose';\nimport { Query } from 'mongoose';\n\nimport { QueryItem, QueryList } from '../types';\nimport { BaseEntity } from '../models/base.entity';\n\nexport abstract class AbstractService {\n  abstract insert(entity: T): Promise>;\n  abstract async insertAsync(entity: T): Promise>;\n\n  abstract findAll(filter: any): QueryList;\n  abstract async findAllAsync(filter: any): Promise>>;\n\n  abstract findOne(filter: any): QueryItem;\n  abstract async findOneAsync(filter: any): Promise>;\n\n  abstract findById(id: string): QueryItem;\n  abstract async findByIdAsync(id: string): Promise>;\n\n  abstract hardDelete(filter: any): QueryItem;\n  abstract async softDeleteAsync(filter: any): Promise;\n\n  abstract hardDeleteById(id: string): QueryItem;\n  abstract async softDeleteByIdAsync(id: string): Promise>;\n\n  abstract softDelete(filter: any): QueryItem;\n  abstract softDeleteById(id: string): QueryItem;\n\n  abstract update(id: string, item: Partial): QueryItem;\n  abstract async updateAsync(\n    id: string,\n    item: Partial\n  ): Promise>;\n\n  abstract count(filter: any): Query;\n  abstract async countAsync(filter: any): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractVm.html":{"url":"classes/AbstractVm.html","title":"class - AbstractVm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractVm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/abstract-vm.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String, format: 'date-time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String, format: 'date-time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class AbstractVm {\n  @ApiPropertyOptional({ type: String, format: 'date-time' })\n  createdAt?: Date;\n\n  @ApiPropertyOptional({ type: String, format: 'date-time' })\n  updatedAt?: Date;\n\n  @ApiPropertyOptional() id?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/api-exception.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/api-exception.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport configuration from '../config/configuration';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number,\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = configuration().environment === 'production' ? null : stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { MailModule } from './mail/mail.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { envValidation } from './shared/validations/env.validation';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\n\nexport const config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\n@Module({\n  imports: [\n    // SharedModule.forRoot(),\n    AuthModule,\n    UsersModule,\n    config,\n    MongooseModule.forRoot(configuration().database.uri, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false\n    }),\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CategoriesModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(input: LoginReqDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n  ApiOkResponse\n} from '@nestjs/swagger';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport { MailService } from '../mail/mail.service';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/models/api-exception.model';\nimport { TokenType } from '../shared/models/temporary-token.entity';\nimport { RegisterUserDto } from '../users/models/dto/register-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(@Body() input: LoginReqDto): Promise {\n    const accessToken = await this.authService.login(\n      input.email,\n      input.password\n    );\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  async register(\n    @Body() input: RegisterUserDto\n  ): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthHandler.html":{"url":"injectables/AuthHandler.html","title":"injectable - AuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/handlers/auth.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleUserRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleUserRegistered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUserRegistered(data: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(AuthEventEnum.UserRegistered)\n                \n            \n\n            \n                \n                    Defined in src/auth/handlers/auth.handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { EventPattern } from '@nestjs/microservices';\n\nimport { AuthEventEnum } from '../models/auth.enums';\n\n@Injectable()\nexport class AuthHandler {\n  @EventPattern(AuthEventEnum.UserRegistered)\n  async handleUserRegistered(data: Record) {\n    // business logic\n    Logger.debug(data, 'handler');\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthHandler\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { MailService } from '../mail/mail.service';\nimport { TemporaryToken } from '../shared/models/temporary-token.entity';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { AuthHandler } from './handlers/auth.handler';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { TempTokensService } from './temp-token.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: true }),\n    UsersModule\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    AuthHandler,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [\n    AuthService,\n    MongooseModule.forFeature([\n      { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: true })\n  ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  OnModuleInit,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { TokenType } from '~shared/models/temporary-token.entity';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit() {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified)\n      throw new UnauthorizedException('Please confirm your email');\n    try {\n      const isValid = await bcrypt.compare(pw, user.password);\n      if (!isValid) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    } catch (error) {\n      Logger.error(error);\n      throw authErrors.INVALID_LOGIN_ATTEMPT;\n    }\n    return user;\n  }\n\n  async login(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const isValidPassword = await bcrypt.compare(pass, user.password);\n    if (!isValidPassword) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n  async pub(): Promise {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { Writable } from '../types';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseResDto.html":{"url":"classes/BaseResDto.html","title":"class - BaseResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base-res.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-res.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-res.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-res.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { columnSize } from '~shared/constants';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId, MaxLength, IsAlphanumeric } from 'class-validator';\n\nexport class BaseResDto {\n  @Expose()\n  @IsMongoId()\n  @ApiProperty()\n  id: string;\n  @Expose()\n  @ApiProperty()\n  readonly updatedAt: Date;\n  @Expose()\n  @ApiProperty()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getCategories\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse()@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({description: 'Category retrieved successfully.'})@ApiNotFoundResponse({type: ApiException, description: 'Category does not exist'})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCategories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategories()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse()@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiBadRequestResponse({type: ApiException})@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n  Get,\n  Param,\n  Delete,\n  Put,\n  NotFoundException,\n  Logger\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiTags,\n  ApiOkResponse,\n  ApiBadRequestResponse,\n  ApiNotFoundResponse\n} from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CategoryDto } from './models/dto/category.dto';\nimport { CategoryService } from './categories.service';\nimport { ApiException } from '~shared/models/api-exception.model';\nimport { CreateCategoryDto } from './models/dto/create-category.dto';\n\n@Controller('categories')\n@ApiTags('categories')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class CategoriesController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({ name: input.name });\n    if (exist) throw new ConflictException(`${input.name} already exists`);\n    const cat = this.categoryService.createEntity(input);\n\n    await this.categoryService.insertAsync(cat);\n\n    return plainToClass(CategoryDto, cat, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n\n  @Get()\n  @ApiOkResponse()\n  @ApiBadRequestResponse({ type: ApiException })\n  async getCategories(): Promise {\n    const categories = this.categoryService.GetAllCategories();\n    return categories;\n  }\n\n  @Get(':id')\n  @ApiOkResponse({ description: 'Category retrieved successfully.' })\n  @ApiNotFoundResponse({\n    type: ApiException,\n    description: 'Category does not exist'\n  })\n  async findById(@Param('id') id: string): Promise {\n    const entity = await this.categoryService.findByIdAsync(id);\n    if (!entity)\n      throw new NotFoundException(`Category with id ${id} does not exist`);\n    return plainToClass(CategoryDto, entity, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n\n  @Delete(':id')\n  @ApiOkResponse()\n  @ApiBadRequestResponse({ type: ApiException })\n  async delete(@Param('id') id: string): Promise {\n    this.categoryService.softDeleteByIdAsync(id);\n  }\n\n  @Put(':id')\n  @ApiBadRequestResponse({ type: ApiException })\n  @ApiOkResponse()\n  async update(\n    @Param('id') id: string,\n    @Body() input: CreateCategoryDto\n  ): Promise {\n    const existed = await this.categoryService.findByIdAsync(id);\n    if (!existed)\n      throw new NotFoundException(`A category with Id ${id} does not exist`);\n    const value = plainToClass(CategoryDto, existed, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n    const updatedDoc = { value, ...input };\n    Logger.debug(updatedDoc);\n    const result = await this.categoryService.updateAsync(id, updatedDoc);\n    return plainToClass(CategoryDto, result, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoryService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { Category } from './models/category.entity';\nimport { CategoriesController } from './categories.controller';\nimport { CategoryService } from './categories.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.modelName, schema: Category.schema },\n    ]),\n  ],\n  controllers: [CategoriesController],\n  providers: [CategoryService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { prop } from '@typegoose/typegoose';\n\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/category.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dto/category.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dto/category.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { columnSize } from '~shared/constants';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId, MaxLength } from 'class-validator';\n\nexport class CategoryDto {\n  @Expose()\n  @IsMongoId()\n  @ApiProperty()\n  id: string;\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends OmitType(CategoryDto, ['id']) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { TrackDto } from './tack.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, ['id']) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, ['id']) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserService.html":{"url":"injectables/CurrentUserService.html","title":"injectable - CurrentUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/current-user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/current-user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/current-user.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CurrentUserService {\n  constructor(@Optional() @Inject(REQUEST) private readonly req: Request) {}\n  get currentUser(): string | null {\n    return !this.req || !this.req.user ? null : this.req.user['id'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst mongod = new MongoMemoryServer();\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultAuthObject {\n  find?: boolean;\n  findById?: boolean;\n  create?: boolean;\n  update?: boolean;\n  delete?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../models/api-exception.model';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode,\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport configuration from '../../shared/config/configuration';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  email: string;\n  role: string;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret,\n    });\n  }\n\n  async validate(payload: any): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/local-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {\n  async canActivate(context: ExecutionContext) {\n    const isValid = (await super.canActivate(context)) as boolean;\n    const request = context.switchToHttp().getRequest();\n    await super.logIn(request);\n    return isValid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private moduleRef: ModuleRef) {\n    super({\n      passReqToCallback: true,\n      usernameField: 'email',\n    });\n  }\n\n  async validate(request: Request, username: string, password: string) {\n    const contextId = ContextIdFactory.getByRequest(request);\n    // \"AuthService\" is a request-scoped provider\n    const authService = await this.moduleRef.resolve(AuthService, contextId);\n    const user = await authService.validateUser(username, password);\n    if (!user.isActive) throw new UnauthorizedException();\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryResDto.html":{"url":"classes/PagedCategoryResDto.html","title":"class - PagedCategoryResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/paged-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaginatedResDto } from '~shared/models/dto/paged-res.dto';\nimport { CategoryDto } from './category.dto';\n\nexport class PagedCategoryResDto extends PaginatedResDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedReqDto.html":{"url":"classes/PagedReqDto.html","title":"class - PagedReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-req.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class PagedReqDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackResDto.html":{"url":"classes/PagedTrackResDto.html","title":"class - PagedTrackResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/paged-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaginatedResDto } from '~shared/models/dto/paged-res.dto';\n\nimport { TrackDto } from './tack.dto';\n\nexport class PagedTrackResDto extends PaginatedResDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserResDto.html":{"url":"classes/PagedUserResDto.html","title":"class - PagedUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/paged-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaginatedResDto } from '../../../shared/models/dto/paged-res.dto';\nimport { UserDto } from './user.dto';\n\nexport class PagedUserResDto extends PaginatedResDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordToken.html":{"url":"classes/PasswordToken.html","title":"class - PasswordToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/pass-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TemporaryToken\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions } from '@typegoose/typegoose';\n\nimport { TemporaryToken } from '../../shared/models/temporary-token.entity';\n\n@modelOptions({ options: { customName: 'password_reset_tokens' } })\n@index({ createdAt: 1 }, { expireAfterSeconds: 1 })\nexport class PasswordToken extends TemporaryToken {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { ProfileService } from './profile.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.profileService.getProfileAsync(req.user['email']);\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule],\n  providers: [ProfileService],\n  controllers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfileAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfileAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileAsync(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly usersService: UsersService) {}\n  async getProfileAsync(email: string): Promise {\n    return this.usersService.findOneAsync({ email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, ['id', 'role']) {\n  @MinLength(6)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CurrentUserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/shared.module.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\n\nimport { AbstractService, BaseService, CurrentUserService } from './services';\n\n@Global()\n@Module({ providers: [CurrentUserService] })\nexport class SharedModule {\n  static forRoot(): DynamicModule {\n    const provider = { provide: AbstractService, useClass: BaseService };\n    return {\n      module: SharedModule,\n      providers: [provider],\n      exports: [provider],\n      global: true\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from './base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'Password',\n  EMAIL = 'Email',\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true,\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { index, prop } from '@typegoose/typegoose';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseResDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:13\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseResDto } from '~shared/models/dto/base-res.dto';\n\nexport class TrackDto extends BaseResDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TracksController.html":{"url":"controllers/TracksController.html","title":"controller - TracksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tracks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)@ApiResponse({type: TrackDto})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(input: PagedReqDto, req?: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: PagedTrackResDto})@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                PagedReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Query,\n  Req,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiOkResponse,\n  ApiTags,\n  ApiResponse\n} from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { AbstractCrudController } from '~shared/base.controller';\nimport { ApiException } from '~shared/models/api-exception.model';\nimport { PagedReqDto } from '~shared/models/dto/paged-req.dto';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CreateTrackDto } from './models/dto/create-track.dto';\nimport { PagedTrackResDto } from './models/dto/paged-track.dto';\nimport { TrackDto } from './models/dto/tack.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\n@Controller('tracks')\n@ApiTags('tracks')\n// @UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class TracksController extends AbstractCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto\n}) {\n  constructor(private readonly trackService: TracksService) {\n    super(trackService);\n  }\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  @ApiResponse({ type: TrackDto })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({ email: input.title });\n    if (exist)\n      throw new ConflictException('Track with the title already exists');\n    const track = this.trackService.createEntity(input);\n\n    await this.trackService.insertAsync(track);\n\n    return plainToClass(TrackDto, track, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n  @Get()\n  @ApiOkResponse({ type: PagedTrackResDto })\n  @ApiBadRequestResponse({ type: ApiException })\n  async findAll(\n    @Query() input: PagedReqDto,\n    @Req() req?: Request\n  ): Promise {\n    const { skip, limit, search } = input;\n    const conditions = JSON.parse(search || '{}');\n    const entities = await this.trackService\n      .findAll(conditions)\n      .where({ createdBy: req?.user?.['userId'] })\n      .limit(limit)\n      .skip(skip);\n    const totalCount = await this.trackService.countAsync();\n    const items = plainToClass(TrackDto, entities, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n    return { totalCount, items };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            TracksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst trackModelConfig = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\n@Module({\n  imports: [trackModelConfig],\n  controllers: [TracksController],\n  providers: [TracksService],\n  exports: [trackModelConfig]\n})\nexport class TracksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:81\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:92\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport {\n  index,\n  pre,\n  prop,\n  getModelForClass,\n  ReturnModelType\n} from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Writable } from '../../shared/types';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role: UserRole = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()@IsEmail()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: UserRole})@IsEnum(UserRole)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsEmail, IsEnum, IsMongoId, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\n\nimport { UserRole } from '../user.entity';\n\nexport class UserDto {\n  @Expose()\n  @IsMongoId()\n  @ApiProperty()\n  id: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  lastName: string;\n  @Expose()\n  @ApiProperty()\n  @IsEmail()\n  @MaxLength(columnSize.length64)\n  email: string;\n  @ApiProperty({ enum: UserRole })\n  @IsEnum(UserRole)\n  @Expose()\n  role: UserRole = UserRole.MENTEE;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: PagedReqDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: PagedUserResDto})@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                PagedReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { AbstractCrudController } from '../shared/base.controller';\nimport { ApiException } from '../shared/models/api-exception.model';\nimport { PagedReqDto } from '../shared/models/dto/paged-req.dto';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserResDto } from './models/dto/paged-user.dto';\nimport { UserDto } from './models/dto/user.dto';\nimport { User } from './models/user.entity';\nimport { UsersService } from './users.service';\n\n@ApiTags('Users')\n@Controller('users')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class UsersController extends AbstractCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n}) {\n  constructor(private readonly usersService: UsersService) {\n    super(usersService);\n  }\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    user.setRandomPass();\n    await this.usersService.insertAsync(user);\n\n    // TODO: Send password reset email\n    return user.id;\n  }\n\n  @Get()\n  @ApiOkResponse({ type: PagedUserResDto })\n  @ApiBadRequestResponse({ type: ApiException })\n  async findAll(@Query() query: PagedReqDto) {\n    const { skip, limit, search } = query;\n    const entities = await this.usersService\n      .findAll(search && { $text: { $search: search } })\n      .limit(limit)\n      .skip(skip);\n    const totalCount = await this.usersService.countAsync();\n    const items = plainToClass(UserDto, entities, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true,\n    });\n\n    return { totalCount, items };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.modelName, schema: User.schema }])\n  ],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [\n    UsersService,\n    MongooseModule.forFeature([{ name: User.modelName, schema: User.schema }])\n  ]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/handlers/auth.handler.ts\n            \n            injectable\n            AuthHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/pass-token.entity.ts\n            \n            class\n            PasswordToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dto/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/models/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dto/paged-category.dto.ts\n            \n            class\n            PagedCategoryResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/base.controller.ts\n            \n            function\n            AbstractCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-auth.controller.ts\n            \n            function\n            abstractControllerWithAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-swagger.controller.ts\n            \n            function\n            abstractControllerWithSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract.controller.ts\n            \n            function\n            abstractControllerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/abstract-vm.model.ts\n            \n            class\n            AbstractVm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/abstract.model.ts\n            \n            interface\n            AbstractModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/api-exception.model.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base-res.dto.ts\n            \n            class\n            BaseResDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-req.dto.ts\n            \n            class\n            PagedReqDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-res.dto.ts\n            \n            function\n            PaginatedResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/shared/services/abstract.service.ts\n            \n            class\n            AbstractService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/shared/services/current-user.service.ts\n            \n            injectable\n            CurrentUserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/paged-track.dto.ts\n            \n            class\n            PagedTrackResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            controller\n            TracksController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            trackModelConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            class\n            TracksService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/paged-user.dto.ts\n            \n            class\n            PagedUserResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            class\n            UsersService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            mongod\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-addons/in-memory-db : ^1.8.10\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.1.3\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.1.3\n        \n            @nestjs/microservices : ^7.1.3\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.1.3\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            ObjectMapping   (src/.../object-mapping.enum.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/shared/interfaces/object-mapping.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ObjectMapping\n                    \n                \n                        \n                            \n                                 Mongoose\n                            \n                        \n                        \n                            \n                                Value : mongoose\n                            \n                        \n            \n        \n\n    src/shared/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Password\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            abstractControllerFactory   (src/.../abstract.controller.ts)\n                        \n                        \n                            abstractControllerWithAuth   (src/.../abstract-with-auth.controller.ts)\n                        \n                        \n                            abstractControllerWithSwagger   (src/.../abstract-with-swagger.controller.ts)\n                        \n                        \n                            AbstractCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PaginatedResDto   (src/.../paged-res.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/abstract.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerFactory\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerFactory(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/abstract-with-auth.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerWithAuth\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerWithAuth(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/abstract-with-swagger.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerWithSwagger\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerWithSwagger(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AbstractCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nAbstractCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-res.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PaginatedResDto\n                        \n                        \n                    \n                \n            \n            \n                \nPaginatedResDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoriesModule -->\n\nCategoryService->CategoriesModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            IdType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdType\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            mongod   (test/.../db-test.module.ts)\n                        \n                        \n                            trackModelConfig   (src/.../tracks.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthEnable: boolean,\n  decorator: MethodDecorator,\n): MethodDecorator => {\n  return (target: object, key: string | symbol, value: any): any => {\n    if (isAuthEnable) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    test/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mongod\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DefaultAuthObject\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  find: true,\n  findById: true,\n  create: true,\n  update: true,\n  delete: true,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean,\n): DefaultAuthObject => {\n  let auth = null;\n\n  if (!!authObj) {\n    return auth;\n  }\n\n  if (authObj === true) {\n    auth = defaultAuthObj;\n  } else if (authObj === false) {\n    auth = {\n      find: false,\n      findById: false,\n      create: false,\n      update: false,\n      delete: false,\n    };\n  } else {\n    auth = {\n      ...defaultAuthObj,\n      ...authObj,\n    };\n  }\n\n  return auth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bearerAuthName: 'x-auth'\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            trackModelConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
