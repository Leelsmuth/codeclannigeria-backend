var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.037,1,2.119]],["body/interfaces/AbstractControllerOptions.html",[0,1.318,1,3.379,2,2.134,3,0.256,4,0.256,5,0.229,6,4.126,7,2.134,8,4.126,9,0.339,10,1.311,11,5.937,12,5.305,13,5.305,14,5.081,15,0.623,16,0.018,17,0.256,18,2.282,19,4.793,20,4.793,21,4.793,22,0.011,23,0.014,24,0.011]],["title/interfaces/AbstractControllerOptions-1.html",[0,0.867,1,1.771,25,2.037]],["body/interfaces/AbstractControllerOptions-1.html",[0,1.788,1,3.654,2,2.084,3,0.25,4,0.25,5,0.224,7,2.084,9,0.331,10,1.292,14,4.154,15,0.54,16,0.018,17,0.347,18,2.257,22,0.011,23,0.014,24,0.011,26,3.28,27,3.28,28,5.26,29,0.418,30,3.329,31,1.789,32,3.127,33,3.601,34,3.28,35,3.28,36,3.83,37,1.872,38,1.88,39,3.025,40,3.601,41,3.601,42,3.601,43,3.28]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.037,36,2.437]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,1.777,1,3.631,2,2.057,3,0.247,4,0.247,5,0.221,7,2.057,9,0.327,10,1.281,15,0.383,16,0.018,17,0.345,18,2.243,22,0.011,23,0.014,24,0.011,26,3.237,27,3.237,28,3.553,29,0.413,30,3.822,31,1.765,32,3.707,33,3.553,34,3.237,35,3.237,36,4.177,37,2.042,38,2.596,39,2.985,40,3.553,41,3.553,42,3.553,43,3.237]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.037,39,2.437]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.758,1,3.254,2,2.011,3,0.241,4,0.241,5,0.216,7,2.011,9,0.319,10,1.263,14,4.729,15,0.593,16,0.018,17,0.341,18,2.219,22,0.01,23,0.013,24,0.01,26,3.164,27,3.164,28,3.473,29,0.403,30,3.254,31,1.726,32,3.056,33,3.473,34,3.164,35,3.164,36,4.133,37,2.02,38,1.813,39,3.743,40,5.19,41,3.473,42,5.19,43,3.164]],["title/interfaces/AbstractModel.html",[0,1.037,44,2.901]],["body/interfaces/AbstractModel.html",[0,1.34,2,2.171,3,0.26,4,0.26,5,0.233,9,0.345,10,1.326,15,0.55,16,0.017,17,0.26,22,0.011,23,0.014,24,0.011,29,0.436,37,1.921,44,4.678,45,4.198,46,6.627,47,1.587,48,4.168,49,2.932,50,4.168,51,4.09,52,1.378,53,3.151]],["title/classes/AbstractService.html",[54,0.009,55,2.643]],["body/classes/AbstractService.html",[3,0.111,4,0.111,5,0.099,9,0.147,12,2.545,15,0.578,16,0.018,17,0.111,22,0.005,23,0.008,24,0.005,29,0.419,35,3.824,47,1.518,49,2.509,52,1.477,53,1.344,54,0.005,55,2.318,56,0.627,57,1.79,58,0.952,59,6.608,60,3.308,61,2.897,62,3.308,63,2.848,64,3.308,65,2.545,66,3.308,67,2.848,68,3.308,69,3.308,70,3.308,71,3.308,72,3.308,73,3.308,74,3.308,75,3.308,76,3.308,77,2.545,78,4.119,79,3.308,80,1.19,81,2.08,82,2.199,83,1.666,84,6.118,85,1.914,86,3.546,87,3.308,88,2.08,89,3.674,90,3.308,91,2.08,92,3.546,93,3.308,94,2.08,95,3.308,96,2.08,97,5.833,98,3.308,99,2.08,100,3.308,101,2.08,102,3.308,103,2.08,104,3.308,105,2.08,106,3.308,107,2.08,108,3.308,109,2.08,110,3.308,111,2.08,112,3.308,113,2.08,114,3.308,115,2.08,116,3.308,117,2.08,118,3.308,119,2.08,120,3.308,121,5.456,122,5.456,123,2.08,124,2.08,125,2.08,126,1.79,127,1.249,128,1.79,129,1.168,130,2.08]],["title/classes/AbstractVm.html",[54,0.009,131,2.901]],["body/classes/AbstractVm.html",[3,0.234,4,0.234,5,0.21,9,0.31,10,1.24,15,0.574,16,0.018,17,0.234,22,0.01,23,0.013,24,0.01,29,0.392,47,1.544,48,3.79,49,2.666,50,3.79,51,4.106,52,1.473,54,0.01,56,1.323,80,1.078,131,4.375,132,5.746,133,3.778,134,1.993,135,5.687,136,6.675,137,6.675,138,4.388,139,6.915,140,4.388,141,4.388,142,2.182]],["title/classes/AcctVerifyDto.html",[54,0.009,143,2.643]],["body/classes/AcctVerifyDto.html",[3,0.241,4,0.241,5,0.216,9,0.319,10,1.263,15,0.56,16,0.018,17,0.241,22,0.01,23,0.013,24,0.01,29,0.403,52,1.529,54,0.013,56,1.361,80,1.153,134,2.131,143,4.06,144,6.007,145,3.887,146,5.506,147,2.117,148,5.506,149,5.506,150,6.396,151,4.515,152,3.842,153,4.515,154,4.508,155,4.515,156,4.515,157,2.245]],["title/classes/ApiException.html",[54,0.009,158,2.266]],["body/classes/ApiException.html",[3,0.162,4,0.162,5,0.145,9,0.215,10,0.961,15,0.566,16,0.018,17,0.162,18,1.052,22,0.007,23,0.01,24,0.007,29,0.464,47,1.604,52,1.57,54,0.007,56,0.914,80,1.165,82,0.958,83,0.726,134,2.112,142,1.508,158,2.649,159,5.962,160,2.611,161,4.574,162,5.619,163,6.324,164,5.619,165,5.619,166,5.196,167,5.619,168,5.196,169,2.193,170,3.032,171,2.849,172,4.41,173,6.335,174,3.032,175,3.032,176,3.032,177,3.032,178,3.032,179,3.032,180,3.032,181,2.125,182,0.726,183,1.218,184,3.032,185,3.032,186,3.032,187,3.032,188,3.032,189,2.611,190,1.6,191,3.032,192,3.032,193,3.032,194,3.032,195,3.032,196,3.032,197,3.032]],["title/modules/AppModule.html",[198,1.373,199,2.643]],["body/modules/AppModule.html",[3,0.192,4,0.192,5,0.172,16,0.018,17,0.192,22,0.008,23,0.012,24,0.008,29,0.648,54,0.008,182,0.859,183,1.442,198,2.076,199,5.198,200,1.786,201,1.786,202,2.017,203,2.017,204,1.786,205,2.017,206,2.017,207,3.091,208,3.091,209,4.32,210,4.32,211,4.32,212,4.176,213,3.756,214,2.793,215,1.786,216,1.786,217,2.762,218,2.793,219,3.997,220,3.484,221,3.591,222,3.091,223,2.762,224,2.517,225,3.591,226,3.591,227,3.591,228,3.591,229,2.157,230,3.825,231,3.591,232,2.762,233,3.591,234,1.599,235,3.484,236,3.091,237,3.091,238,2.213,239,3.091,240,3.091,241,3.091,242,3.091,243,2.793,244,3.091,245,3.591,246,3.591,247,3.591,248,3.591,249,3.591,250,3.591]],["title/controllers/AuthController.html",[7,1.68,219,2.643]],["body/controllers/AuthController.html",[3,0.097,4,0.097,5,0.087,7,0.807,9,0.128,15,0.449,16,0.018,17,0.097,18,2.132,22,0.004,23,0.007,24,0.004,29,0.593,32,0.956,47,1.117,51,1.662,54,0.004,58,0.852,61,2.722,80,0.876,82,1.618,83,1.226,85,1.409,89,1.561,134,1.618,142,0.901,143,3.789,146,2.548,147,2.243,148,2.548,149,2.548,158,1.778,169,0.901,181,1.269,182,0.434,183,0.728,215,2.154,218,1.017,219,2.074,234,2.958,251,1.559,252,1.393,253,2.548,254,2.959,255,2.959,256,2.959,257,2.959,258,2.959,259,1.811,260,2.602,261,3.346,262,2.433,263,1.811,264,1.811,265,1.811,266,2.548,267,1.811,268,3.036,269,2.959,270,1.811,271,5.577,272,1.811,273,2.799,274,2.959,275,1.811,276,1.811,277,1.811,278,4.332,279,2.959,280,2.959,281,1.811,282,1.811,283,1.929,284,1.811,285,1.811,286,2.799,287,2.959,288,1.811,289,1.811,290,1.559,291,1.559,292,1.559,293,1.559,294,1.811,295,1.811,296,1.559,297,1.269,298,1.393,299,4.11,300,1.559,301,2.959,302,1.017,303,1.811,304,2.254,305,1.811,306,1.559,307,1.393,308,1.17,309,1.269,310,1.269,311,1.811,312,1.17,313,1.366,314,1.088,315,2.107,316,1.393,317,1.979,318,1.269,319,1.269,320,1.811,321,1.811,322,1.811,323,1.811,324,1.811,325,1.811,326,1.559,327,1.811,328,1.811,329,1.811,330,2.629,331,1.585,332,1.811,333,1.811,334,1.811,335,1.811,336,1.811,337,1.503,338,1.811,339,1.811,340,4.908,341,2.985,342,3.346,343,1.559,344,3.247,345,1.559,346,3.23,347,1.559,348,1.559,349,1.559,350,1.393,351,3.767,352,1.811,353,2.959,354,2.959,355,2.959,356,1.811,357,2.959,358,4.332,359,1.559,360,1.559,361,1.559,362,2.548,363,2.959,364,2.959,365,2.959,366,4.332,367,2.959,368,2.959,369,2.959,370,1.559,371,2.548,372,2.959,373,2.959,374,2.959,375,2.959,376,1.811,377,1.811,378,1.559,379,0.956,380,1.811,381,1.811,382,1.811,383,2.074,384,2.548,385,1.811,386,2.276,387,1.811,388,1.811,389,1.811]],["title/injectables/AuthHandler.html",[390,0.99,391,2.437]],["body/injectables/AuthHandler.html",[3,0.252,4,0.252,5,0.226,9,0.335,15,0.392,16,0.018,17,0.252,22,0.011,23,0.014,24,0.011,29,0.584,47,1.031,54,0.011,58,1.717,61,2.625,80,0.808,82,1.493,83,1.132,85,1.3,134,1.493,182,1.132,337,1.641,390,1.566,391,3.854,392,2.105,393,4.07,394,5.965,395,5.965,396,6.535,397,5.965,398,4.728,399,5.965,400,3.313,401,4.728,402,3.637,403,3.637,404,4.07,405,4.728,406,4.728,407,4.728,408,4.728]],["title/modules/AuthModule.html",[198,1.373,209,2.437]],["body/modules/AuthModule.html",[3,0.179,4,0.179,5,0.16,16,0.018,17,0.179,22,0.008,23,0.011,24,0.008,29,0.651,54,0.008,83,0.802,182,0.802,183,1.346,198,2,200,1.667,201,1.667,202,1.882,203,1.882,204,1.667,205,3.086,206,3.086,209,4.859,213,3.674,214,2.661,215,1.667,216,1.667,220,3.32,223,2.578,224,2.348,229,2.013,232,2.578,238,1.109,309,2.348,310,2.348,317,3.814,318,2.348,391,4.226,409,2.885,410,3.351,411,2.885,412,2.885,413,4.226,414,4.226,415,4.226,416,4.584,417,3.351,418,4.737,419,2.578,420,3.351,421,1.882,422,2.165,423,3.351,424,3.351,425,3.351,426,3.351,427,2.885,428,2.885,429,2.885,430,3.351,431,2.578,432,3.351,433,3.351,434,3.351,435,2.348,436,2.885,437,3.351,438,3.351,439,2.885]],["title/injectables/AuthService.html",[317,1.99,390,0.99]],["body/injectables/AuthService.html",[3,0.09,4,0.09,5,0.08,9,0.119,10,0.607,14,2.901,15,0.568,16,0.018,17,0.09,18,1.9,22,0.008,23,0.006,24,0.004,29,0.548,34,1.95,47,1.141,49,0.71,52,1.411,54,0.004,58,0.801,61,2.747,67,1.447,80,1,82,1.653,83,1.253,85,1.505,89,1.468,134,0.531,147,1.518,161,2.496,169,1.384,171,1.674,182,0.402,234,2.97,238,0.556,253,3.949,273,1.798,283,0.749,290,1.447,297,1.178,308,3.382,309,1.178,310,1.178,313,2.275,314,1.01,315,2.777,316,1.293,317,1.468,330,3.979,331,1.505,337,1.592,340,4.026,341,3.205,342,1.178,344,3.144,350,2.141,351,2.487,359,1.447,360,2.396,361,1.447,370,1.447,378,1.447,379,1.468,383,4.38,384,5.167,386,2.141,390,0.731,392,0.749,400,1.178,402,1.293,403,1.293,404,1.447,416,2.901,419,1.293,427,1.447,428,1.447,440,1.447,441,4.943,442,3.561,443,4.943,444,4.14,445,2.783,446,2.783,447,3.561,448,2.783,449,1.447,450,3.561,451,5.234,452,1.681,453,1.681,454,4.14,455,1.681,456,2.783,457,1.681,458,2.301,459,1.681,460,1.681,461,2.783,462,1.681,463,2.783,464,2.783,465,1.681,466,1.681,467,1.681,468,2.783,469,3.561,470,1.681,471,3.561,472,1.681,473,1.086,474,1.681,475,2.141,476,2.141,477,1.681,478,1.447,479,1.447,480,1.798,481,1.447,482,2.396,483,1.293,484,1.681,485,1.447,486,1.447,487,1.681,488,1.681,489,3.066,490,1.681,491,2.74,492,2.783,493,3.561,494,3.561,495,1.681,496,1.681,497,3.564,498,1.681,499,1.681,500,3.561,501,1.681,502,1.086,503,1.681,504,1.681,505,1.293,506,1.293,507,1.681,508,1.681,509,1.681,510,2.783,511,1.681,512,1.681,513,1.293,514,1.681,515,1.681,516,1.681,517,1.681,518,1.681,519,2.783,520,2.783,521,1.447,522,2.783,523,1.681,524,2.783,525,1.681,526,1.681,527,1.681,528,1.681,529,1.681,530,1.681,531,1.681,532,2.783]],["title/guards/AuthenticationGuard.html",[319,2.643,533,2.901]],["body/guards/AuthenticationGuard.html",[3,0.2,4,0.2,5,0.179,9,0.266,15,0.484,16,0.018,17,0.2,18,1.303,22,0.009,23,0.012,24,0.009,29,0.587,47,1.272,54,0.009,58,1.476,61,2.722,80,0.998,82,1.844,83,1.397,85,1.409,89,2.705,147,1.243,169,1.867,182,0.899,183,1.508,229,2.255,234,2.599,238,1.697,260,3.079,262,3.807,283,2.283,297,3.593,302,2.109,313,2.125,317,3.576,318,2.631,319,3.593,331,1.587,337,2.025,341,2.549,344,2.255,390,1.346,479,3.232,483,2.888,534,3.754,535,3.232,536,4.825,537,5.126,538,3.754,539,3.754,540,3.943,541,4.825,542,3.754,543,2.888,544,5.126,545,3.754,546,2.426,547,3.232,548,3.754,549,3.232,550,3.754,551,3.754,552,3.232,553,3.754]],["title/classes/BaseEntity.html",[54,0.009,129,2.119]],["body/classes/BaseEntity.html",[3,0.111,4,0.111,5,0.1,9,0.147,10,0.722,15,0.508,16,0.018,17,0.111,18,1.63,22,0.005,23,0.008,24,0.005,29,0.458,31,2.662,37,1.046,38,1.887,47,1.295,48,2.476,49,1.742,50,2.476,51,3.524,52,0.857,53,1.346,54,0.005,56,0.628,58,0.953,59,1.793,80,1.158,85,1.291,127,1.251,128,1.793,129,3.597,134,1.876,190,3.438,238,2.322,243,3.438,266,1.793,313,0.758,314,1.251,331,3.048,337,1.149,431,3.944,473,3.528,554,1.793,555,4.698,556,2.889,557,2.889,558,2.889,559,4.012,560,3.593,561,2.889,562,3.292,563,3.292,564,3.08,565,3.292,566,2.548,567,4.123,568,2.715,569,3.292,570,2.083,571,4.635,572,3.292,573,2.083,574,2.083,575,2.083,576,2.083,577,2.083,578,2.083,579,2.083,580,2.083,581,2.083,582,3.826,583,3.337,584,2.083,585,2.083,586,2.083,587,2.083,588,2.083,589,2.083,590,2.083,591,2.083,592,4.709,593,2.083,594,1.602,595,3.036,596,2.851,597,2.083,598,2.083,599,2.083,600,2.083,601,2.083,602,2.083,603,2.083,604,2.083,605,3.312,606,2.083,607,3.312,608,3.549,609,3.312]],["title/interfaces/Configuration.html",[0,1.037,183,1.515]],["body/interfaces/Configuration.html",[0,1.572,2,1.607,3,0.193,4,0.193,5,0.173,9,0.255,10,1.088,15,0.589,16,0.018,17,0.193,22,0.008,23,0.012,24,0.008,31,1.379,38,2.297,52,1.581,83,1.194,171,2.9,183,2.297,238,1.195,379,2.633,610,2.53,611,4.981,612,4.589,613,4.981,614,4.981,615,4.981,616,4.266,617,4.811,618,4.981,619,4.981,620,3.497,621,3.497,622,3.497,623,3.497,624,2.777,625,2.777,626,2.777,627,2.777,628,2.777,629,2.777,630,2.777,631,2.777,632,2.777,633,2.777,634,2.777,635,2.777,636,2.777]],["title/classes/CreateUserDto.html",[54,0.009,637,2.643]],["body/classes/CreateUserDto.html",[3,0.293,4,0.293,5,0.262,16,0.018,17,0.293,22,0.013,23,0.015,24,0.013,29,0.584,37,1.733,49,2.318,54,0.013,56,1.654,142,2.728,312,3.545,637,4.579,638,4.723,639,3.844,640,4.723,641,2.894,642,4.723]],["title/injectables/CurrentUserService.html",[390,0.99,643,2.437]],["body/injectables/CurrentUserService.html",[3,0.243,4,0.243,5,0.217,9,0.322,15,0.377,16,0.018,17,0.243,22,0.011,23,0.013,24,0.011,29,0.573,47,1.268,52,0.945,54,0.011,80,0.994,82,1.435,83,1.088,169,2.26,182,1.088,190,3.069,261,4.076,262,3.927,302,2.553,330,3.185,331,1.92,337,1.577,390,1.527,392,2.024,566,4.475,643,3.759,644,5.523,645,3.912,646,6.415,647,4.544,648,4.544,649,4.544,650,4.544,651,4.544,652,5.817,653,3.496,654,4.544,655,4.544,656,4.544,657,4.544,658,4.544,659,4.544]],["title/interfaces/Database.html",[0,1.037,612,2.437]],["body/interfaces/Database.html",[0,1.65,2,1.766,3,0.212,4,0.212,5,0.19,9,0.281,10,1.16,15,0.532,16,0.018,17,0.212,22,0.009,23,0.012,24,0.009,31,1.516,38,1.593,52,1.577,83,1.601,171,3.016,183,2.137,238,1.313,379,2.807,610,2.78,611,4.093,612,4.324,613,4.093,614,4.093,615,4.093,616,3.854,617,4.931,618,4.093,619,4.093,620,4.689,621,4.689,622,3.729,623,3.729,624,3.051,625,3.051,626,3.051,627,3.051,628,3.051,629,3.051,630,3.051,631,3.051,632,3.051,633,3.051,634,3.051,635,3.051,636,3.051]],["title/interfaces/DefaultAuthObject.html",[0,1.037,30,2.119]],["body/interfaces/DefaultAuthObject.html",[0,1.274,2,2.064,3,0.247,4,0.247,5,0.222,9,0.328,10,1.284,15,0.584,16,0.017,17,0.247,22,0.011,23,0.014,24,0.011,30,3.308,32,2.445,38,3.091,47,1.639,65,5.241,77,5.241,564,4.092,660,3.99,661,3.99,662,5.241,663,5.241]],["title/classes/HttpExceptionFilter.html",[54,0.009,664,2.901]],["body/classes/HttpExceptionFilter.html",[3,0.203,4,0.203,5,0.181,9,0.269,15,0.315,16,0.018,17,0.203,18,1.317,22,0.009,23,0.012,24,0.009,29,0.524,47,0.827,52,0.789,54,0.009,56,1.144,58,1.487,80,0.649,82,1.199,83,0.908,85,1.043,158,3.102,161,2.659,162,4.446,164,4.446,167,5.053,181,2.659,182,0.908,190,2.725,234,3.196,261,3.619,302,2.132,307,2.919,483,3.972,491,4.515,583,2.132,620,4.114,664,3.972,665,4.446,666,3.267,667,5.87,668,5.164,669,6.3,670,3.795,671,3.795,672,5.164,673,3.795,674,3.795,675,3.795,676,3.795,677,3.795,678,3.795,679,3.795,680,3.795,681,5.164,682,3.795,683,5.164,684,3.795,685,3.795,686,3.795,687,3.795,688,3.795,689,3.795,690,3.795,691,3.795,692,5.87,693,3.267,694,3.795,695,3.795,696,3.795,697,3.795]],["title/injectables/JwtAuthGuard.html",[390,0.99,698,2.437]],["body/injectables/JwtAuthGuard.html",[3,0.257,4,0.257,5,0.23,9,0.34,15,0.399,16,0.018,17,0.257,22,0.011,23,0.014,24,0.011,29,0.588,37,1.519,47,1.048,54,0.011,58,1.736,80,0.822,82,1.519,83,1.151,85,1.322,182,1.151,183,1.931,229,2.889,238,1.592,337,1.669,390,1.583,392,2.141,421,2.701,536,4.638,540,4.638,541,5.312,543,3.699,549,4.14,698,3.896,699,5.19,700,3.699,701,4.809,702,4.14,703,4.809,704,4.809,705,4.14]],["title/interfaces/JwtPayload.html",[0,1.037,480,2.437]],["body/interfaces/JwtPayload.html",[0,1.409,2,2.282,3,0.274,4,0.274,5,0.245,9,0.363,10,1.367,15,0.562,16,0.017,17,0.274,22,0.012,23,0.015,24,0.012,49,2.984,52,1.578,147,2.337,480,4.052,502,4.563,706,4.412,707,4.412]],["title/injectables/JwtStrategy.html",[390,0.99,413,2.437]],["body/injectables/JwtStrategy.html",[3,0.239,4,0.239,5,0.214,9,0.317,15,0.372,16,0.018,17,0.239,22,0.01,23,0.013,24,0.01,29,0.622,37,1.417,47,0.978,54,0.01,58,1.661,61,2.561,80,0.986,82,1.417,83,1.074,85,1.233,89,3.044,169,3.171,182,1.074,183,1.802,229,2.695,243,2.52,337,1.557,390,1.514,392,1.998,413,3.728,421,2.52,435,3.144,439,3.862,480,2.899,481,3.862,482,5.489,708,3.862,709,4.438,710,4.486,711,5.769,712,4.486,713,3.862,714,4.486,715,3.862,716,3.451,717,3.862,718,3.862,719,4.486,720,4.486,721,4.486,722,4.486]],["title/injectables/LocalAuthGuard.html",[390,0.99,723,2.901]],["body/injectables/LocalAuthGuard.html",[3,0.251,4,0.251,5,0.225,9,0.332,15,0.39,16,0.018,17,0.251,22,0.011,23,0.014,24,0.011,29,0.531,37,1.483,38,1.886,47,1.024,54,0.011,58,1.71,61,2.617,80,0.803,82,1.483,83,1.124,85,1.291,182,1.124,234,2.645,262,2.638,337,1.63,341,2.954,390,1.559,392,2.091,421,2.638,497,5.113,536,4.569,540,4.569,541,5.266,543,3.613,547,4.043,700,3.613,702,4.043,705,4.043,723,4.569,724,5.113,725,4.696,726,4.696,727,4.696]],["title/injectables/LocalStrategy.html",[390,0.99,414,2.437]],["body/injectables/LocalStrategy.html",[3,0.207,4,0.207,5,0.185,9,0.274,15,0.435,16,0.018,17,0.207,18,1.346,22,0.009,23,0.012,24,0.009,29,0.593,37,1.225,47,1.142,52,1.423,54,0.009,58,1.509,61,2.384,80,0.896,82,1.655,83,1.254,85,1.066,147,1.284,169,1.929,182,0.928,234,2.643,238,1.284,262,3.73,283,2.831,297,3.673,313,1.908,317,3.132,318,2.718,337,1.346,341,2.607,344,2.33,390,1.376,392,1.727,414,3.387,421,2.179,546,2.506,552,3.339,653,2.984,709,4.032,713,3.339,715,3.339,716,2.984,717,3.339,718,3.339,728,3.339,729,3.879,730,6.844,731,3.879,732,5.241,733,5.936,734,3.879,735,3.879,736,2.984,737,3.879,738,3.879,739,5.241,740,3.879,741,3.879,742,3.879,743,3.879,744,3.879]],["title/classes/LoginReqDto.html",[54,0.009,260,2.266]],["body/classes/LoginReqDto.html",[3,0.258,4,0.258,5,0.232,9,0.343,10,1.32,15,0.503,16,0.018,17,0.323,22,0.011,23,0.014,24,0.011,29,0.433,52,1.511,54,0.015,56,1.46,80,1.035,134,1.912,147,2.187,152,3.968,154,4.269,157,2.408,171,2.276,260,3.637,283,2.942,383,3.393,458,3.129,505,3.725,506,3.725,745,3.725,746,4.842,747,4.842]],["title/classes/LoginResDto.html",[54,0.009,458,2.437]],["body/classes/LoginResDto.html",[3,0.258,4,0.258,5,0.231,9,0.341,10,1.317,15,0.547,16,0.018,17,0.322,22,0.011,23,0.014,24,0.011,29,0.431,52,1.51,54,0.015,56,1.455,80,1.127,147,1.597,152,3.629,154,3.904,157,2.4,171,2.84,260,2.899,283,2.149,383,4.623,458,3.904,505,5.074,506,5.074,745,3.712,748,4.826,749,4.826,750,4.826]],["title/modules/MailModule.html",[198,1.373,210,2.437]],["body/modules/MailModule.html",[3,0.258,4,0.258,5,0.232,16,0.018,17,0.258,22,0.011,23,0.014,24,0.011,29,0.541,54,0.011,182,1.159,198,2.405,200,2.408,201,2.408,202,2.72,203,2.72,204,2.408,205,3.711,206,3.711,210,4.765,214,3.401,215,2.408,216,2.408,304,4.597,751,4.169,752,4.169,753,4.169,754,4.842,755,4.842]],["title/injectables/MailService.html",[304,2.266,390,0.99]],["body/injectables/MailService.html",[3,0.267,4,0.194,5,0.173,9,0.257,10,1.091,15,0.416,16,0.018,17,0.194,22,0.008,23,0.012,24,0.008,29,0.579,31,1.387,32,1.914,47,0.791,54,0.008,58,1.442,61,2.303,80,1.109,82,1.146,83,0.868,85,1.377,169,2.852,182,0.868,183,2.303,229,2.179,234,2.23,235,4.018,304,3.008,330,4.982,331,2.423,341,1.804,362,4.311,390,1.315,392,1.616,400,2.543,475,2.791,568,1.804,583,2.038,616,2.179,623,2.543,756,3.123,757,5.734,758,6.183,759,5.007,760,5.007,761,3.628,762,5.007,763,5.734,764,3.628,765,3.628,766,3.628,767,5.734,768,4.936,769,5.007,770,3.123,771,3.628,772,3.628,773,3.628,774,3.628,775,3.628,776,3.628,777,3.628,778,3.628,779,3.628,780,3.628,781,3.628,782,3.628,783,5.007,784,3.628,785,3.628,786,3.628,787,3.628,788,3.628,789,3.628,790,3.628,791,3.628]],["title/interfaces/Mailer.html",[0,1.037,616,2.266]],["body/interfaces/Mailer.html",[0,1.684,2,1.839,3,0.22,4,0.22,5,0.197,9,0.292,10,1.191,15,0.454,16,0.018,17,0.22,22,0.01,23,0.013,24,0.01,31,1.578,38,1.659,52,1.572,83,1.308,171,2.569,183,2.195,238,1.367,379,2.884,610,2.894,611,4.204,612,4.213,613,4.204,614,4.204,615,4.204,616,4.074,617,4.569,618,4.204,619,4.204,620,3.83,621,3.83,622,4.753,623,4.753,624,3.177,625,3.177,626,3.177,627,3.177,628,3.177,629,3.177,630,3.177,631,3.177,632,3.177,633,3.177,634,3.177,635,3.177,636,3.177]],["title/classes/PagedReqDto.html",[54,0.009,792,2.643]],["body/classes/PagedReqDto.html",[3,0.239,4,0.239,5,0.214,9,0.317,10,1.257,15,0.529,16,0.018,17,0.239,22,0.01,23,0.013,24,0.01,29,0.401,31,2.205,47,1.554,52,1.199,54,0.013,56,1.353,80,1.09,134,2.014,157,2.231,171,3.164,568,2.869,792,4.043,793,5.178,794,3.862,795,4.905,796,5.489,797,5.489,798,5.769,799,7.249,800,4.486,801,4.486,802,3.728,803,4.486]],["title/classes/PagedUserResDto.html",[54,0.009,804,2.643]],["body/classes/PagedUserResDto.html",[3,0.293,4,0.293,5,0.262,16,0.018,17,0.293,22,0.013,23,0.015,24,0.013,29,0.584,37,1.733,54,0.013,56,1.654,312,3.545,639,3.844,641,2.894,804,4.579,805,4.723,806,4.22,807,4.723,808,5.486,809,5.486]],["title/classes/PasswordToken.html",[54,0.009,810,2.901]],["body/classes/PasswordToken.html",[3,0.129,4,0.129,5,0.116,9,0.321,10,0.812,15,0.589,16,0.018,17,0.129,18,0.84,22,0.006,23,0.009,24,0.006,25,2.407,29,0.333,31,2.502,37,1.176,38,1.496,47,1.474,48,2.727,49,1.574,50,2.237,51,3.266,52,0.944,54,0.006,56,0.73,58,1.072,80,1.214,85,1.402,127,1.454,129,3.959,134,2.135,190,2.69,238,2.205,243,3.092,308,2.407,309,1.696,310,1.696,313,1.653,331,3.111,351,2.237,422,3.913,473,3.757,513,2.865,556,2.61,557,2.61,558,2.61,559,3.573,560,3.182,561,2.61,562,3.182,563,3.182,564,2.727,565,3.182,568,2.891,569,4.074,571,4.244,572,3.573,582,3.182,583,2.864,595,2.407,810,2.865,811,2.084,812,1.696,813,4.977,814,2.42,815,2.42,816,1.862,817,2.865,818,2.42,819,2.084,820,2.42,821,1.862,822,1.862,823,1.862,824,1.862,825,1.862,826,1.862,827,1.862,828,1.862,829,1.862,830,1.862,831,1.862,832,1.862,833,1.862,834,3.207,835,1.696,836,2.084,837,2.42,838,2.084]],["title/controllers/ProfileController.html",[7,1.68,839,2.643]],["body/controllers/ProfileController.html",[3,0.222,4,0.222,5,0.199,7,1.855,9,0.295,15,0.346,16,0.018,17,0.222,22,0.01,23,0.013,24,0.01,29,0.636,47,0.908,54,0.013,58,1.583,61,2.471,80,0.712,82,1.316,83,0.997,85,1.145,89,2.901,134,1.316,142,2.072,182,0.997,218,2.34,234,1.855,238,1.82,252,3.205,261,4.312,262,3.675,298,3.205,302,2.34,313,2.001,331,1.761,337,1.446,341,2.072,546,2.692,641,2.198,698,2.692,839,3.853,840,3.587,841,4.167,842,5.498,843,4.167,844,4.167,845,4.167,846,4.733,847,3.587,848,2.692,849,3.587,850,3.587,851,4.167,852,3.696,853,3.587,854,4.167,855,3.587,856,4.167,857,4.167,858,3.587,859,3.587,860,3.587]],["title/modules/ProfileModule.html",[198,1.373,211,2.437]],["body/modules/ProfileModule.html",[3,0.247,4,0.247,5,0.221,16,0.018,17,0.247,22,0.011,23,0.014,24,0.011,29,0.608,54,0.011,182,1.106,198,2.353,200,2.297,201,2.297,202,2.595,203,2.595,204,2.297,205,3.631,206,2.595,211,4.773,213,4.034,214,3.301,215,2.297,216,2.297,218,3.301,220,4.119,232,3.553,839,4.531,852,4.314,853,3.977,861,3.977,862,4.619,863,3.977,864,4.619,865,4.619]],["title/injectables/ProfileService.html",[390,0.99,852,2.266]],["body/injectables/ProfileService.html",[3,0.244,4,0.244,5,0.219,9,0.324,15,0.485,16,0.018,17,0.244,22,0.011,23,0.014,24,0.011,29,0.575,47,1.273,52,1.338,54,0.011,58,1.681,61,2.585,80,0.998,82,1.845,83,1.398,85,1.257,89,3.082,147,1.933,169,2.275,182,1.095,313,1.665,314,2.747,315,4.024,316,3.519,331,1.933,337,1.587,342,3.205,390,1.533,392,2.037,449,3.938,546,2.956,852,3.508,866,3.938,867,5.841,868,4.574,869,5.841,870,4.574]],["title/classes/RegisterUserDto.html",[54,0.009,268,2.643]],["body/classes/RegisterUserDto.html",[3,0.267,4,0.267,5,0.239,9,0.354,10,1.346,15,0.415,16,0.018,17,0.267,22,0.012,23,0.014,24,0.012,29,0.599,37,1.578,49,2.112,52,1.284,54,0.014,56,1.507,80,0.854,134,1.578,142,2.485,157,2.485,268,4.328,283,2.984,312,3.229,502,3.229,639,3.502,640,4.302,641,2.637,642,4.302,871,5.316,872,6.175,873,4.997,874,4.997]],["title/classes/ResetPassInput.html",[54,0.009,273,2.437]],["body/classes/ResetPassInput.html",[3,0.249,4,0.249,5,0.223,9,0.33,10,1.289,15,0.539,16,0.018,17,0.249,22,0.011,23,0.014,24,0.011,29,0.528,37,1.868,52,1.42,54,0.014,56,1.407,80,1.11,134,2.051,147,1.958,152,2.802,154,4.413,157,2.32,273,3.822,286,4.554,326,4.016,351,3.553,386,4.996,709,3.589,813,4.145,875,5.092,876,4.016,877,4.665,878,4.665,879,4.665]],["title/injectables/SessionSerializer.html",[390,0.99,415,2.437]],["body/injectables/SessionSerializer.html",[3,0.22,4,0.22,5,0.197,9,0.292,15,0.454,16,0.018,17,0.22,22,0.01,23,0.013,24,0.01,29,0.547,37,1.726,47,1.191,54,0.01,58,1.573,80,0.934,82,1.726,83,1.308,85,1.503,161,3.83,182,0.988,313,2.784,314,2.481,390,1.435,392,1.839,400,2.894,415,3.532,421,2.32,583,3.662,880,3.555,881,6.126,882,5.466,883,5.466,884,5.466,885,6.968,886,6.52,887,5.466,888,4.13,889,4.204,890,5.466,891,4.13,892,5.466,893,4.13]],["title/modules/SharedModule.html",[198,1.373,212,2.437]],["body/modules/SharedModule.html",[3,0.239,4,0.239,5,0.214,16,0.018,17,0.239,22,0.01,23,0.013,24,0.01,29,0.515,54,0.01,55,4.043,58,1.291,80,0.767,85,1.233,182,1.074,198,2.45,200,2.231,201,2.231,202,2.52,203,2.52,204,2.231,205,3.781,206,2.52,212,4.684,214,3.24,215,2.231,216,2.231,238,1.485,337,1.557,596,4.966,643,4.605,894,3.862,895,3.862,896,4.486,897,6.377,898,4.486,899,6.377,900,6.377,901,4.966,902,4.486,903,3.862,904,4.486]],["title/classes/TemporaryToken.html",[54,0.009,422,2.437]],["body/classes/TemporaryToken.html",[3,0.116,4,0.116,5,0.104,9,0.341,10,0.748,15,0.594,16,0.018,17,0.183,18,0.756,22,0.005,23,0.008,24,0.005,25,2.745,29,0.379,31,2.43,37,1.084,38,1.379,47,1.437,48,2.062,49,1.451,50,2.062,51,3.391,52,1.09,54,0.005,56,0.657,58,0.988,80,1.191,85,1.325,127,1.309,129,3.972,134,2.082,147,1.136,190,2.542,238,2.287,243,3.273,283,1.529,308,3.387,313,2.121,314,1.309,331,3.113,351,2.551,422,2.219,473,3.598,513,3.707,556,2.406,557,2.406,558,2.406,559,3.377,560,2.977,561,2.406,562,2.977,563,2.977,564,2.551,565,2.977,568,2.769,569,3.902,571,4.456,572,3.377,582,2.977,583,2.707,592,4.032,595,3.598,802,1.409,812,1.528,813,4.686,816,1.677,817,4.032,819,1.877,821,1.677,822,1.677,823,1.677,824,1.677,825,1.677,826,1.677,827,1.677,828,1.677,829,1.677,830,1.677,831,1.677,832,1.677,833,1.677,834,2.956,835,1.528,836,1.877,838,1.877,905,4.032,906,2.18,907,2.18,908,2.18,909,2.18,910,2.18,911,2.641,912,2.18]],["title/classes/User.html",[54,0.009,313,1.373]],["body/classes/User.html",[3,0.087,4,0.087,5,0.078,9,0.246,10,0.589,15,0.554,16,0.018,17,0.144,18,0.938,22,0.004,23,0.006,24,0.004,25,1.049,29,0.482,31,2.529,37,0.854,38,1.627,47,1.26,48,1.623,49,1.142,50,1.623,51,2.729,52,1.233,54,0.006,56,0.489,58,0.778,61,0.652,80,1.184,83,0.647,85,1.335,127,0.975,129,3.752,134,2.043,147,1.341,171,1.271,182,0.388,190,2.137,238,2.414,243,3.333,283,1.547,313,1.264,331,3.112,337,0.563,341,0.807,344,0.975,379,0.856,473,3.92,476,1.248,478,2.99,489,1.397,491,1.248,502,2.244,521,2.99,556,1.894,557,1.894,558,1.894,559,2.839,560,2.434,561,1.894,562,2.434,563,2.434,564,2.086,565,2.434,566,2.079,568,2.562,569,4.05,571,3.404,572,3.153,582,2.434,583,2.729,592,4.31,594,1.248,595,3.486,608,1.397,802,1.746,813,4.335,816,1.248,817,3.963,821,1.248,822,1.248,823,1.248,824,1.248,825,1.248,826,1.248,827,1.248,828,1.248,829,1.248,830,1.248,831,1.248,832,1.248,833,1.248,848,1.049,889,1.248,911,2.079,913,1.248,914,3.473,915,2.99,916,2.99,917,3.473,918,4.05,919,4.05,920,3.473,921,4.645,922,4.858,923,2.703,924,4.182,925,1.623,926,1.623,927,1.623,928,1.623,929,1.623,930,1.623,931,1.623,932,1.623,933,3.461,934,2.99,935,1.623,936,1.623,937,1.623,938,1.623,939,1.623,940,2.703,941,2.327,942,1.623,943,1.623,944,1.623,945,2.703,946,1.137,947,1.397,948,1.623,949,1.623,950,2.327,951,2.327,952,2.327,953,1.623,954,2.703,955,1.623,956,1.623,957,1.623,958,4.05,959,1.623,960,1.623,961,1.623,962,1.623,963,1.623]],["title/classes/UserDto.html",[54,0.009,641,1.99]],["body/classes/UserDto.html",[3,0.205,4,0.205,5,0.184,9,0.272,10,1.136,15,0.55,16,0.018,17,0.205,22,0.009,23,0.012,24,0.009,29,0.592,31,1.47,49,2.498,52,1.476,54,0.014,56,1.16,80,1.132,134,2.091,142,1.913,147,1.956,152,3.131,157,1.913,173,5.877,502,3.82,568,1.913,641,2.75,848,2.486,911,2.959,915,5.089,916,5.089,921,3.312,933,4.874,934,4.487,946,2.696,947,3.312,964,3.312,965,3.847,966,3.847,967,5.212,968,3.847,969,3.847,970,3.847,971,3.847,972,3.847,973,3.847,974,3.847,975,6.827,976,5.911,977,3.847,978,5.212,979,3.847,980,5.911,981,3.847]],["title/controllers/UsersController.html",[7,1.68,982,2.643]],["body/controllers/UsersController.html",[3,0.154,4,0.154,5,0.138,7,1.286,9,0.204,11,2.487,12,2.222,13,2.222,15,0.463,16,0.018,17,0.154,18,1.002,22,0.007,23,0.01,24,0.007,29,0.628,37,0.912,47,0.928,54,0.01,58,1.225,61,2.497,63,3.664,80,0.727,82,1.344,83,1.019,85,1.17,86,4.799,89,2.245,134,1.344,142,1.437,147,1.672,158,3.035,181,2.025,182,0.691,215,1.437,218,1.623,234,2.768,238,1.409,252,2.222,271,3.664,283,1.286,291,2.487,292,2.487,293,2.487,296,3.664,298,2.222,299,3.664,300,2.487,306,2.487,307,2.222,312,2.75,313,1.839,315,2.838,331,1.221,337,1.477,340,3.274,341,2.773,342,2.025,343,2.487,344,1.735,345,2.487,346,2.487,347,2.487,348,2.487,349,2.487,350,2.222,546,1.867,637,4.165,641,2.245,662,3.274,698,1.867,792,3.907,795,2.222,796,4.35,797,2.487,804,2.983,807,2.487,846,3.664,847,2.487,848,1.867,849,2.487,850,2.487,855,2.487,858,2.487,859,2.487,860,2.487,924,2.487,982,2.983,983,2.487,984,2.889,985,2.889,986,2.889,987,2.889,988,2.889,989,2.889,990,2.889,991,2.889,992,4.256,993,3.274,994,2.889,995,2.889,996,2.889,997,2.889,998,2.889,999,2.487,1000,2.487,1001,2.889,1002,2.889,1003,2.889,1004,2.889,1005,2.889,1006,2.889,1007,2.889,1008,2.889,1009,2.889,1010,4.256,1011,2.889,1012,2.889,1013,2.889,1014,2.889,1015,4.256,1016,2.889,1017,4.256]],["title/modules/UsersModule.html",[198,1.373,213,2.119]],["body/modules/UsersModule.html",[3,0.236,4,0.236,5,0.211,16,0.018,17,0.236,22,0.01,23,0.013,24,0.01,29,0.619,54,0.01,83,1.057,182,1.057,198,2.304,200,2.196,201,2.196,202,2.48,203,2.48,204,2.196,205,3.555,206,3.555,213,4.057,214,3.207,215,2.196,216,2.196,218,3.207,220,3.095,223,3.397,224,3.095,313,1.607,315,4.244,429,3.801,431,3.397,982,4.435,999,3.801,1000,3.801,1018,3.801,1019,3.801,1020,3.801,1021,4.416,1022,4.416,1023,4.416,1024,4.416]],["title/classes/ValidateTokenInput.html",[54,0.009,286,2.437]],["body/classes/ValidateTokenInput.html",[3,0.266,4,0.266,5,0.238,9,0.352,10,1.343,15,0.511,16,0.018,17,0.266,22,0.012,23,0.014,24,0.012,29,0.445,52,1.453,54,0.014,56,1.501,80,1.053,134,1.946,147,2.214,152,4.019,154,4.323,157,2.477,286,3.981,351,4.019,1025,5.76,1026,4.287,1027,4.98,1028,4.98]],["title/coverage.html",[1029,4.427]],["body/coverage.html",[0,1.749,1,1.931,5,0.104,6,1.88,7,2.596,8,1.88,15,0.181,16,0.018,18,0.758,22,0.005,23,0.008,24,0.005,26,2.98,27,2.98,30,1.226,32,2.243,36,1.411,39,1.411,44,1.68,45,1.88,54,0.016,55,1.53,57,1.88,129,1.226,131,1.68,132,1.88,133,1.88,143,1.53,144,1.88,145,1.88,158,1.311,159,1.88,160,1.88,183,0.877,198,0.795,204,1.086,217,1.68,219,1.53,230,1.68,235,1.53,251,1.88,260,1.311,268,1.53,273,1.411,286,1.411,304,1.311,313,0.795,315,1.226,317,1.152,319,1.53,390,1.731,391,1.411,393,1.88,413,1.411,414,1.411,415,1.411,416,1.53,422,1.411,440,1.88,458,1.411,480,1.411,533,1.68,535,1.88,554,1.88,610,2.98,612,1.411,616,1.311,637,1.53,638,1.88,639,2.98,641,1.152,643,1.411,644,1.88,645,1.88,660,1.88,661,1.88,664,1.68,665,1.88,666,1.88,698,1.411,699,1.88,700,2.644,706,1.88,707,1.88,708,1.88,723,1.68,724,1.88,728,1.88,745,2.644,756,1.88,792,1.53,793,2.644,794,1.88,802,4.984,804,1.53,805,1.88,806,1.68,810,1.68,811,1.88,812,2.409,839,1.53,840,1.88,852,1.311,866,1.88,871,1.88,875,1.88,876,1.88,880,1.88,889,4.286,901,1.88,905,1.68,913,1.68,946,1.53,964,1.88,982,1.53,983,1.88,993,1.68,1025,1.88,1026,1.88,1029,1.88,1030,1.88,1031,2.183,1032,2.183,1033,6.361,1034,7.025,1035,2.183,1036,2.183,1037,1.88,1038,1.88,1039,6.04,1040,6.214,1041,3.438,1042,6.214,1043,3.438,1044,3.438,1045,2.183,1046,2.183,1047,3.438,1048,4.252,1049,2.644,1050,1.88,1051,3.438,1052,2.959,1053,1.88,1054,2.959,1055,1.88,1056,1.88,1057,1.88,1058,1.88,1059,1.88,1060,1.88,1061,1.88,1062,1.68,1063,1.88,1064,1.88,1065,1.88,1066,1.88,1067,2.183,1068,2.183,1069,1.88,1070,2.183,1071,2.183,1072,2.183,1073,2.959,1074,2.959,1075,1.88,1076,1.88,1077,1.88,1078,1.88,1079,2.183,1080,2.183,1081,2.183,1082,2.183]],["title/dependencies.html",[201,2.255,1083,3.152]],["body/dependencies.html",[16,0.018,22,0.009,23,0.012,24,0.009,53,2.534,54,0.012,127,2.356,142,1.951,157,1.951,182,0.939,201,1.951,222,3.376,224,2.749,302,3.587,402,3.017,419,3.017,421,2.203,435,2.749,436,4.546,475,3.017,476,3.017,485,3.376,486,3.376,653,3.017,716,4.592,736,3.017,768,4.546,770,3.376,795,3.017,848,2.534,1062,3.017,1084,3.922,1085,3.922,1086,3.922,1087,3.922,1088,6.386,1089,3.922,1090,5.97,1091,3.922,1092,3.922,1093,3.922,1094,3.922,1095,3.922,1096,3.922,1097,3.922,1098,3.922,1099,3.922,1100,3.922,1101,3.922,1102,3.922,1103,3.922,1104,3.922,1105,3.922,1106,3.922,1107,3.922,1108,5.28,1109,3.922,1110,3.922,1111,3.922,1112,3.922,1113,3.922,1114,3.922,1115,3.922,1116,3.922,1117,3.922,1118,3.922,1119,3.922,1120,3.922,1121,3.922,1122,3.922,1123,5.28,1124,3.922,1125,3.922,1126,3.922,1127,3.922,1128,3.922,1129,3.922,1130,3.922,1131,3.922]],["title/miscellaneous/enumerations.html",[1132,1.663,1133,3.904]],["body/miscellaneous/enumerations.html",[9,0.351,16,0.018,22,0.012,23,0.014,24,0.012,53,3.973,147,2.035,283,2.738,308,3.973,403,4.729,568,3.687,812,4.309,905,3.817,913,3.817,933,4.729,950,5.293,951,5.293,952,5.293,1132,2.618,1133,4.272,1134,4.962,1135,6.148,1136,4.962,1137,6.148,1138,4.962,1139,4.962,1140,4.962,1141,4.962,1142,4.962,1143,4.962]],["title/miscellaneous/functions.html",[1132,1.663,1144,3.904]],["body/miscellaneous/functions.html",[9,0.325,13,3.53,16,0.018,22,0.011,23,0.014,24,0.011,47,1.528,82,2.215,83,1.678,85,1.928,204,3.205,793,3.53,806,4.502,835,4.757,993,4.502,1049,3.53,1050,3.951,1054,5.039,1055,5.039,1056,5.039,1057,5.039,1058,5.039,1059,3.951,1060,5.039,1069,5.039,1132,2.421,1144,3.951,1145,4.589,1146,5.853,1147,4.589,1148,3.951,1149,4.589,1150,4.589,1151,4.589,1152,4.589,1153,4.589,1154,4.589]],["title/index.html",[9,0.223,1155,2.714,1156,2.714]],["body/index.html",[16,0.013,22,0.01,23,0.013,24,0.01,165,3.545,216,2.713,262,2.313,371,3.545,663,3.168,736,3.168,903,3.545,941,3.545,1157,5.455,1158,5.455,1159,5.455,1160,4.118,1161,5.455,1162,6.962,1163,4.118,1164,4.118,1165,4.118,1166,4.118,1167,4.118,1168,5.455,1169,4.118,1170,5.455,1171,4.118,1172,4.118,1173,3.545,1174,4.118,1175,4.118,1176,4.118,1177,5.266,1178,4.118,1179,4.118,1180,4.118,1181,4.118,1182,4.118,1183,4.118,1184,4.118,1185,4.118,1186,4.118,1187,4.118,1188,4.118,1189,3.545,1190,4.118,1191,4.118,1192,4.118,1193,4.118,1194,4.118,1195,5.455,1196,4.118,1197,4.118,1198,4.118,1199,4.118,1200,4.118,1201,4.118,1202,4.118,1203,3.545,1204,4.118,1205,4.118,1206,3.545,1207,4.118,1208,4.118,1209,4.118,1210,4.118,1211,4.118,1212,4.118,1213,4.118,1214,4.118,1215,4.118,1216,4.118,1217,4.118,1218,4.118,1219,5.455,1220,4.118,1221,4.118,1222,4.118,1223,4.118,1224,4.118,1225,4.118,1226,4.118,1227,4.118,1228,4.118,1229,4.118,1230,4.118,1231,4.118,1232,4.118,1233,4.118,1234,4.118,1235,4.118,1236,4.118,1237,4.118,1238,4.118,1239,4.118,1240,4.118,1241,4.118]],["title/license.html",[1155,2.714,1156,2.714,1242,2.714]],["body/license.html",[16,0.013,22,0.01,23,0.013,24,0.01,43,3.028,216,2.149,302,2.427,693,4.847,1030,3.719,1173,6.342,1189,3.719,1203,3.719,1242,3.719,1243,4.32,1244,6.263,1245,4.32,1246,4.32,1247,4.32,1248,4.32,1249,4.32,1250,4.32,1251,4.32,1252,4.32,1253,5.63,1254,4.32,1255,4.32,1256,4.32,1257,6.263,1258,4.32,1259,5.63,1260,4.32,1261,4.32,1262,5.63,1263,4.32,1264,4.32,1265,4.32,1266,4.32,1267,4.32,1268,4.32,1269,4.32,1270,5.63,1271,4.32,1272,4.32,1273,4.32,1274,4.32,1275,4.32,1276,4.32,1277,5.63,1278,5.63,1279,4.32,1280,4.32,1281,4.32,1282,4.32,1283,4.32,1284,4.32,1285,4.32,1286,4.32,1287,4.32,1288,4.32,1289,4.32,1290,4.32,1291,4.32,1292,4.32,1293,4.32,1294,4.32,1295,4.32,1296,4.32,1297,4.32,1298,4.32,1299,4.32,1300,4.32,1301,4.32,1302,4.32,1303,4.32,1304,4.32,1305,4.32,1306,4.32,1307,4.32]],["title/modules.html",[200,2.557]],["body/modules.html",[16,0.015,22,0.012,23,0.015,24,0.012,199,3.742,200,2.656,209,3.45,210,3.45,211,3.45,212,3.45,213,2.999,1177,6.407,1308,7.442,1309,7.442,1310,7.442]],["title/overview.html",[1311,4.427]],["body/overview.html",[2,1.607,16,0.018,22,0.008,23,0.012,24,0.008,25,2.332,56,1.088,198,1.314,199,5.132,200,1.795,201,1.795,202,2.027,203,2.027,204,1.795,205,2.027,206,2.027,207,3.107,208,3.107,209,4.884,210,4.327,211,4.436,212,4.184,213,3.93,214,2.803,215,1.795,216,1.795,218,2.027,304,4.123,315,3.856,317,3.622,379,1.904,391,3.695,392,1.607,409,3.107,411,3.107,412,3.107,413,3.695,414,3.695,415,3.695,416,4.008,533,2.777,643,3.695,751,3.107,752,3.107,753,3.107,852,3.435,861,3.107,863,3.107,894,3.107,895,3.107,1018,3.107,1019,3.107,1020,3.107,1078,3.107,1311,3.107,1312,3.107,1313,3.107,1314,3.609]],["title/miscellaneous/typealiases.html",[1132,1.663,1315,4.535]],["body/miscellaneous/typealiases.html",[9,0.368,15,0.432,16,0.017,22,0.012,23,0.015,24,0.012,52,1.081,92,5.448,97,5.448,126,5.448,171,2.445,594,4.868,1132,2.744,1316,5.201,1317,6.328,1318,7.556,1319,6.328,1320,6.328,1321,6.328,1322,6.328,1323,5.201,1324,6.328]],["title/miscellaneous/variables.html",[1132,1.663,1325,3.904]],["body/miscellaneous/variables.html",[9,0.178,15,0.465,16,0.018,22,0.006,23,0.009,24,0.006,30,2.612,31,2.479,32,3.491,38,1.868,52,1.227,65,2.952,77,2.952,147,0.833,189,2.166,190,1.327,198,1.397,217,1.935,230,3.578,234,1.12,235,2.689,236,2.166,237,2.166,238,2.146,239,2.166,240,2.166,241,2.166,242,2.166,243,3.555,244,2.166,337,1.944,379,1.327,435,1.763,564,2.305,568,3.345,595,2.479,617,1.763,621,2.689,622,2.689,662,2.952,663,2.952,802,1.626,835,2.689,946,2.689,1037,2.166,1038,3.303,1049,1.935,1052,2.166,1053,3.303,1061,2.166,1062,2.952,1063,3.303,1064,3.303,1065,2.166,1066,3.303,1073,2.166,1074,4.004,1075,4.479,1076,3.303,1077,2.166,1132,1.327,1148,2.166,1206,2.166,1312,2.166,1313,2.166,1325,2.166,1326,2.516,1327,4.651,1328,2.516,1329,2.516,1330,3.837,1331,2.516,1332,2.516,1333,2.516,1334,3.837,1335,2.516,1336,4.651,1337,4.651,1338,3.837,1339,3.837,1340,2.516,1341,2.516,1342,2.516,1343,2.516,1344,2.516,1345,2.516,1346,2.516,1347,4.651,1348,2.516,1349,6.329,1350,2.516,1351,2.516,1352,2.516,1353,2.516,1354,2.516,1355,2.516,1356,2.516,1357,2.516,1358,2.516,1359,2.516,1360,2.516,1361,2.516,1362,3.837,1363,2.516,1364,2.516,1365,2.516,1366,5.602,1367,2.516,1368,2.516,1369,5.602,1370,2.516,1371,2.516,1372,2.516,1373,2.516,1374,5.602,1375,2.516,1376,2.516,1377,2.516,1378,2.516,1379,2.516,1380,2.516,1381,2.516,1382,2.516,1383,2.516,1384,2.516,1385,2.516,1386,2.516,1387,2.516,1388,2.516,1389,2.516,1390,2.516,1391,2.516]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":802,"title":{},"body":{"classes/PagedReqDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/62",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":25,"title":{"interfaces/AbstractControllerOptions-1.html":{}},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"overview.html":{}}}],["1.0.0",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":798,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["12",{"_index":1078,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":1314,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["2020",{"_index":1245,"title":{},"body":{"license.html":{}}}],["21",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["3",{"_index":1313,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["3.22.0",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["3/24",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.3",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["5.9.11",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1312,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["6.4.0",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["6.4.6",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["7.0.9",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1189,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":59,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{}}}],["abstractcontrollerfactory",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerfactory(options",{"_index":1150,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauth",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerwithauth(options",{"_index":1151,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":36,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswagger",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswagger(options",{"_index":1152,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":39,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcrudcontroller",{"_index":993,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcrudcontroller(options",{"_index":1153,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractdocument",{"_index":1317,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["abstractmodel",{"_index":44,"title":{"interfaces/AbstractModel.html":{}},"body":{"interfaces/AbstractModel.html":{},"coverage.html":{}}}],["abstractservice",{"_index":55,"title":{"classes/AbstractService.html":{}},"body":{"classes/AbstractService.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["abstractvm",{"_index":131,"title":{"classes/AbstractVm.html":{}},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["access",{"_index":694,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":788,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":143,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1186,"title":{},"body":{"index.html":{}}}],["action",{"_index":1301,"title":{},"body":{"license.html":{}}}],["activate",{"_index":562,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["admin",{"_index":952,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1316,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowunknown",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":1193,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1268,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":776,"title":{},"body":{"injectables/MailService.html":{}}}],["apibadrequestresponse",{"_index":992,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibearerauth",{"_index":846,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["apiexception",{"_index":158,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiokresponse",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":173,"title":{},"body":{"classes/ApiException.html":{},"classes/UserDto.html":{}}}],["apiproperty({enum",{"_index":972,"title":{},"body":{"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":139,"title":{},"body":{"classes/AbstractVm.html":{}}}],["apipropertyoptional({type",{"_index":135,"title":{},"body":{"classes/AbstractVm.html":{}}}],["apiswaggeroperation",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":1001,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["app_email",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appemail",{"_index":611,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1211,"title":{},"body":{"index.html":{}}}],["application",{"_index":1198,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":199,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":669,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1305,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1239,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1254,"title":{},"body":{"license.html":{}}}],["async",{"_index":61,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["attempt",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller.ts",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["auth.guard",{"_index":850,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":700,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":725,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":701,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.controller",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.module",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":849,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["auth/models/dto/auth.dto",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":219,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["authenticate",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":319,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autheventenum",{"_index":403,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":702,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":703,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":726,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authhandler",{"_index":391,"title":{"injectables/AuthHandler.html":{}},"body":{"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":209,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1294,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":317,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice.validateuser(username",{"_index":744,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["available",{"_index":784,"title":{},"body":{"injectables/MailService.html":{}}}],["await",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["badrequestexception",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["badrequestexception('email",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('invalid",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('token",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["base.entity",{"_index":910,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["baseentity",{"_index":129,"title":{"classes/BaseEntity.html":{}},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":827,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":822,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":829,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":826,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":824,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":823,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":821,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":828,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:45",{"_index":832,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:54",{"_index":833,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:63",{"_index":831,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:72",{"_index":830,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":825,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["baseservice",{"_index":901,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["bcrypt",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintoken",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearerauthname",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":38,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/LocalAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1230,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1191,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1310,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1308,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":591,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":597,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1196,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":405,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["c",{"_index":43,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":536,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["canactivate(context",{"_index":540,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["career",{"_index":1181,"title":{},"body":{"index.html":{}}}],["catch",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":668,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":674,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["charge",{"_index":1250,"title":{},"body":{"license.html":{}}}],["check",{"_index":1216,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1297,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1158,"title":{},"body":{"index.html":{}}}],["class",{"_index":54,"title":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":56,"title":{},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":1319,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["client",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":146,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":751,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":752,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":753,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":861,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":862,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":863,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":894,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":895,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1018,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1019,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1020,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1157,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1212,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1182,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1180,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":946,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length64",{"_index":958,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1201,"title":{},"body":{"index.html":{}}}],["community",{"_index":1162,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1163,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1215,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1276,"title":{},"body":{"license.html":{}}}],["config",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":184,"title":{},"body":{"classes/ApiException.html":{}}}],["configmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":183,"title":{"interfaces/Configuration.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().environment",{"_index":188,"title":{},"body":{"classes/ApiException.html":{}}}],["configuration().isauthenabled",{"_index":549,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["configuration().jwtsecret",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["confirmation",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":918,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["conflictexception('user",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["connect",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1306,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":704,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":169,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{}}}],["constructor(@optional",{"_index":655,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(authservice",{"_index":538,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(message",{"_index":170,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(moduleref",{"_index":729,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":546,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{}}}],["constructor(req",{"_index":647,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(usersservice",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["context",{"_index":543,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":547,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["contextid",{"_index":739,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory",{"_index":735,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory.getbyrequest(request",{"_index":740,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contract",{"_index":1302,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":854,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('users",{"_index":1002,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllername",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1270,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1253,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1244,"title":{},"body":{"license.html":{}}}],["count",{"_index":60,"title":{},"body":{"classes/AbstractService.html":{}}}],["count(filter",{"_index":79,"title":{},"body":{"classes/AbstractService.html":{}}}],["countasync",{"_index":62,"title":{},"body":{"classes/AbstractService.html":{}}}],["countasync(filter",{"_index":87,"title":{},"body":{"classes/AbstractService.html":{}}}],["coverage",{"_index":1029,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":662,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":1005,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(input",{"_index":985,"title":{},"body":{"controllers/UsersController.html":{}}}],["created",{"_index":1174,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":48,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["createdby",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["createdto",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"controllers/UsersController.html":{}}}],["createtransport",{"_index":758,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":637,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crypto",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["ctx",{"_index":675,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":679,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":678,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1223,"title":{},"body":{"index.html":{}}}],["currentuser",{"_index":646,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["currentuserservice",{"_index":643,"title":{"injectables/CurrentUserService.html":{}},"body":{"injectables/CurrentUserService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["customname",{"_index":836,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["damages",{"_index":1298,"title":{},"body":{"license.html":{}}}],["data",{"_index":399,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["database",{"_index":612,"title":{"interfaces/Database.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["database_host",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":51,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["date().gettime",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().toisostring",{"_index":194,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["deactivate",{"_index":563,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["deal",{"_index":1256,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1307,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":134,"title":{},"body":{"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/LoginReqDto.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default('redis://localhost:6379",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default('true",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobj",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":30,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":80,"title":{},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{},"interfaces/DefaultAuthObject.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedat",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["deletedby",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1320,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":201,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":882,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":884,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1175,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1168,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1169,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1266,"title":{},"body":{"license.html":{}}}],["doc",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{}}}],["document",{"_index":46,"title":{},"body":{"interfaces/AbstractModel.html":{}}}],["documentation",{"_index":1030,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentquery",{"_index":1324,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":126,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["domain",{"_index":623,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":885,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":892,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dynamicmodule",{"_index":899,"title":{},"body":{"modules/SharedModule.html":{}}}],["e",{"_index":956,"title":{},"body":{"classes/User.html":{}}}],["email",{"_index":147,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/ProfileService.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@apiokresponse",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["emailparamname",{"_index":148,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["enableimplicitconversion",{"_index":860,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["encryptedtoken",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1167,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1170,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1010,"title":{},"body":{"controllers/UsersController.html":{}}}],["entity",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"classes/AbstractService.html":{},"controllers/UsersController.html":{}}}],["entitydto",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":911,"title":{},"body":{"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1133,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":613,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":886,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":161,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":887,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":680,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":686,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":691,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":685,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":687,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":692,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":684,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":682,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":683,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":162,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["ethereal",{"_index":787,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1293,"title":{},"body":{"license.html":{}}}],["eventpattern",{"_index":401,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["eventpattern(autheventenum.userregistered",{"_index":397,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["exception",{"_index":696,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":666,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":670,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.model",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["exception.model.ts",{"_index":160,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.model.ts:10",{"_index":176,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:12",{"_index":178,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:14",{"_index":174,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:16",{"_index":175,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:18",{"_index":180,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:20",{"_index":177,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:22",{"_index":172,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:8",{"_index":179,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":667,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":945,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":859,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["executioncontext",{"_index":541,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["exist",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["exist.email",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.fullname",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.id",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.isemailverified",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.token",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["exist.user",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["expandvariables",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":838,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expireat",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["expireinseconds",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["expiresin",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":975,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@apiproperty()@isemail()@maxlength(columnsize.length64",{"_index":965,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@ismongoid()@apiproperty",{"_index":969,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length64)@apiproperty()@isalpha",{"_index":967,"title":{},"body":{"classes/UserDto.html":{}}}],["express",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":37,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["extractjwt",{"_index":714,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":720,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["feedback",{"_index":1232,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1202,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["files",{"_index":1255,"title":{},"body":{"license.html":{}}}],["filter",{"_index":84,"title":{},"body":{"classes/AbstractService.html":{}}}],["find",{"_index":663,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":63,"title":{},"body":{"classes/AbstractService.html":{},"controllers/UsersController.html":{}}}],["findall(@query",{"_index":1009,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(filter",{"_index":90,"title":{},"body":{"classes/AbstractService.html":{}}}],["findall(query",{"_index":988,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(search",{"_index":1012,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallasync",{"_index":64,"title":{},"body":{"classes/AbstractService.html":{}}}],["findallasync(filter",{"_index":93,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyid",{"_index":65,"title":{},"body":{"classes/AbstractService.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["findbyid(id",{"_index":95,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyidasync",{"_index":66,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyidasync(id",{"_index":98,"title":{},"body":{"classes/AbstractService.html":{}}}],["findone",{"_index":67,"title":{},"body":{"classes/AbstractService.html":{},"injectables/AuthService.html":{}}}],["findone(filter",{"_index":100,"title":{},"body":{"classes/AbstractService.html":{}}}],["findoneasync",{"_index":68,"title":{},"body":{"classes/AbstractService.html":{}}}],["findoneasync(filter",{"_index":102,"title":{},"body":{"classes/AbstractService.html":{}}}],["firstname",{"_index":915,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1289,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1209,"title":{},"body":{"index.html":{}}}],["following",{"_index":1275,"title":{},"body":{"license.html":{}}}],["fork",{"_index":1213,"title":{},"body":{"index.html":{}}}],["format",{"_index":136,"title":{},"body":{"classes/AbstractVm.html":{}}}],["forroot",{"_index":897,"title":{},"body":{"modules/SharedModule.html":{}}}],["fortune",{"_index":1246,"title":{},"body":{"license.html":{}}}],["free",{"_index":1203,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1166,"title":{},"body":{"index.html":{}}}],["full",{"_index":941,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":920,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":889,"title":{},"body":{"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1144,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1273,"title":{},"body":{"license.html":{}}}],["future",{"_index":1164,"title":{},"body":{"index.html":{}}}],["generatetemptoken",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(userid",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@apiokresponse({type",{"_index":989,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth",{"_index":844,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcurrentuser",{"_index":649,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["getfullname",{"_index":938,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":589,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":842,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":856,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":843,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileasync",{"_index":867,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileasync(email",{"_index":869,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getschema",{"_index":587,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":599,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1155,"title":{"index.html":{},"license.html":{}},"body":{}}],["global",{"_index":900,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1187,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1249,"title":{},"body":{"license.html":{}}}],["guard",{"_index":533,"title":{"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":534,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["guards/auth.guard",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["handler",{"_index":408,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handlers/auth.handler",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{}}}],["handleuserregistered",{"_index":394,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handleuserregistered(data",{"_index":395,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["hapi/joi",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["harddelete",{"_index":69,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddelete(filter",{"_index":104,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddeletebyid",{"_index":70,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddeletebyid(id",{"_index":106,"title":{},"body":{"classes/AbstractService.html":{}}}],["hash",{"_index":944,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":955,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1248,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1295,"title":{},"body":{"license.html":{}}}],["host",{"_index":620,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":676,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.created",{"_index":1004,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpcode(httpstatus.ok",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":671,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":664,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":791,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":181,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["httpstatus.unauthorized",{"_index":689,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":197,"title":{},"body":{"classes/ApiException.html":{}}}],["id",{"_index":49,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"interfaces/JwtPayload.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["idtype",{"_index":1321,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ignoreexpiration",{"_index":721,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{}}}],["implied",{"_index":1285,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1279,"title":{},"body":{"license.html":{}}}],["including",{"_index":1259,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":782,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":813,"title":{},"body":{"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["inject",{"_index":651,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["inject(request",{"_index":656,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["injectable",{"_index":390,"title":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":392,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["innovators",{"_index":1165,"title":{},"body":{"index.html":{}}}],["input",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["input.email",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["insert",{"_index":71,"title":{},"body":{"classes/AbstractService.html":{}}}],["insert(entity",{"_index":108,"title":{},"body":{"classes/AbstractService.html":{}}}],["insertasync",{"_index":72,"title":{},"body":{"classes/AbstractService.html":{}}}],["insertasync(entity",{"_index":110,"title":{},"body":{"classes/AbstractService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":942,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":957,"title":{},"body":{"classes/User.html":{}}}],["isactive",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["isalpha",{"_index":976,"title":{},"body":{"classes/UserDto.html":{}}}],["isauthenable",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthenabled",{"_index":614,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isdeleted",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["isemail",{"_index":152,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ResetPassInput.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["isemailverified",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":977,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":981,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ismongoid",{"_index":978,"title":{},"body":{"classes/UserDto.html":{}}}],["isnotempty",{"_index":154,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":799,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["issue",{"_index":1219,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1217,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":150,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["isvalid",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalAuthGuard.html":{}}}],["item",{"_index":121,"title":{},"body":{"classes/AbstractService.html":{}}}],["items",{"_index":1017,"title":{},"body":{"controllers/UsersController.html":{}}}],["joi.number().default(27017",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1237,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_secret",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":698,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":1038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":719,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":480,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":615,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtservice",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":413,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":622,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1284,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":916,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length1024",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1225,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1299,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1296,"title":{},"body":{"license.html":{}}}],["license",{"_index":1242,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":795,"title":{},"body":{"classes/PagedReqDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["limit(limit",{"_index":1013,"title":{},"body":{"controllers/UsersController.html":{}}}],["limitation",{"_index":1260,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1286,"title":{},"body":{"license.html":{}}}],["literal",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{}}}],["local",{"_index":736,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localauthguard",{"_index":723,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":414,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lockoutenddate",{"_index":917,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":400,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":780,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":789,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(data",{"_index":407,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["logger.error(error",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":893,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["logic",{"_index":406,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["login",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(_",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginreqdto",{"_index":260,"title":{"classes/LoginReqDto.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto",{"_index":458,"title":{"classes/LoginResDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["lowercase",{"_index":923,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":767,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":763,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":755,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["mailer",{"_index":616,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":778,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":777,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailgun",{"_index":770,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":210,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":765,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":304,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1227,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["mapping.enum.ts",{"_index":1137,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1229,"title":{},"body":{"index.html":{}}}],["matches",{"_index":1222,"title":{},"body":{"index.html":{}}}],["matching",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":921,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length64",{"_index":980,"title":{},"body":{"classes/UserDto.html":{}}}],["measures",{"_index":1184,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":608,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1195,"title":{},"body":{"index.html":{}}}],["mentee",{"_index":950,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":951,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1288,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1264,"title":{},"body":{"license.html":{}}}],["message",{"_index":163,"title":{},"body":{"classes/ApiException.html":{}}}],["metadata",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":58,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["mg",{"_index":769,"title":{},"body":{"injectables/MailService.html":{}}}],["minlength",{"_index":874,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["minlength(6",{"_index":872,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["miscellaneous",{"_index":1132,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1243,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1197,"title":{},"body":{"index.html":{}}}],["model",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelcreate",{"_index":42,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":834,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["models/api",{"_index":673,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["models/auth.enums",{"_index":404,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{}}}],["models/base.entity",{"_index":130,"title":{},"body":{"classes/AbstractService.html":{}}}],["models/dto/acct",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":996,"title":{},"body":{"controllers/UsersController.html":{}}}],["models/dto/paged",{"_index":997,"title":{},"body":{"controllers/UsersController.html":{}}}],["models/dto/reset",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/user.dto",{"_index":998,"title":{},"body":{"controllers/UsersController.html":{}}}],["models/dto/validate",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/jwt",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["models/user.entity",{"_index":999,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":40,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1263,"title":{},"body":{"license.html":{}}}],["module",{"_index":198,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moduleref",{"_index":730,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["modules",{"_index":200,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["mongodb_uri",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":53,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["mongoosemodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1236,"title":{},"body":{"index.html":{}}}],["name",{"_index":83,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{}}}],["needs",{"_index":1220,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":182,"title":{},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":653,"title":{},"body":{"injectables/CurrentUserService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":402,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":421,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":142,"title":{},"body":{"classes/AbstractVm.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["newpassword",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1159,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":768,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":775,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":790,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1292,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["notacceptableexception('user",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["note",{"_index":1210,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception('user",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["notice",{"_index":1277,"title":{},"body":{"license.html":{}}}],["null",{"_index":190,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":171,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["obj.util.ts",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["object.interface.ts",{"_index":661,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["objectmapping",{"_index":1135,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["obtaining",{"_index":1252,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1247,"title":{},"body":{"license.html":{}}}],["official",{"_index":1160,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["omittype(userdto",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ongoing",{"_index":1176,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":47,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":835,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":27,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["otherwise",{"_index":1304,"title":{},"body":{"license.html":{}}}],["out",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1311,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1083,"title":{"dependencies.html":{}},"body":{}}],["pagedreqdto",{"_index":792,"title":{"classes/PagedReqDto.html":{}},"body":{"classes/PagedReqDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["pageduserresdto",{"_index":804,"title":{"classes/PagedUserResDto.html":{}},"body":{"classes/PagedUserResDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["pageduserresdto})@apibadrequestresponse({type",{"_index":990,"title":{},"body":{"controllers/UsersController.html":{}}}],["paginatedresdto",{"_index":806,"title":{},"body":{"classes/PagedUserResDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["paginatedresdto(entitydto",{"_index":1154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paginatedresdto(userdto",{"_index":809,"title":{},"body":{"classes/PagedUserResDto.html":{}}}],["pane",{"_index":1218,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.database_port",{"_index":634,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["parseint(process.env.port",{"_index":624,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["parser",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1183,"title":{},"body":{"index.html":{}}}],["partial",{"_index":122,"title":{},"body":{"classes/AbstractService.html":{}}}],["particular",{"_index":1290,"title":{},"body":{"license.html":{}}}],["passport",{"_index":716,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportserializer",{"_index":881,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":713,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":717,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":737,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["password')@apiokresponse",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_reset_tokens",{"_index":837,"title":{},"body":{"classes/PasswordToken.html":{}}}],["passwordhash",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordtoken",{"_index":810,"title":{"classes/PasswordToken.html":{}},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["path",{"_index":164,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["payload",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":707,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":693,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1271,"title":{},"body":{"license.html":{}}}],["person",{"_index":1251,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1272,"title":{},"body":{"license.html":{}}}],["plaintoclass",{"_index":847,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["plaintoclass(userdto",{"_index":858,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["plaintoken",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["please",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["populate('user",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":617,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1281,"title":{},"body":{"license.html":{}}}],["post",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('confirm",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiunauthorizedresponse({type",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@httpcode(httpstatus.created",{"_index":986,"title":{},"body":{"controllers/UsersController.html":{}}}],["pre",{"_index":943,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":953,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":783,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{}}}],["process",{"_index":1234,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":629,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":630,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":633,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":635,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":626,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":631,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_domain",{"_index":632,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongodb_uri",{"_index":636,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.node_env",{"_index":625,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":628,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":627,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":189,"title":{},"body":{"classes/ApiException.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":841,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":865,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.service",{"_index":853,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":839,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":211,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":852,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":89,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{}}}],["prop",{"_index":592,"title":{},"body":{"classes/BaseEntity.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({default",{"_index":572,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":816,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":819,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["prop({required",{"_index":569,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["propertydescriptor",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1190,"title":{},"body":{"index.html":{}}}],["provide",{"_index":903,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["provided",{"_index":1282,"title":{},"body":{"license.html":{}}}],["provider",{"_index":742,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["providers",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["publish",{"_index":1265,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1228,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1291,"title":{},"body":{"license.html":{}}}],["put",{"_index":1204,"title":{},"body":{"index.html":{}}}],["pw",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":876,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":877,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["query",{"_index":86,"title":{},"body":{"classes/AbstractService.html":{},"controllers/UsersController.html":{}}}],["queryitem",{"_index":97,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":92,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1240,"title":{},"body":{"index.html":{}}}],["randombytes",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["randombytes(64).tostring('hex",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["randombytes(columnsize.length32",{"_index":961,"title":{},"body":{"classes/User.html":{}}}],["rate",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":396,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["redis",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":618,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":571,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["reflect",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":268,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1233,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1214,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1199,"title":{},"body":{"index.html":{}}}],["req",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{}}}],["req.dto",{"_index":995,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.dto.ts",{"_index":794,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{}}}],["req.dto.ts:5",{"_index":803,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:7",{"_index":800,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:9",{"_index":801,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.url",{"_index":688,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"index.html":{}}}],["request.body",{"_index":550,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":553,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":771,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":595,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":677,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.dto",{"_index":808,"title":{},"body":{"classes/PagedUserResDto.html":{}}}],["res.dto.ts",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["res.status(statuscode).json(exception",{"_index":697,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":273,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":695,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":672,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["restriction",{"_index":1258,"title":{},"body":{"license.html":{}}}],["result",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":24,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":603,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":605,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":604,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":85,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1261,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["root_url",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":619,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/UsersModule.html":{}}}],["scope",{"_index":652,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["scope.request",{"_index":654,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["scoped",{"_index":741,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["search",{"_index":796,"title":{},"body":{"classes/PagedReqDto.html":{},"controllers/UsersController.html":{}}}],["secret",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":722,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":1269,"title":{},"body":{"license.html":{}}}],["send",{"_index":1008,"title":{},"body":{"controllers/UsersController.html":{}}}],["sendemailverifytoken",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":785,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":759,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":762,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":781,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":883,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":890,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["services",{"_index":902,"title":{},"body":{"modules/SharedModule.html":{}}}],["session",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["session.serializer",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":415,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setrandompass",{"_index":919,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":582,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["shall",{"_index":1278,"title":{},"body":{"license.html":{}}}],["shared",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/base.controller",{"_index":994,"title":{},"body":{"controllers/UsersController.html":{}}}],["shared/config/configuration",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["shared/constants",{"_index":947,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/models/api",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["shared/models/base.entity",{"_index":948,"title":{},"body":{"classes/User.html":{}}}],["shared/models/dto/paged",{"_index":807,"title":{},"body":{"classes/PagedUserResDto.html":{},"controllers/UsersController.html":{}}}],["shared/models/temporary",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{}}}],["shared/types",{"_index":949,"title":{},"body":{"classes/User.html":{}}}],["shared/validations/env.validation",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":212,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["skill",{"_index":1224,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1205,"title":{},"body":{"index.html":{}}}],["skip",{"_index":797,"title":{},"body":{"classes/PagedReqDto.html":{},"controllers/UsersController.html":{}}}],["skip(skip",{"_index":1014,"title":{},"body":{"controllers/UsersController.html":{}}}],["slack",{"_index":1238,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":73,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdelete(filter",{"_index":112,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeleteasync",{"_index":74,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeleteasync(filter",{"_index":114,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyid",{"_index":75,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyid(id",{"_index":116,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyidasync",{"_index":76,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyidasync(id",{"_index":118,"title":{},"body":{"classes/AbstractService.html":{}}}],["software",{"_index":1173,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1226,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1221,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["src/.../abstract",{"_index":1146,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.controller.ts",{"_index":1145,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.type.ts",{"_index":1318,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1134,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1147,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1148,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../object",{"_index":1136,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../paged",{"_index":1149,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../temporary",{"_index":1138,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.entity.ts",{"_index":1139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.controller.ts",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:117",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:130",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:66",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:92",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:103",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:120",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:29",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:54",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:69",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:73",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:92",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":535,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":539,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":542,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":545,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":699,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":724,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts",{"_index":393,"title":{},"body":{"injectables/AuthHandler.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts:9",{"_index":398,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":144,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":745,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":748,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/auth.dto.ts:12",{"_index":749,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/auth.dto.ts:13",{"_index":750,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/auth.dto.ts:5",{"_index":746,"title":{},"body":{"classes/LoginReqDto.html":{}}}],["src/auth/models/dto/auth.dto.ts:7",{"_index":747,"title":{},"body":{"classes/LoginReqDto.html":{}}}],["src/auth/models/dto/reset",{"_index":875,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1025,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":706,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/pass",{"_index":811,"title":{},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts",{"_index":880,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":888,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":891,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":708,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":712,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":710,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":728,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:16",{"_index":734,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:8",{"_index":731,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/temp",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["src/mail/mail.module.ts",{"_index":754,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":756,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:11",{"_index":766,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:12",{"_index":760,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:17",{"_index":761,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:29",{"_index":764,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":840,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":845,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":864,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":866,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:7",{"_index":868,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:9",{"_index":870,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/base.controller.ts",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/config/configuration",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/shared/config/configuration.ts",{"_index":610,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/abstract",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/controllers/abstract.controller.ts",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":665,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":660,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/interfaces/object",{"_index":1143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/models/abstract",{"_index":132,"title":{},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["src/shared/models/abstract.model.ts",{"_index":45,"title":{},"body":{"interfaces/AbstractModel.html":{},"coverage.html":{}}}],["src/shared/models/api",{"_index":159,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":578,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":573,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":580,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":577,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":575,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":574,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":570,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":579,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":588,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:42",{"_index":590,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:45",{"_index":585,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:54",{"_index":586,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:63",{"_index":584,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:72",{"_index":581,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":576,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/paged",{"_index":793,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/models/temporary",{"_index":905,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/shared/services/abstract.service.ts",{"_index":57,"title":{},"body":{"classes/AbstractService.html":{},"coverage.html":{}}}],["src/shared/services/abstract.service.ts:11",{"_index":91,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:12",{"_index":94,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:14",{"_index":101,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:15",{"_index":103,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:17",{"_index":96,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:18",{"_index":99,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:20",{"_index":105,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:21",{"_index":115,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:23",{"_index":107,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:24",{"_index":119,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:26",{"_index":113,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:27",{"_index":117,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:29",{"_index":123,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:30",{"_index":125,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:35",{"_index":81,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:36",{"_index":88,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:8",{"_index":109,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:9",{"_index":111,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/base.service.ts",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["src/shared/services/current",{"_index":644,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":896,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/shared.module.ts:8",{"_index":898,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1323,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/models/dto/create",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/paged",{"_index":805,"title":{},"body":{"classes/PagedUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":871,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":964,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:19",{"_index":970,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:24",{"_index":968,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:29",{"_index":971,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:34",{"_index":966,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:38",{"_index":974,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":913,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:33",{"_index":927,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:41",{"_index":929,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:50",{"_index":925,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:53",{"_index":932,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:61",{"_index":935,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:64",{"_index":928,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:66",{"_index":930,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:68",{"_index":926,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:75",{"_index":939,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:78",{"_index":937,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:83",{"_index":936,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":983,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:49",{"_index":987,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":991,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1021,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":165,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":681,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":1179,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1200,"title":{},"body":{"index.html":{}}}],["started",{"_index":1156,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1188,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":596,"title":{},"body":{"classes/BaseEntity.html":{},"modules/SharedModule.html":{}}}],["status",{"_index":166,"title":{},"body":{"classes/ApiException.html":{}}}],["statuscode",{"_index":167,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":715,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":52,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1274,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1267,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1280,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1207,"title":{},"body":{"index.html":{}}}],["super",{"_index":718,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(usersservice",{"_index":1003,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.canactivate(context",{"_index":705,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["super.login(request",{"_index":727,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["support",{"_index":1177,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1309,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1062,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.controller.ts",{"_index":1057,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["symbol",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":35,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{}}}],["table",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["talents",{"_index":1194,"title":{},"body":{"index.html":{}}}],["target",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcreatedto",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{}}}],["technical",{"_index":1171,"title":{},"body":{"index.html":{}}}],["temp",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":422,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken.schema",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken:16",{"_index":815,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:19",{"_index":814,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:27",{"_index":818,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:30",{"_index":820,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temptokens",{"_index":912,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentity",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{}}}],["tentitydto",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{}}}],["test",{"_index":1206,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":924,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["thanks",{"_index":1241,"title":{},"body":{"index.html":{}}}],["this.authservice.generatetemptoken",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(req.user",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":551,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.client.connect",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":773,"title":{},"body":{"injectables/MailService.html":{}}}],["this.createtransport",{"_index":772,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":186,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":191,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":959,"title":{},"body":{"classes/User.html":{}}}],["this.jwtservice.sign(payload",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastname",{"_index":960,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":185,"title":{},"body":{"classes/ApiException.html":{}}}],["this.moduleref.resolve(authservice",{"_index":743,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.name",{"_index":606,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":192,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.getprofileasync(req.user['email",{"_index":857,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.req",{"_index":657,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.req.user",{"_index":658,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.req.user['id",{"_index":659,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.stack",{"_index":187,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":196,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":195,"title":{},"body":{"classes/ApiException.html":{}}}],["this.timestamp",{"_index":193,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.findoneasync",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(exist.id",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.transporter",{"_index":774,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":779,"title":{},"body":{"injectables/MailService.html":{}}}],["this.usersservice",{"_index":1011,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.countasync",{"_index":1016,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.createentity(input",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.findoneasync",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.insertasync(user",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":548,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validatetoken(userid",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":786,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["time",{"_index":137,"title":{},"body":{"classes/AbstractVm.html":{}}}],["timestamp",{"_index":168,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":1007,"title":{},"body":{"controllers/UsersController.html":{}}}],["together",{"_index":1192,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":598,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{}}}],["token')@apiokresponse",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1026,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:5",{"_index":1027,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.dto.ts:7",{"_index":1028,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{}}}],["token.entity.ts",{"_index":812,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":907,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":906,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":908,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":909,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["tokenparamname",{"_index":149,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1303,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":962,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":1015,"title":{},"body":{"controllers/UsersController.html":{}}}],["towards",{"_index":1185,"title":{},"body":{"index.html":{}}}],["transform",{"_index":602,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":848,"title":{},"body":{"controllers/ProfileController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["transport",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":757,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":922,"title":{},"body":{"classes/User.html":{}}}],["true",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1315,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":127,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":593,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":690,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["types",{"_index":128,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{}}}],["ui",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('password",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception('please",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["undefined})@exclude",{"_index":931,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":817,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["update",{"_index":77,"title":{},"body":{"classes/AbstractService.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":120,"title":{},"body":{"classes/AbstractService.html":{}}}],["updateasync",{"_index":78,"title":{},"body":{"classes/AbstractService.html":{}}}],["updateasync(id",{"_index":124,"title":{},"body":{"classes/AbstractService.html":{}}}],["updatedat",{"_index":50,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["updatedby",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["updateresulttype",{"_index":1322,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uri",{"_index":621,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1262,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":904,"title":{},"body":{"modules/SharedModule.html":{}}}],["usecreateindex",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":855,"title":{},"body":{"controllers/ProfileController.html":{},"controllers/UsersController.html":{}}}],["usenewurlparser",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":313,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user's",{"_index":940,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:8",{"_index":873,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":979,"title":{},"body":{"classes/UserDto.html":{}}}],["user.id",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["user.isactive",{"_index":552,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["user.isemailverified",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1023,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1024,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.service.ts",{"_index":645,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["user.service.ts:6",{"_index":648,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user.service.ts:8",{"_index":650,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user.setrandompass",{"_index":1006,"title":{},"body":{"controllers/UsersController.html":{}}}],["user_registered",{"_index":1142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":641,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userid",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["username",{"_index":733,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":738,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userregistered",{"_index":1141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":933,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.mentee",{"_index":934,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole})@isenum(userrole)@expose",{"_index":973,"title":{},"body":{"classes/UserDto.html":{}}}],["users",{"_index":984,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1022,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1000,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/register",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["users/models/dto/user.dto",{"_index":851,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{}}}],["users/users.module",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["users/users.service",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["userscontroller",{"_index":982,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":213,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["valid('development",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid('true",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":709,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":711,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":732,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateemailinput",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(validateemailinput",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":537,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":544,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":286,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:5",{"_index":878,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validatetokeninput:7",{"_index":879,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":157,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedReqDto.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":568,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1325,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":145,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:11",{"_index":155,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:5",{"_index":153,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:7",{"_index":151,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:9",{"_index":156,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":601,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":600,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":41,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["vm.model.ts",{"_index":133,"title":{},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["vm.model.ts:10",{"_index":140,"title":{},"body":{"classes/AbstractVm.html":{}}}],["vm.model.ts:5",{"_index":138,"title":{},"body":{"classes/AbstractVm.html":{}}}],["vm.model.ts:8",{"_index":141,"title":{},"body":{"classes/AbstractVm.html":{}}}],["void",{"_index":583,"title":{},"body":{"classes/BaseEntity.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["wait",{"_index":1231,"title":{},"body":{"index.html":{}}}],["want",{"_index":1235,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1287,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1283,"title":{},"body":{"license.html":{}}}],["website",{"_index":1161,"title":{},"body":{"index.html":{}}}],["wherever",{"_index":1178,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1300,"title":{},"body":{"license.html":{}}}],["without",{"_index":1257,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1208,"title":{},"body":{"index.html":{}}}],["writable",{"_index":594,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":609,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":607,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":963,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":954,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1172,"title":{},"body":{"index.html":{}}}],["x",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entity\n                                \n                                \n                                        entityDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AbstractControllerOptions {\n  entity: { new (): TEntity };\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerOptions-1.html":{"url":"interfaces/AbstractControllerOptions-1.html","title":"interface - AbstractControllerOptions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:         DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractModel.html":{"url":"interfaces/AbstractModel.html","title":"interface - AbstractModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/abstract.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface AbstractModel extends Document {\n  createdAt?: Date;\n  updatedAt?: Date;\n  id?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractService.html":{"url":"classes/AbstractService.html","title":"class - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                count\n                            \n                            \n                                    Abstract\n                                    Async\n                                countAsync\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                    Async\n                                findAllAsync\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                    Async\n                                findByIdAsync\n                            \n                            \n                                    Abstract\n                                findOne\n                            \n                            \n                                    Abstract\n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Abstract\n                                hardDelete\n                            \n                            \n                                    Abstract\n                                hardDeleteById\n                            \n                            \n                                    Abstract\n                                insert\n                            \n                            \n                                    Abstract\n                                    Async\n                                insertAsync\n                            \n                            \n                                    Abstract\n                                softDelete\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                    Abstract\n                                softDeleteById\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Abstract\n                                update\n                            \n                            \n                                    Abstract\n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insert(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '@typegoose/typegoose';\nimport { Query } from 'mongoose';\n\nimport { QueryItem, QueryList } from '../types';\nimport { BaseEntity } from '../models/base.entity';\n\nexport abstract class AbstractService {\n  abstract insert(entity: T): Promise>;\n  abstract async insertAsync(entity: T): Promise>;\n\n  abstract findAll(filter: any): QueryList;\n  abstract async findAllAsync(filter: any): Promise>>;\n\n  abstract findOne(filter: any): QueryItem;\n  abstract async findOneAsync(filter: any): Promise>;\n\n  abstract findById(id: string): QueryItem;\n  abstract async findByIdAsync(id: string): Promise>;\n\n  abstract hardDelete(filter: any): QueryItem;\n  abstract async softDeleteAsync(filter: any): Promise;\n\n  abstract hardDeleteById(id: string): QueryItem;\n  abstract async softDeleteByIdAsync(id: string): Promise>;\n\n  abstract softDelete(filter: any): QueryItem;\n  abstract softDeleteById(id: string): QueryItem;\n\n  abstract update(id: string, item: Partial): QueryItem;\n  abstract async updateAsync(\n    id: string,\n    item: Partial,\n  ): Promise>;\n\n  abstract count(filter: any): Query;\n  abstract async countAsync(filter: any): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractVm.html":{"url":"classes/AbstractVm.html","title":"class - AbstractVm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractVm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/abstract-vm.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String, format: 'date-time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String, format: 'date-time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class AbstractVm {\n  @ApiPropertyOptional({ type: String, format: 'date-time' })\n  createdAt?: Date;\n\n  @ApiPropertyOptional({ type: String, format: 'date-time' })\n  updatedAt?: Date;\n\n  @ApiPropertyOptional() id?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                email\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsUrl, IsEmail } from 'class-validator';\n\nexport class AcctVerifyDto {\n  @IsEmail()\n  email: string;\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/api-exception.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/api-exception.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport configuration from '../config/configuration';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number,\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = configuration().environment === 'production' ? null : stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AuthController } from './auth/auth.controller';\nimport { AuthModule } from './auth/auth.module';\nimport { MailModule } from './mail/mail.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { envValidation } from './shared/validations/env.validation';\nimport { UsersModule } from './users/users.module';\nimport { ProfileModule } from './profile/profile.module';\n\nconst config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    // allowUnknown: false,\n    abortEarly: true,\n  },\n});\n@Module({\n  imports: [\n    SharedModule.forRoot(),\n    AuthModule,\n    UsersModule,\n    config,\n    MongooseModule.forRoot(configuration().database.uri, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n    }),\n    MailModule,\n    ProfileModule,\n  ],\n\n  controllers: [AuthController],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(_: LoginReqDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  ConflictException,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotAcceptableException,\n  NotFoundException,\n  Post,\n  Req,\n  UnauthorizedException,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { Request } from 'express';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport { MailService } from '../mail/mail.service';\nimport { ApiException } from '../shared/models/api-exception.model';\nimport { TokenType } from '../shared/models/temporary-token.entity';\nimport { RegisterUserDto } from '../users/models/dto/register-user.dto';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport configuration from 'src/shared/config/configuration';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService,\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(@Body() _: LoginReqDto, @Req() req: Request) {\n    req.user;\n    return this.authService.login(req.user as User);\n  }\n  @Post('register')\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    await this.usersService.insertAsync(user);\n    return user.id;\n  }\n\n  @Post('send-email-confirmation-token')\n  @ApiOkResponse()\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto) {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new NotFoundException('User with email does not exist');\n    if (exist.isEmailVerified)\n      throw new BadRequestException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken(\n      exist.id,\n      TokenType.EMAIL,\n      60 * 24,\n    );\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${exist.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: exist.email,\n      html,\n      date: new Date(Date.now()),\n    });\n  }\n  @Post('send-password-reset-token')\n  @ApiOkResponse()\n  async sendForgotPwToken(@Body() input: AcctVerifyDto) {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist)\n      throw new NotAcceptableException('User with email does not exist');\n    const token = await this.authService.generateTempToken(\n      exist.id,\n      TokenType.PASSWORD,\n      10,\n    );\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${exist.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: exist.email,\n      html,\n      date: new Date(Date.now()),\n    });\n  }\n  @Post('confirm-email')\n  @ApiOkResponse()\n  async verifyEmailToken(@Body() input: ValidateTokenInput) {\n    const { email, token } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new NotFoundException('User does not exist');\n    if (exist.isEmailVerified)\n      throw new BadRequestException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: exist.id,\n      plainToken: token,\n    });\n  }\n  @Post('reset-password')\n  @ApiOkResponse()\n  async resetPassword(@Body() input: ResetPassInput) {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthHandler.html":{"url":"injectables/AuthHandler.html","title":"injectable - AuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/handlers/auth.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleUserRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleUserRegistered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUserRegistered(data: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(AuthEventEnum.UserRegistered)\n                \n            \n\n            \n                \n                    Defined in src/auth/handlers/auth.handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { EventPattern } from '@nestjs/microservices';\n\nimport { AuthEventEnum } from '../models/auth.enums';\n\n@Injectable()\nexport class AuthHandler {\n  @EventPattern(AuthEventEnum.UserRegistered)\n  async handleUserRegistered(data: Record) {\n    // business logic\n    Logger.debug(data, 'handler');\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthHandler\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\n\nimport configuration from '../shared/config/configuration';\nimport { TemporaryToken } from '../shared/models/temporary-token.entity';\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './auth.service';\nimport { AuthHandler } from './handlers/auth.handler';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { TempTokensService } from './temp-token.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TemporaryToken.modelName, schema: TemporaryToken.schema },\n    ]),\n\n    PassportModule.register({ defaultStrategy: 'jwt', session: true }),\n    JwtModule.register({ secret: configuration().jwtSecret }),\n    UsersModule,\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    SessionSerializer,\n    AuthHandler,\n    TempTokensService,\n  ],\n  exports: [AuthService, JwtModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                login\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(userId: string, type: TokenType, expiresInMins: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    expiresInMins\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoginResDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(validateEmailInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validateEmailInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  Logger,\n  OnModuleInit,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport { randomBytes } from 'crypto';\n\nimport { TokenType } from '../shared/models/temporary-token.entity';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService,\n    private readonly jwtService: JwtService,\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit() {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new UnauthorizedException('Invalid login attempt');\n    if (!user.isEmailVerified)\n      throw new UnauthorizedException('Please confirm your email');\n    try {\n      const isValid = await bcrypt.compare(pw, user.password);\n      if (!isValid) throw new UnauthorizedException('Invalid login attempt');\n    } catch (error) {\n      Logger.error(error);\n      throw new UnauthorizedException('Invalid login attempt');\n    }\n    return user;\n  }\n\n  login(user: User): LoginResDto {\n    const expiresIn = 60 * 60 * 24;\n    const payload: JwtPayload = {\n      email: user.email,\n      id: user.id,\n      role: user.role,\n    };\n    const result = this.jwtService.sign(payload, { expiresIn });\n    return {\n      accessToken: result,\n      expireInSeconds: expiresIn,\n      userId: user.id,\n    };\n  }\n\n  async pub() {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken(\n    userId: string,\n    type: TokenType,\n    expiresInMins: number,\n  ) {\n    const exist = await this.tokenService.findOneAsync({ user: userId, type });\n    if (exist) return;\n\n    const plainToken = randomBytes(64).toString('hex');\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: userId as any,\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(validateEmailInput: {\n    userId: string;\n    plainToken: string;\n  }) {\n    const { userId, plainToken } = validateEmailInput;\n    const exist = await this.validateToken(userId, TokenType.EMAIL, plainToken);\n\n    const doc = exist.user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(exist.id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }) {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const exist = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken,\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = exist.user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(exist.id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string,\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n    if (!exist) throw new BadRequestException('Token expired');\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw new BadRequestException('Invalid token');\n    } catch (error) {\n      throw new BadRequestException('Invalid token');\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:72\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:63\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:54\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { Writable } from '../types';\n\nexport abstract class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        },\n      },\n    });\n  }\n\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: parseInt(process.env.PORT, 10),\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN,\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: parseInt(process.env.DATABASE_PORT, 10),\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI,\n  },\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, ['id']) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserService.html":{"url":"injectables/CurrentUserService.html","title":"injectable - CurrentUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/current-user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/current-user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/current-user.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CurrentUserService {\n  constructor(@Optional() @Inject(REQUEST) private readonly req: Request) {}\n  get currentUser(): string | null {\n    return !this.req || !this.req.user ? null : this.req.user['id'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: parseInt(process.env.PORT, 10),\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN,\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: parseInt(process.env.DATABASE_PORT, 10),\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI,\n  },\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultAuthObject {\n  find?: boolean;\n  findById?: boolean;\n  create?: boolean;\n  update?: boolean;\n  delete?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../models/api-exception.model';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode,\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport configuration from '../../shared/config/configuration';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  email: string;\n  role: string;\n  id: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret,\n    });\n  }\n\n  async validate(payload: any): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/local-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {\n  async canActivate(context: ExecutionContext) {\n    const isValid = (await super.canActivate(context)) as boolean;\n    const request = context.switchToHttp().getRequest();\n    await super.logIn(request);\n    return isValid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private moduleRef: ModuleRef) {\n    super({\n      passReqToCallback: true,\n      usernameField: 'email',\n    });\n  }\n\n  async validate(request: Request, username: string, password: string) {\n    const contextId = ContextIdFactory.getByRequest(request);\n    // \"AuthService\" is a request-scoped provider\n    const authService = await this.moduleRef.resolve(AuthService, contextId);\n    const user = await authService.validateUser(username, password);\n    if (!user.isActive) throw new UnauthorizedException();\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class LoginReqDto {\n  @IsEmail()\n  email: string;\n  @IsNotEmpty()\n  password: string;\n}\n\nexport class LoginResDto {\n  accessToken: string;\n  expireInSeconds: number;\n  userId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                expireInSeconds\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expireInSeconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class LoginReqDto {\n  @IsEmail()\n  email: string;\n  @IsNotEmpty()\n  password: string;\n}\n\nexport class LoginResDto {\n  accessToken: string;\n  expireInSeconds: number;\n  userId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\n\nimport configuration from '../shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain,\n        },\n      }),\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: parseInt(process.env.PORT, 10),\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN,\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: parseInt(process.env.DATABASE_PORT, 10),\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI,\n  },\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedReqDto.html":{"url":"classes/PagedReqDto.html","title":"class - PagedReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-req.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional } from 'class-validator';\n\nexport class PagedReqDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  search?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserResDto.html":{"url":"classes/PagedUserResDto.html","title":"class - PagedUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/paged-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaginatedResDto } from '../../../shared/models/dto/paged-res.dto';\nimport { UserDto } from './user.dto';\n\nexport class PagedUserResDto extends PaginatedResDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordToken.html":{"url":"classes/PasswordToken.html","title":"class - PasswordToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/pass-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TemporaryToken\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:72\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:63\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:54\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions } from '@typegoose/typegoose';\n\nimport { TemporaryToken } from '../../shared/models/temporary-token.entity';\n\n@modelOptions({ options: { customName: 'password_reset_tokens' } })\n@index({ createdAt: 1 }, { expireAfterSeconds: 1 })\nexport class PasswordToken extends TemporaryToken {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { ProfileService } from './profile.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.profileService.getProfileAsync(req.user['email']);\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule],\n  providers: [ProfileService],\n  controllers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfileAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfileAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileAsync(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly usersService: UsersService) {}\n  async getProfileAsync(email: string): Promise {\n    return this.usersService.findOneAsync({ email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, ['id', 'role']) {\n  @MinLength(6)\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                email\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CurrentUserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/shared.module.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\n\nimport { AbstractService, BaseService, CurrentUserService } from './services';\n\n@Global()\n@Module({ providers: [CurrentUserService] })\nexport class SharedModule {\n  static forRoot(): DynamicModule {\n    return {\n      module: SharedModule,\n      providers: [{ provide: AbstractService, useClass: BaseService }],\n      global: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:72\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:63\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:54\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from './base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'Password',\n  EMAIL = 'Email',\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true,\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:72\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:63\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:54\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:75\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport { index, pre, prop } from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Writable } from '../../shared/types';\n\nexport enum UserRole {\n  MENTEE = 'Mentee',\n  MENTOR = 'Mentor',\n  ADMIN = 'Admin',\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false,\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false,\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false,\n  })\n  readonly email!: string;\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE,\n  })\n  readonly role: UserRole = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass() {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail() {\n    (this as Writable).isEmailVerified = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()@IsEmail()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()@IsAlpha()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()@IsAlpha()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: UserRole})@IsEnum(UserRole)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport {\n  IsAlpha,\n  IsEmail,\n  IsEnum,\n  IsMongoId,\n  MaxLength,\n} from 'class-validator';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { columnSize } from '../../../shared/constants';\nimport { UserRole } from '../user.entity';\n\nexport class UserDto {\n  @Expose()\n  @IsMongoId()\n  @ApiProperty()\n  id: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  @IsAlpha()\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  @IsAlpha()\n  lastName: string;\n  @Expose()\n  @ApiProperty()\n  @IsEmail()\n  @MaxLength(columnSize.length64)\n  email: string;\n  @ApiProperty({ enum: UserRole })\n  @IsEnum(UserRole)\n  @Expose()\n  role: UserRole = UserRole.MENTEE;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: PagedReqDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({type: PagedUserResDto})@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                PagedReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiOkResponse,\n  ApiTags,\n  ApiBearerAuth,\n} from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { AbstractCrudController } from '../shared/base.controller';\nimport { ApiException } from '../shared/models/api-exception.model';\nimport { PagedReqDto } from '../shared/models/dto/paged-req.dto';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserResDto } from './models/dto/paged-user.dto';\nimport { UserDto } from './models/dto/user.dto';\nimport { User } from './models/user.entity';\nimport { UsersService } from './users.service';\n\n@ApiTags('Users')\n@Controller('users')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class UsersController extends AbstractCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n}) {\n  constructor(private readonly usersService: UsersService) {\n    super(usersService);\n  }\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    user.setRandomPass();\n    await this.usersService.insertAsync(user);\n\n    // TODO: Send password reset email\n    return user.id;\n  }\n\n  @Get()\n  @ApiOkResponse({ type: PagedUserResDto })\n  @ApiBadRequestResponse({ type: ApiException })\n  async findAll(@Query() query: PagedReqDto) {\n    const { skip, limit, search } = query;\n    const entities = await this.usersService\n      .findAll(search && { $text: { $search: search } })\n      .limit(limit)\n      .skip(skip);\n    const totalCount = await this.usersService.countAsync();\n    const items = plainToClass(UserDto, entities, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true,\n    });\n\n    return { totalCount, items };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.modelName, schema: User.schema }]),\n  ],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class ValidateTokenInput {\n  @IsEmail()\n  email: string;\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/handlers/auth.handler.ts\n            \n            injectable\n            AuthHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/pass-token.entity.ts\n            \n            class\n            PasswordToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/62)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/base.controller.ts\n            \n            function\n            AbstractCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-auth.controller.ts\n            \n            function\n            abstractControllerWithAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-swagger.controller.ts\n            \n            function\n            abstractControllerWithSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract.controller.ts\n            \n            function\n            abstractControllerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/abstract-vm.model.ts\n            \n            class\n            AbstractVm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/abstract.model.ts\n            \n            interface\n            AbstractModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/api-exception.model.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-req.dto.ts\n            \n            class\n            PagedReqDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-res.dto.ts\n            \n            function\n            PaginatedResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/shared/services/abstract.service.ts\n            \n            class\n            AbstractService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/shared/services/current-user.service.ts\n            \n            injectable\n            CurrentUserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/paged-user.dto.ts\n            \n            class\n            PagedUserResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/62)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.0.9\n        \n            @nestjs/config : ^0.4.0\n        \n            @nestjs/core : ^7.0.9\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/microservices : ^7.0.9\n        \n            @nestjs/mongoose : ^6.4.0\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.0.9\n        \n            @nestjs/schedule : ^0.3.1\n        \n            @nestjs/swagger : ^4.5.3\n        \n            @typegoose/typegoose : ^7.0.0\n        \n            bcrypt : ^4.0.1\n        \n            bull : ^3.13.0\n        \n            cache-manager : ^3.2.1\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.22.0\n        \n            mongoose : ^5.9.11\n        \n            nodemailer : ^6.4.6\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            ObjectMapping   (src/.../object-mapping.enum.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/shared/interfaces/object-mapping.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ObjectMapping\n                    \n                \n                        \n                            \n                                 Mongoose\n                            \n                        \n                        \n                            \n                                Value : mongoose\n                            \n                        \n            \n        \n\n    src/shared/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Password\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : Mentee\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : Mentor\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            abstractControllerFactory   (src/.../abstract.controller.ts)\n                        \n                        \n                            abstractControllerWithAuth   (src/.../abstract-with-auth.controller.ts)\n                        \n                        \n                            abstractControllerWithSwagger   (src/.../abstract-with-swagger.controller.ts)\n                        \n                        \n                            AbstractCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PaginatedResDto   (src/.../paged-res.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/abstract.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerFactory\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerFactory(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/abstract-with-auth.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerWithAuth\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerWithAuth(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/abstract-with-swagger.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerWithSwagger\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerWithSwagger(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AbstractCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nAbstractCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-res.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PaginatedResDto\n                        \n                        \n                    \n                \n            \n            \n                \nPaginatedResDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n\nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support \nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\n Note: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the master branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            IdType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdType\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            defaultAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10,\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthEnable: boolean,\n  decorator: MethodDecorator,\n): MethodDecorator => {\n  return (target: object, key: string | symbol, value: any): any => {\n    if (isAuthEnable) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    // allowUnknown: false,\n    abortEarly: true,\n  },\n})\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DefaultAuthObject\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  find: true,\n  findById: true,\n  create: true,\n  update: true,\n  delete: true,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean,\n): DefaultAuthObject => {\n  let auth = null;\n\n  if (!!authObj) {\n    return auth;\n  }\n\n  if (authObj === true) {\n    auth = defaultAuthObj;\n  } else if (authObj === false) {\n    auth = {\n      find: false,\n      findById: false,\n      create: false,\n      update: false,\n      delete: false,\n    };\n  } else {\n    auth = {\n      ...defaultAuthObj,\n      ...authObj,\n    };\n  }\n\n  return auth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    ROOT_URL: Joi.string()\n      .uri()\n      .required(),\n    REDIS_SERVER_URL: Joi.string()\n      .uri()\n      .default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string()\n      .valid('true', 'false')\n      .default('true'),\n    APP_EMAIL: Joi.string()\n      .email()\n      .required(),\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bearerAuthName: 'x-auth',\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
